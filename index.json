{
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | RolePlus Docs",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/RolePlus.CustomItems.CustomItemType.html": {
    "href": "api/RolePlus.CustomItems.CustomItemType.html",
    "title": "Enum CustomItemType | RolePlus Docs",
    "keywords": "Enum CustomItemType All available custom items. Namespace : RolePlus.CustomItems Assembly : RolePlus.dll Syntax public enum CustomItemType : uint Fields Name Description Airstrike Airstrike. AK096 AK-096. B23R B23R. BioRadar Biometric radar. BoltSniper Bolt sniper. Brecci 205 Brecci. C4 C4 Charge. Curse Curse. Detonator Detonator. EMPGrenade EMP grenade. GasGrenade Gas grenade. GrenadeLauncher Grenade launcher. Hm101 HM-101 Medical Pistol. Knife Knife. LightsController Lights controller. M052Launcher M052 Launcher. M363RemoteDetonator M363 Remote detonator. Minigun M134 Minigun. Mors Mors Bolt-Action sniper. NightVisor Night visor. None None. OneHandedCannon One handed cannon. PTS06 PTS-06 Poison pistol. ReinforcedArmor Reinforced armor. Scp127 SCP-127. Scp1499 SCP-1499. Scp2818 SCP-2818. Scp714 SCP-714. ScrambleVisor Scramble visor. SMGAntiMatter SMG Anti-Matter. SNavUltimate S-Nav Ultimate. SP096A1 SP-096-A1. Striker Striker. Taser Taser. Tranquillizer Tranquillizer pistol. VoidGrenade Void grenade. Xm42 XM-42 Flamethrower. ZeusCannon Zeus cannon."
  },
  "api/RolePlus.CustomItems.html": {
    "href": "api/RolePlus.CustomItems.html",
    "title": "Namespace RolePlus.CustomItems | RolePlus Docs",
    "keywords": "Namespace RolePlus.CustomItems Enums CustomItemType All available custom items."
  },
  "api/RolePlus.CustomRoles.CustomRoleType.html": {
    "href": "api/RolePlus.CustomRoles.CustomRoleType.html",
    "title": "Enum CustomRoleType | RolePlus Docs",
    "keywords": "Enum CustomRoleType All available custom roles. Namespace : RolePlus.CustomRoles Assembly : RolePlus.dll Syntax public enum CustomRoleType : uint Fields Name Description AlphaRrh AlphaRrh. Ammunitioner Ammunitioner. AraOrun AraOrun. Assassin Assassin. Birdwatcher Birdwatcher. BlackQueen BlackQueen. DrBright DrBright. Dynamiter Dynamiter. Engineer Engineer. FacilityManager FacilityManager. FireEater FireEater. Ghostbuster Ghostbuster. Hacker Hacker. HazMatter HazMatter. Infiltrated Infiltrated. Jammer Jammer. Juggernaut Juggernaut. MajorScientist MajorScientist. Medic Medic. None None. Recon Recon. Samsara Samsara. Scp053 Scp053. Scp060 Scp060. Scp069 Scp069. Scp230 Scp230. Scp2301 Scp2301. Scp2521 Scp2521. Scp343 Scp343. Scp457 Scp457. Scp550 Scp550. Scp575 Scp575. Scp610 Scp610. Scp650 Scp650. Scp682 Scp682. Scp966 Scp966. Scp999 Scp999. Scramble Scramble. SecondLieutenant SecondLieutenant. SerpentHand SerpentHand. Sniper Sniper. Specialist Specialist. Spectator Spectator. Spy Spy. Tank Tank. TheDreamTeam TheDreamTeam. TheWandsmen TheWandsmen. Urai Urai."
  },
  "api/RolePlus.CustomRoles.html": {
    "href": "api/RolePlus.CustomRoles.html",
    "title": "Namespace RolePlus.CustomRoles | RolePlus Docs",
    "keywords": "Namespace RolePlus.CustomRoles Enums CustomRoleType All available custom roles."
  },
  "api/RolePlus.ExternModule.API.Engine.Components.AActorComponent.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Components.AActorComponent.html",
    "title": "Class AActorComponent | RolePlus Docs",
    "keywords": "Class AActorComponent AActorComponent is the base class for components that define reusable behavior that can be added to different types of object. Inheritance System.Object TypeCastObject < UObject > UObject AActor AActorComponent ASkeletalMeshComponent Inherited Members AActor.DefaultFixedTickRate AActor.ComponentsInParent AActor.ComponentsInChildren AActor.Transform AActor.Position AActor.Rotation AActor.Scale AActor.CanEverTick AActor.FixedTickRate AActor.OnBeginPlay() AActor.Tick() AActor.OnEndPlay() AActor.SubscribeEvents() AActor.UnsubscribeEvents() AActor.OnBeginDestroy() AActor.AttachTo(AActor, GameObject) AActor.AttachTo(AActor, AActor) AActor.AddComponent<T>(String) AActor.AddComponent(Type, String) AActor.GetComponent<T>() AActor.GetComponent(Type) AActor.TryGetComponent<T>(T) AActor.TryGetComponent(Type, AActor) AActor.HasComponent<T>() AActor.HasComponent(Type) UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Components Assembly : RolePlus.dll Syntax public abstract class AActorComponent : AActor Constructors | Improve this Doc View Source AActorComponent() Initializes a new instance of the AActorComponent class. Declaration protected AActorComponent() | Improve this Doc View Source AActorComponent(GameObject) Initializes a new instance of the AActorComponent class. Declaration protected AActorComponent(GameObject gameObject = null) Parameters Type Name Description GameObject gameObject | Improve this Doc View Source AActorComponent(GameObject, Vector3, Vector3, Quaternion) Initializes a new instance of the AActorComponent class. Declaration protected AActorComponent(GameObject gameObject, Vector3 scale, Vector3 position, Quaternion rotation) Parameters Type Name Description GameObject gameObject Vector3 scale Vector3 position Quaternion rotation Properties | Improve this Doc View Source Controllers Gets or sets the AActorFrameComponent . Declaration public AActorFrameComponent[] Controllers { get; } Property Value Type Description AActorFrameComponent [] Operators | Improve this Doc View Source Equality(AActorComponent, AActorComponent) Compares two operands: AActorComponent and AActorComponent . Declaration public static bool operator ==(AActorComponent left, AActorComponent right) Parameters Type Name Description AActorComponent left The AActorComponent to compare. AActorComponent right The AActorComponent to compare. Returns Type Description System.Boolean true if the values are equal. | Improve this Doc View Source Inequality(AActorComponent, AActorComponent) Compares two operands: AActorComponent and AActorComponent . Declaration public static bool operator !=(AActorComponent left, AActorComponent right) Parameters Type Name Description AActorComponent left The AActorComponent to compare. AActorComponent right The AActorComponent to compare. Returns Type Description System.Boolean true if the values are not equal. Extension Methods ComponentExtensions.AddActorComponent<T>(AActor, String)"
  },
  "api/RolePlus.ExternModule.API.Engine.Components.AActorFrameComponent.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Components.AActorFrameComponent.html",
    "title": "Class AActorFrameComponent | RolePlus Docs",
    "keywords": "Class AActorFrameComponent AActorFrameComponent is the base class for AActorComponent instances which need to be managed internally. Inheritance System.Object TypeCastObject < UObject > UObject AActor AActorFrameComponent AActorHealthComponent AInteractableFrameComponent Inherited Members AActor.DefaultFixedTickRate AActor.ComponentsInParent AActor.ComponentsInChildren AActor.Transform AActor.Position AActor.Rotation AActor.Scale AActor.CanEverTick AActor.FixedTickRate AActor.OnBeginPlay() AActor.Tick() AActor.OnEndPlay() AActor.SubscribeEvents() AActor.UnsubscribeEvents() AActor.OnBeginDestroy() AActor.AttachTo(AActor, GameObject) AActor.AttachTo(AActor, AActor) AActor.AddComponent<T>(String) AActor.AddComponent(Type, String) AActor.GetComponent<T>() AActor.GetComponent(Type) AActor.TryGetComponent<T>(T) AActor.TryGetComponent(Type, AActor) AActor.HasComponent<T>() AActor.HasComponent(Type) UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Components Assembly : RolePlus.dll Syntax public abstract class AActorFrameComponent : AActor Constructors | Improve this Doc View Source AActorFrameComponent() Initializes a new instance of the AActorFrameComponent class. Declaration public AActorFrameComponent() | Improve this Doc View Source AActorFrameComponent(AActorComponent) Initializes a new instance of the AActorFrameComponent class. Declaration protected AActorFrameComponent(AActorComponent root) Parameters Type Name Description AActorComponent root Properties | Improve this Doc View Source RootComponent Gets the root AActorComponent . Declaration public abstract AActorComponent RootComponent { get; protected set; } Property Value Type Description AActorComponent Extension Methods ComponentExtensions.AddActorComponent<T>(AActor, String)"
  },
  "api/RolePlus.ExternModule.API.Engine.Components.AActorHealthComponent.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Components.AActorHealthComponent.html",
    "title": "Class AActorHealthComponent | RolePlus Docs",
    "keywords": "Class AActorHealthComponent A class that handles in-game interactable objects by. Inheritance System.Object TypeCastObject < UObject > UObject AActor AActorFrameComponent AActorHealthComponent AEnvironmentActorHealthComponent Inherited Members AActor.DefaultFixedTickRate AActor.ComponentsInParent AActor.ComponentsInChildren AActor.Transform AActor.Position AActor.Rotation AActor.Scale AActor.CanEverTick AActor.FixedTickRate AActor.OnBeginPlay() AActor.Tick() AActor.OnEndPlay() AActor.SubscribeEvents() AActor.UnsubscribeEvents() AActor.OnBeginDestroy() AActor.AttachTo(AActor, GameObject) AActor.AttachTo(AActor, AActor) AActor.AddComponent<T>(String) AActor.AddComponent(Type, String) AActor.GetComponent<T>() AActor.GetComponent(Type) AActor.TryGetComponent<T>(T) AActor.TryGetComponent(Type, AActor) AActor.HasComponent<T>() AActor.HasComponent(Type) UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Components Assembly : RolePlus.dll Syntax public abstract class AActorHealthComponent : AActorFrameComponent Constructors | Improve this Doc View Source AActorHealthComponent() Initializes a new instance of the AActorHealthComponent class. Declaration public AActorHealthComponent() | Improve this Doc View Source AActorHealthComponent(AActorComponent, Single, Single) Initializes a new instance of the AActorHealthComponent class. Declaration protected AActorHealthComponent(AActorComponent component, float maxHealth, float curHealth) Parameters Type Name Description AActorComponent component System.Single maxHealth System.Single curHealth Properties | Improve this Doc View Source CurHealth Gets or sets the current health. Declaration public virtual float CurHealth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsDamageable Gets or sets a value indicating whether the RootComponent is damageable. Declaration public virtual bool IsDamageable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxHealth Gets or sets the max health. Declaration public virtual float MaxHealth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source RootComponent Declaration public override AActorComponent RootComponent { get; protected set; } Property Value Type Description AActorComponent Overrides AActorFrameComponent.RootComponent Methods | Improve this Doc View Source Damage(Single) Damages the RootComponent . Declaration public abstract bool Damage(float amount) Parameters Type Name Description System.Single amount The damage amount. Returns Type Description System.Boolean true if the RootComponent was successfully damaged; otherwise, false . | Improve this Doc View Source OnDamagingActor(Single) Fired when the RootComponent takes damage. Declaration protected abstract bool OnDamagingActor(float amount) Parameters Type Name Description System.Single amount Returns Type Description System.Boolean Extension Methods ComponentExtensions.AddActorComponent<T>(AActor, String)"
  },
  "api/RolePlus.ExternModule.API.Engine.Components.AEnvironmentActorHealthComponent.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Components.AEnvironmentActorHealthComponent.html",
    "title": "Class AEnvironmentActorHealthComponent | RolePlus Docs",
    "keywords": "Class AEnvironmentActorHealthComponent A class that handles in-game interactable objects by. Inheritance System.Object TypeCastObject < UObject > UObject AActor AActorFrameComponent AActorHealthComponent AEnvironmentActorHealthComponent Implements IDestructible Inherited Members AActorHealthComponent.RootComponent AActorHealthComponent.IsDamageable AActorHealthComponent.MaxHealth AActorHealthComponent.CurHealth AActorHealthComponent.OnDamagingActor(Single) AActor.DefaultFixedTickRate AActor.ComponentsInParent AActor.ComponentsInChildren AActor.Transform AActor.Position AActor.Rotation AActor.Scale AActor.CanEverTick AActor.FixedTickRate AActor.OnBeginPlay() AActor.Tick() AActor.OnEndPlay() AActor.SubscribeEvents() AActor.UnsubscribeEvents() AActor.OnBeginDestroy() AActor.AttachTo(AActor, GameObject) AActor.AttachTo(AActor, AActor) AActor.AddComponent<T>(String) AActor.AddComponent(Type, String) AActor.GetComponent<T>() AActor.GetComponent(Type) AActor.TryGetComponent<T>(T) AActor.TryGetComponent(Type, AActor) AActor.HasComponent<T>() AActor.HasComponent(Type) UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Components Assembly : RolePlus.dll Syntax public abstract class AEnvironmentActorHealthComponent : AActorHealthComponent Constructors | Improve this Doc View Source AEnvironmentActorHealthComponent() Initializes a new instance of the AEnvironmentActorHealthComponent class. Declaration public AEnvironmentActorHealthComponent() | Improve this Doc View Source AEnvironmentActorHealthComponent(AActorComponent, Single, Single) Initializes a new instance of the AEnvironmentActorHealthComponent class. Declaration protected AEnvironmentActorHealthComponent(AActorComponent component, float maxHealth, float curHealth) Parameters Type Name Description AActorComponent component System.Single maxHealth System.Single curHealth Properties | Improve this Doc View Source CenterOfMass Declaration public Vector3 CenterOfMass { get; } Property Value Type Description Vector3 | Improve this Doc View Source IsDestroyed Gets a value indicating whether the AEnvironmentMeshComponent has been damaged and destroyed. Declaration public bool IsDestroyed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source NetworkId Declaration public uint NetworkId { get; } Property Value Type Description System.UInt32 Methods | Improve this Doc View Source Damage(Single) Declaration public override bool Damage(float amount) Parameters Type Name Description System.Single amount Returns Type Description System.Boolean Overrides AActorHealthComponent.Damage(Single) | Improve this Doc View Source Damage(Single, DamageHandlerBase, Vector3) Damages the RootComponent . Declaration public virtual bool Damage(float amount, DamageHandlerBase damageHandler, Vector3 exactHitPos) Parameters Type Name Description System.Single amount The damage amount. DamageHandlerBase damageHandler The damage handler. Vector3 exactHitPos The hit position. Returns Type Description System.Boolean true if the RootComponent was successfully damaged; otherwise, false . | Improve this Doc View Source Damage(Single, PlayerStatsSystem.DamageHandlerBase, Vector3) Declaration public bool Damage(float damage, PlayerStatsSystem.DamageHandlerBase handler, Vector3 exactHitPos) Parameters Type Name Description System.Single damage PlayerStatsSystem.DamageHandlerBase handler Vector3 exactHitPos Returns Type Description System.Boolean | Improve this Doc View Source DestroyEffects() Fired when the health is reduced to zero or lower. Declaration public abstract void DestroyEffects() | Improve this Doc View Source ForceDestroy() Forces the destroy action. Declaration public void ForceDestroy() | Improve this Doc View Source OnDamagedActor(Single, DamageHandlerBase, Vector3) Fired when the actor is damaged. Declaration protected abstract bool OnDamagedActor(float amount, DamageHandlerBase damageHandler, Vector3 exactHitPos) Parameters Type Name Description System.Single amount DamageHandlerBase damageHandler Vector3 exactHitPos Returns Type Description System.Boolean Implements IDestructible Extension Methods ComponentExtensions.AddActorComponent<T>(AActor, String)"
  },
  "api/RolePlus.ExternModule.API.Engine.Components.AEnvironmentMeshComponent.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Components.AEnvironmentMeshComponent.html",
    "title": "Class AEnvironmentMeshComponent | RolePlus Docs",
    "keywords": "Class AEnvironmentMeshComponent A class that handles in-game objects destinated to be used as environmental objects. Inheritance System.Object TypeCastObject < UObject > UObject AActor AActorComponent ASkeletalMeshComponent ASchematicMeshComponent AEnvironmentMeshComponent Implements IAnimatorNative Inherited Members ASchematicMeshComponent.AnimatorsTriggers ASchematicMeshComponent.RootSchematic ASchematicMeshComponent.MeshName ASchematicMeshComponent.Socket ASchematicMeshComponent.Scale ASchematicMeshComponent.Position ASchematicMeshComponent.Rotation ASchematicMeshComponent.IsVisible ASchematicMeshComponent.IsCollidable ASchematicMeshComponent.IAnimatorNative.AnimatorsTriggers ASchematicMeshComponent.CreateDefaultSubobject<T>(GameObject, String, String, Vector3, Vector3, Quaternion, FTransform) ASchematicMeshComponent.FindClosestObjectOfType<T>(Vector3, IEnumerable<SchematicObject>) ASchematicMeshComponent.FindClosestFrameOfType<T>(Vector3, IEnumerable<Pickup>) ASchematicMeshComponent.FindClosestObjectOfType<T>(Vector3) ASchematicMeshComponent.FindClosestObjectOfType<T>(SchematicObject) ASchematicMeshComponent.FindClosestObjectOfType<T>(T) ASchematicMeshComponent.FindClosestFrameOfType<T>(Vector3) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(Vector3, String, IEnumerable<SchematicObject>) ASchematicMeshComponent.FindClosestFrameWithTagOfType<T>(Vector3, String, IEnumerable<Pickup>) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(Vector3, String) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(SchematicObject, String) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(T, String) ASchematicMeshComponent.FindClosestFrameWithTagOfType<T>(T, String) ASchematicMeshComponent.FindClosestObjectsOfType<T>(Vector3, IEnumerable<SchematicObject>, UInt32) ASchematicMeshComponent.FindClosestFramesOfType<T>(Vector3, IEnumerable<Pickup>, UInt32) ASchematicMeshComponent.FindClosestObjectsOfType<T>(Vector3, UInt32) ASchematicMeshComponent.FindClosestObjectsOfType<T>(SchematicObject, UInt32) ASchematicMeshComponent.FindClosestObjectsOfType<T>(T, UInt32) ASchematicMeshComponent.FindClosestFramesOfType<T>(T, UInt32) ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(Vector3, String, UInt32) ASchematicMeshComponent.FindClosestFramesWithTagOfType<T>(Vector3, String, UInt32) ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(Vector3, String, IEnumerable<SchematicObject>, UInt32) ASchematicMeshComponent.FindClosestFramesWithTagOfType<T>(Vector3, String, IEnumerable<Pickup>, UInt32) ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(T, String, UInt32) ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(SchematicObject, String, UInt32) ASchematicMeshComponent.Create(SchematicObject, Vector3, Vector3, Quaternion) ASchematicMeshComponent.ShowBones() ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(IEnumerable<SchematicObject>, String, UInt32) ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(String, UInt32) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(IEnumerable<SchematicObject>, String) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(String) ASchematicMeshComponent.FindClosestFrameWithTagOfType<T>(String) ASchematicMeshComponent.FindClosestObjectsOfType<T>(IEnumerable<SchematicObject>, UInt32) ASchematicMeshComponent.FindClosestObjectsOfType<T>(UInt32) ASchematicMeshComponent.FindClosestFramesOfType<T>(UInt32) ASchematicMeshComponent.FindClosestObjectOfType<T>(IEnumerable<SchematicObject>) ASchematicMeshComponent.FindClosestObjectOfType<T>() ASchematicMeshComponent.FindClosestFrameOfType<T>() ASchematicMeshComponent.Tick() ASchematicMeshComponent.PlayAnimation(String, Boolean) ASchematicMeshComponent.PlayAnimation(String, Boolean, Int32) ASchematicMeshComponent.PlayAnimation(AnimatorParameter, Int32) ASchematicMeshComponent.StopAnimation(Int32) ASchematicMeshComponent.GetAnimations(Animator) ASchematicMeshComponent.GetCurrentAnimation(Animator) ASchematicMeshComponent.GetCurrentAnimation(Animator, AnimatorParameter) ASchematicMeshComponent.GetCurrentAnimation(Animator, String) ASchematicMeshComponent.SetCurrentAnimation(Animator, AnimatorParameter) ASchematicMeshComponent.SetCurrentAnimation(Animator, String, Boolean) ASchematicMeshComponent.TryGetAnimations(Animator, AnimatorParameter[]) ASchematicMeshComponent.OnChangingAnimationState(ChangingAnimationStateEventArgs) ASkeletalMeshComponent.FixedTickRate ASkeletalMeshComponent.ChangeVisibilityAll(Boolean) AActorComponent.Controllers AActor.DefaultFixedTickRate AActor.ComponentsInParent AActor.ComponentsInChildren AActor.Transform AActor.CanEverTick AActor.SubscribeEvents() AActor.UnsubscribeEvents() AActor.OnBeginDestroy() AActor.AttachTo(AActor, GameObject) AActor.AttachTo(AActor, AActor) AActor.AddComponent<T>(String) AActor.AddComponent(Type, String) AActor.GetComponent<T>() AActor.GetComponent(Type) AActor.TryGetComponent<T>(T) AActor.TryGetComponent(Type, AActor) AActor.HasComponent<T>() AActor.HasComponent(Type) UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Components Assembly : RolePlus.dll Syntax public abstract class AEnvironmentMeshComponent : ASchematicMeshComponent, IAnimatorNative Constructors | Improve this Doc View Source AEnvironmentMeshComponent() Initializes a new instance of the AEnvironmentMeshComponent class. Declaration public AEnvironmentMeshComponent() | Improve this Doc View Source AEnvironmentMeshComponent(GameObject) Declaration protected AEnvironmentMeshComponent(GameObject gameObject = null) Parameters Type Name Description GameObject gameObject | Improve this Doc View Source AEnvironmentMeshComponent(FTransform, SchematicObject, Vector3, Vector3, Quaternion) Declaration protected AEnvironmentMeshComponent(FTransform socket, SchematicObject mesh, Vector3 scale, Vector3 position, Quaternion rotation) Parameters Type Name Description FTransform socket SchematicObject mesh Vector3 scale Vector3 position Quaternion rotation | Improve this Doc View Source AEnvironmentMeshComponent(SchematicObject) Initializes a new instance of the AEnvironmentMeshComponent class. Declaration protected AEnvironmentMeshComponent(SchematicObject mesh) Parameters Type Name Description SchematicObject mesh | Improve this Doc View Source AEnvironmentMeshComponent(SchematicObject, Vector3, Vector3, Quaternion) Declaration protected AEnvironmentMeshComponent(SchematicObject mesh, Vector3 scale, Vector3 position, Quaternion rotation) Parameters Type Name Description SchematicObject mesh Vector3 scale Vector3 position Quaternion rotation | Improve this Doc View Source AEnvironmentMeshComponent(Vector3, Quaternion, SchematicObject, Vector3, Vector3, Quaternion) Declaration protected AEnvironmentMeshComponent(Vector3 localPosition, Quaternion localRotation, SchematicObject mesh, Vector3 scale, Vector3 position, Quaternion rotation) Parameters Type Name Description Vector3 localPosition Quaternion localRotation SchematicObject mesh Vector3 scale Vector3 position Quaternion rotation | Improve this Doc View Source AEnvironmentMeshComponent(Vector3, Quaternion, Vector3, SchematicObject, Vector3, Vector3, Quaternion) Declaration protected AEnvironmentMeshComponent(Vector3 localPosition, Quaternion localRotation, Vector3 localScale, SchematicObject mesh, Vector3 scale, Vector3 position, Quaternion rotation) Parameters Type Name Description Vector3 localPosition Quaternion localRotation Vector3 localScale SchematicObject mesh Vector3 scale Vector3 position Quaternion rotation | Improve this Doc View Source AEnvironmentMeshComponent(Vector3, SchematicObject, Vector3, Vector3, Quaternion) Declaration protected AEnvironmentMeshComponent(Vector3 localPosition, SchematicObject mesh, Vector3 scale, Vector3 position, Quaternion rotation) Parameters Type Name Description Vector3 localPosition SchematicObject mesh Vector3 scale Vector3 position Quaternion rotation Properties | Improve this Doc View Source AnimationController Gets the . Declaration public Features.AnimationController AnimationController { get; } Property Value Type Description MapEditorReborn.API.Features.AnimationController | Improve this Doc View Source Blocks Gets a System.Collections.ObjectModel.ObservableCollection<T> of which contains all the parts of the AEnvironmentMeshComponent . Declaration public ObservableCollection<GameObject> Blocks { get; } Property Value Type Description System.Collections.ObjectModel.ObservableCollection < GameObject > | Improve this Doc View Source Data Gets the base object. Declaration public SchematicObjectDataList Data { get; } Property Value Type Description SchematicObjectDataList | Improve this Doc View Source InteractableFrames Gets a System.Collections.Generic.HashSet<T> of containing all the existing pickups related to this AEnvironmentMeshComponent instance. Declaration public HashSet<AInteractableFrameComponent> InteractableFrames { get; } Property Value Type Description System.Collections.Generic.HashSet < AInteractableFrameComponent > | Improve this Doc View Source InteractionCooldown Gets or sets the interaction cooldown which determines whether an interaction can be computed. Declaration public virtual float InteractionCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsInteractable Gets or sets value indicating whether the AEnvironmentMeshComponent is interactable. Declaration public virtual bool IsInteractable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRoot Gets a value indicating whether the object is the root schematic. Declaration public bool IsRoot { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRotatable Gets a value indicating whether the AEnvironmentMeshComponent is rotable. Declaration public bool IsRotatable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsScalable Gets a value indicating whether the AEnvironmentMeshComponent is scalable. Declaration public bool IsScalable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source NetworkIdentities Gets a System.Collections.ObjectModel.ReadOnlyCollection<T> of Mirror.NetworkIdentity which contains all the parts' identity of the AEnvironmentMeshComponent . Declaration public ReadOnlyCollection<NetworkIdentity> NetworkIdentities { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < Mirror.NetworkIdentity > | Improve this Doc View Source RelativePosition Gets the relative position. Declaration public Vector3 RelativePosition { get; } Property Value Type Description Vector3 | Improve this Doc View Source RelativeRotation Gets the relative rotation. Declaration public Vector3 RelativeRotation { get; } Property Value Type Description Vector3 | Improve this Doc View Source Room Gets the in which the AEnvironmentMeshComponent is located. Declaration public Room Room { get; } Property Value Type Description Room | Improve this Doc View Source RoomType Gets the of the AEnvironmentMeshComponent . Declaration public RoomType RoomType { get; } Property Value Type Description RoomType | Improve this Doc View Source SerializedObject Gets the base object. Declaration public SchematicSerializable SerializedObject { get; } Property Value Type Description SchematicSerializable Methods | Improve this Doc View Source OnBeginPlay() Declaration protected override void OnBeginPlay() Overrides ASchematicMeshComponent.OnBeginPlay() | Improve this Doc View Source OnEndPlay() Declaration protected override void OnEndPlay() Overrides ASchematicMeshComponent.OnEndPlay() | Improve this Doc View Source OnInteractingObject(InteractingObjectEventArgs) Declaration protected virtual void OnInteractingObject(InteractingObjectEventArgs ev) Parameters Type Name Description InteractingObjectEventArgs ev | Improve this Doc View Source UpdateInteractableItems(Boolean, String[]) Declaration public void UpdateInteractableItems(bool shouldBeSpawned, params string[] animStates) Parameters Type Name Description System.Boolean shouldBeSpawned System.String [] animStates | Improve this Doc View Source UpdateObject() Updates all the properties of the current AEnvironmentMeshComponent instance. Declaration public void UpdateObject() Implements IAnimatorNative Extension Methods ComponentExtensions.AddActorComponent<T>(AActor, String)"
  },
  "api/RolePlus.ExternModule.API.Engine.Components.AInteractableFrameComponent.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Components.AInteractableFrameComponent.html",
    "title": "Class AInteractableFrameComponent | RolePlus Docs",
    "keywords": "Class AInteractableFrameComponent A class that handles in-game interactable objects by. Inheritance System.Object TypeCastObject < UObject > UObject AActor AActorFrameComponent AInteractableFrameComponent Inherited Members AActor.DefaultFixedTickRate AActor.ComponentsInParent AActor.ComponentsInChildren AActor.Transform AActor.Position AActor.Rotation AActor.Scale AActor.CanEverTick AActor.FixedTickRate AActor.Tick() AActor.SubscribeEvents() AActor.UnsubscribeEvents() AActor.OnBeginDestroy() AActor.AttachTo(AActor, GameObject) AActor.AttachTo(AActor, AActor) AActor.AddComponent<T>(String) AActor.AddComponent(Type, String) AActor.GetComponent<T>() AActor.GetComponent(Type) AActor.TryGetComponent<T>(T) AActor.TryGetComponent(Type, AActor) AActor.HasComponent<T>() AActor.HasComponent(Type) UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Components Assembly : RolePlus.dll Syntax public class AInteractableFrameComponent : AActorFrameComponent Constructors | Improve this Doc View Source AInteractableFrameComponent() Initializes a new instance of the AInteractableFrameComponent class. Declaration public AInteractableFrameComponent() | Improve this Doc View Source AInteractableFrameComponent(IEnumerable<Pickup>, AActorComponent) Initializes a new instance of the AInteractableFrameComponent class. Declaration public AInteractableFrameComponent(IEnumerable<Pickup> pickups, AActorComponent component) Parameters Type Name Description System.Collections.Generic.IEnumerable < Pickup > pickups AActorComponent component Properties | Improve this Doc View Source Pickups A System.Collections.Generic.List<T> of containing all the managed pickups. Declaration public List<Pickup> Pickups { get; set; } Property Value Type Description System.Collections.Generic.List < Pickup > | Improve this Doc View Source RootComponent Gets the root AActorComponent . Declaration public override AActorComponent RootComponent { get; protected set; } Property Value Type Description AActorComponent Overrides AActorFrameComponent.RootComponent Methods | Improve this Doc View Source Check(Pickup) Checks whether the given object is managed by the current AInteractableFrameComponent instance. Declaration public bool Check(Pickup pickup) Parameters Type Name Description Pickup pickup The pickup to check. Returns Type Description System.Boolean | Improve this Doc View Source OnBeginPlay() Declaration protected override void OnBeginPlay() Overrides AActor.OnBeginPlay() | Improve this Doc View Source OnEndPlay() Declaration protected override void OnEndPlay() Overrides AActor.OnEndPlay() Extension Methods ComponentExtensions.AddActorComponent<T>(AActor, String)"
  },
  "api/RolePlus.ExternModule.API.Engine.Components.ASchematicMeshComponent.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Components.ASchematicMeshComponent.html",
    "title": "Class ASchematicMeshComponent | RolePlus Docs",
    "keywords": "Class ASchematicMeshComponent The base class for custom meshes. Inheritance System.Object TypeCastObject < UObject > UObject AActor AActorComponent ASkeletalMeshComponent ASchematicMeshComponent AEnvironmentMeshComponent CharacterMeshComponent ItemMeshComponent Implements IAnimatorNative Inherited Members ASkeletalMeshComponent.FixedTickRate ASkeletalMeshComponent.ChangeVisibilityAll(Boolean) AActorComponent.Controllers AActor.DefaultFixedTickRate AActor.ComponentsInParent AActor.ComponentsInChildren AActor.Transform AActor.CanEverTick AActor.SubscribeEvents() AActor.UnsubscribeEvents() AActor.OnBeginDestroy() AActor.AttachTo(AActor, GameObject) AActor.AttachTo(AActor, AActor) AActor.AddComponent<T>(String) AActor.AddComponent(Type, String) AActor.GetComponent<T>() AActor.GetComponent(Type) AActor.TryGetComponent<T>(T) AActor.TryGetComponent(Type, AActor) AActor.HasComponent<T>() AActor.HasComponent(Type) UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Components Assembly : RolePlus.dll Syntax public class ASchematicMeshComponent : ASkeletalMeshComponent, IAnimatorNative Constructors | Improve this Doc View Source ASchematicMeshComponent() Initializes a new instance of the ASchematicMeshComponent class. Declaration protected ASchematicMeshComponent() | Improve this Doc View Source ASchematicMeshComponent(GameObject) Declaration protected ASchematicMeshComponent(GameObject gameObject = null) Parameters Type Name Description GameObject gameObject | Improve this Doc View Source ASchematicMeshComponent(GameObject, String) Declaration protected ASchematicMeshComponent(GameObject gameObject, string meshName) Parameters Type Name Description GameObject gameObject System.String meshName | Improve this Doc View Source ASchematicMeshComponent(FTransform, SchematicObject, Vector3, Vector3, Quaternion) Initializes a new instance of the ASchematicMeshComponent class. Declaration protected ASchematicMeshComponent(FTransform socket, SchematicObject mesh, Vector3 scale, Vector3 position, Quaternion rotation) Parameters Type Name Description FTransform socket SchematicObject mesh Vector3 scale Vector3 position Quaternion rotation | Improve this Doc View Source ASchematicMeshComponent(SchematicObject, Vector3, Vector3, Quaternion) Initializes a new instance of the ASchematicMeshComponent class. Declaration protected ASchematicMeshComponent(SchematicObject mesh, Vector3 scale, Vector3 position, Quaternion rotation) Parameters Type Name Description SchematicObject mesh Vector3 scale Vector3 position Quaternion rotation | Improve this Doc View Source ASchematicMeshComponent(String, Vector3, Vector3, Quaternion) Initializes a new instance of the ASchematicMeshComponent class. Declaration protected ASchematicMeshComponent(string meshName, Vector3 scale, Vector3 position, Quaternion rotation) Parameters Type Name Description System.String meshName Vector3 scale Vector3 position Quaternion rotation | Improve this Doc View Source ASchematicMeshComponent(Vector3, Quaternion, SchematicObject, Vector3, Vector3, Quaternion) Initializes a new instance of the ASchematicMeshComponent class. Declaration protected ASchematicMeshComponent(Vector3 localPosition, Quaternion localRotation, SchematicObject mesh, Vector3 scale, Vector3 position, Quaternion rotation) Parameters Type Name Description Vector3 localPosition Quaternion localRotation SchematicObject mesh Vector3 scale Vector3 position Quaternion rotation | Improve this Doc View Source ASchematicMeshComponent(Vector3, Quaternion, Vector3, SchematicObject, Vector3, Vector3, Quaternion) Initializes a new instance of the ASchematicMeshComponent class. Declaration protected ASchematicMeshComponent(Vector3 localPosition, Quaternion localRotation, Vector3 localScale, SchematicObject mesh, Vector3 scale, Vector3 position, Quaternion rotation) Parameters Type Name Description Vector3 localPosition Quaternion localRotation Vector3 localScale SchematicObject mesh Vector3 scale Vector3 position Quaternion rotation | Improve this Doc View Source ASchematicMeshComponent(Vector3, SchematicObject, Vector3, Vector3, Quaternion) Initializes a new instance of the ASchematicMeshComponent class. Declaration protected ASchematicMeshComponent(Vector3 localPosition, SchematicObject mesh, Vector3 scale, Vector3 position, Quaternion rotation) Parameters Type Name Description Vector3 localPosition SchematicObject mesh Vector3 scale Vector3 position Quaternion rotation Properties | Improve this Doc View Source AnimatorsTriggers Declaration public IReadOnlyDictionary<Animator, string[]> AnimatorsTriggers { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < Animator , System.String []> | Improve this Doc View Source IsCollidable Declaration public override bool IsCollidable { get; set; } Property Value Type Description System.Boolean Overrides ASkeletalMeshComponent.IsCollidable | Improve this Doc View Source IsVisible Declaration public override bool IsVisible { get; set; } Property Value Type Description System.Boolean Overrides ASkeletalMeshComponent.IsVisible | Improve this Doc View Source MeshName Gets the name of mesh. Declaration public string MeshName { get; } Property Value Type Description System.String | Improve this Doc View Source Position Declaration public override Vector3 Position { get; set; } Property Value Type Description Vector3 Overrides AActor.Position | Improve this Doc View Source RootSchematic Gets the mesh asset. Declaration public SchematicObject RootSchematic { get; set; } Property Value Type Description SchematicObject | Improve this Doc View Source Rotation Declaration public override Quaternion Rotation { get; set; } Property Value Type Description Quaternion Overrides AActor.Rotation | Improve this Doc View Source Scale Declaration public override Vector3 Scale { get; set; } Property Value Type Description Vector3 Overrides AActor.Scale | Improve this Doc View Source Socket Gets or sets the socket. Declaration public FTransform Socket { get; set; } Property Value Type Description FTransform Methods | Improve this Doc View Source Create(SchematicObject, Vector3, Vector3, Quaternion) Creates a new instance of the ASchematicMeshComponent class. Declaration public static ASchematicMeshComponent Create(SchematicObject mesh, Vector3 scale, Vector3 position, Quaternion rotation) Parameters Type Name Description SchematicObject mesh Vector3 scale Vector3 position Quaternion rotation Returns Type Description ASchematicMeshComponent The new instance of the ASchematicMeshComponent class. | Improve this Doc View Source CreateDefaultSubobject<T>(GameObject, String, String, Vector3, Vector3, Quaternion, FTransform) Creates a new instance of the ASchematicMeshComponent class. Declaration public static T CreateDefaultSubobject<T>(GameObject gameObject, string name, string meshName, Vector3 scale, Vector3 position, Quaternion rotation, FTransform socket) where T : ASchematicMeshComponent Parameters Type Name Description GameObject gameObject System.String name The name to be given to the new ASchematicMeshComponent instance. System.String meshName Vector3 scale Vector3 position Quaternion rotation FTransform socket Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source FindClosestFrameOfType<T>() Finds the instance of type T closest to this instance. Declaration public Pickup FindClosestFrameOfType<T>() where T : Pickup Returns Type Description Pickup The of type T . Type Parameters Name Description T The of type T to look for. | Improve this Doc View Source FindClosestFrameOfType<T>(Vector3) Finds the instance of type T closest to position . Declaration public static Pickup FindClosestFrameOfType<T>(Vector3 position) where T : Pickup Parameters Type Name Description Vector3 position The position from which looking for. Returns Type Description Pickup The of type T . Type Parameters Name Description T The of type T to look for. | Improve this Doc View Source FindClosestFrameOfType<T>(Vector3, IEnumerable<Pickup>) Finds the instance of type T closest to position . Declaration public static Pickup FindClosestFrameOfType<T>(Vector3 position, IEnumerable<Pickup> source) where T : Pickup Parameters Type Name Description Vector3 position The position from which looking for. System.Collections.Generic.IEnumerable < Pickup > source The System.Collections.Generic.IEnumerable<T> of to iterate over. Returns Type Description Pickup The of type T . Type Parameters Name Description T The of type T to look for. | Improve this Doc View Source FindClosestFramesOfType<T>(T, UInt32) Finds a fixed amount of all the instances of type T closest to pickup . Declaration public static Pickup[] FindClosestFramesOfType<T>(T pickup, uint toGet = 0U) where T : Pickup Parameters Type Name Description T pickup The of type T from which looking for. System.UInt32 toGet The requested amount of entries. Returns Type Description Pickup [] The of type T . Type Parameters Name Description T The of type T to look for. | Improve this Doc View Source FindClosestFramesOfType<T>(UInt32) Finds a fixed amount of all the ASchematicMeshComponent instances of type T closest to this ASchematicMeshComponent instance. Declaration public Pickup[] FindClosestFramesOfType<T>(uint toGet = 0U) where T : Pickup Parameters Type Name Description System.UInt32 toGet The requested amount of entries. Returns Type Description Pickup [] The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestFramesOfType<T>(Vector3, IEnumerable<Pickup>, UInt32) Finds a fixed amount of all the instances of type T closest to position . Declaration public static IEnumerable<Pickup> FindClosestFramesOfType<T>(Vector3 position, IEnumerable<Pickup> source, uint toGet = 0U) where T : Pickup Parameters Type Name Description Vector3 position The position from which looking for. System.Collections.Generic.IEnumerable < Pickup > source The System.Collections.Generic.IEnumerable<T> of to iterate over. System.UInt32 toGet The requested amount of entries. Returns Type Description System.Collections.Generic.IEnumerable < Pickup > The of type T . Type Parameters Name Description T The of type T to look for. | Improve this Doc View Source FindClosestFramesWithTagOfType<T>(Vector3, String, IEnumerable<Pickup>, UInt32) Finds a fixed amount of all the instances of type T closest to position . Declaration public static Pickup[] FindClosestFramesWithTagOfType<T>(Vector3 position, string tag, IEnumerable<Pickup> source, uint toGet = 0U) where T : Pickup Parameters Type Name Description Vector3 position The position from which looking for. System.String tag The tag look for. System.Collections.Generic.IEnumerable < Pickup > source The System.Collections.Generic.IEnumerable<T> of to iterate over. System.UInt32 toGet The requested amount of entries. Returns Type Description Pickup [] The of type T . Type Parameters Name Description T The of type T to look for. | Improve this Doc View Source FindClosestFramesWithTagOfType<T>(Vector3, String, UInt32) Finds a fixed amount of all the ASchematicMeshComponent instances of type T closest to position . Declaration public static Pickup[] FindClosestFramesWithTagOfType<T>(Vector3 position, string tag, uint toGet = 0U) where T : Pickup Parameters Type Name Description Vector3 position The position from which looking for. System.String tag The tag look for. System.UInt32 toGet The requested amount of entries. Returns Type Description Pickup [] The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestFrameWithTagOfType<T>(T, String) Finds the instance of type T closest to pickup . Declaration public static Pickup FindClosestFrameWithTagOfType<T>(T pickup, string tag) where T : Pickup Parameters Type Name Description T pickup The of type T from which looking for. System.String tag The tag look for. Returns Type Description Pickup The of type T . Type Parameters Name Description T The of type T to look for. | Improve this Doc View Source FindClosestFrameWithTagOfType<T>(String) Finds the instance of type T closest to this instance. Declaration public Pickup FindClosestFrameWithTagOfType<T>(string tag) where T : Pickup Parameters Type Name Description System.String tag The tag look for. Returns Type Description Pickup The of type T . Type Parameters Name Description T The of type T to look for. | Improve this Doc View Source FindClosestFrameWithTagOfType<T>(Vector3, String, IEnumerable<Pickup>) Finds the of type T closest to position . Declaration public static Pickup FindClosestFrameWithTagOfType<T>(Vector3 position, string tag, IEnumerable<Pickup> source) where T : Pickup Parameters Type Name Description Vector3 position The position from which looking for. System.String tag The tag look for. System.Collections.Generic.IEnumerable < Pickup > source The System.Collections.Generic.IEnumerable<T> of to iterate over. Returns Type Description Pickup The of type T . Type Parameters Name Description T The of type T to look for. | Improve this Doc View Source FindClosestObjectOfType<T>() Finds the ASchematicMeshComponent instance of type T closest to this ASchematicMeshComponent instance. Declaration public T FindClosestObjectOfType<T>() where T : ASchematicMeshComponent Returns Type Description T The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectOfType<T>(T) Finds the ASchematicMeshComponent instance of type T closest to schematicMeshComponent . Declaration public static T FindClosestObjectOfType<T>(T schematicMeshComponent) where T : ASchematicMeshComponent Parameters Type Name Description T schematicMeshComponent The ASchematicMeshComponent of type T from which looking for. Returns Type Description T The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectOfType<T>(SchematicObject) Finds the ASchematicMeshComponent instance of type T closest to schematicObject . Declaration public static T FindClosestObjectOfType<T>(SchematicObject schematicObject) where T : ASchematicMeshComponent Parameters Type Name Description SchematicObject schematicObject The from which looking for. Returns Type Description T The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectOfType<T>(IEnumerable<SchematicObject>) Finds the ASchematicMeshComponent instance of type T closest to this ASchematicMeshComponent instance. Declaration public T FindClosestObjectOfType<T>(IEnumerable<SchematicObject> source) where T : ASchematicMeshComponent Parameters Type Name Description System.Collections.Generic.IEnumerable < SchematicObject > source The System.Collections.Generic.IEnumerable<T> of to iterate over. Returns Type Description T The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectOfType<T>(Vector3) Finds the ASchematicMeshComponent instance of type T closest to position . Declaration public static T FindClosestObjectOfType<T>(Vector3 position) where T : ASchematicMeshComponent Parameters Type Name Description Vector3 position The position from which looking for. Returns Type Description T The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectOfType<T>(Vector3, IEnumerable<SchematicObject>) Finds the ASchematicMeshComponent instance of type T closest to position . Declaration public static T FindClosestObjectOfType<T>(Vector3 position, IEnumerable<SchematicObject> source) where T : ASchematicMeshComponent Parameters Type Name Description Vector3 position The position from which looking for. System.Collections.Generic.IEnumerable < SchematicObject > source The System.Collections.Generic.IEnumerable<T> of to iterate over. Returns Type Description T The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectsOfType<T>(T, UInt32) Finds a fixed amount of all the ASchematicMeshComponent instances of type T closest to schematicMeshComponent . Declaration public static T[] FindClosestObjectsOfType<T>(T schematicMeshComponent, uint toGet = 0U) where T : ASchematicMeshComponent Parameters Type Name Description T schematicMeshComponent The ASchematicMeshComponent of type T from which looking for. System.UInt32 toGet The requested amount of entries. Returns Type Description T[] The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectsOfType<T>(SchematicObject, UInt32) Finds a fixed amount of all the ASchematicMeshComponent instances of type T closest to schematicObject . Declaration public static T[] FindClosestObjectsOfType<T>(SchematicObject schematicObject, uint toGet = 0U) where T : ASchematicMeshComponent Parameters Type Name Description SchematicObject schematicObject The from which looking for. System.UInt32 toGet The requested amount of entries. Returns Type Description T[] The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectsOfType<T>(IEnumerable<SchematicObject>, UInt32) Finds a fixed amount of all the ASchematicMeshComponent instances of type T closest to this ASchematicMeshComponent instance. Declaration public T[] FindClosestObjectsOfType<T>(IEnumerable<SchematicObject> source, uint toGet = 0U) where T : ASchematicMeshComponent Parameters Type Name Description System.Collections.Generic.IEnumerable < SchematicObject > source The System.Collections.Generic.IEnumerable<T> of to iterate over. System.UInt32 toGet The requested amount of entries. Returns Type Description T[] The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectsOfType<T>(UInt32) Finds a fixed amount of all the ASchematicMeshComponent instances of type T closest to this ASchematicMeshComponent instance. Declaration public T[] FindClosestObjectsOfType<T>(uint toGet = 0U) where T : ASchematicMeshComponent Parameters Type Name Description System.UInt32 toGet The requested amount of entries. Returns Type Description T[] The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectsOfType<T>(Vector3, IEnumerable<SchematicObject>, UInt32) Finds a fixed amount of all the ASchematicMeshComponent instances of type T closest to position . Declaration public static IEnumerable<T> FindClosestObjectsOfType<T>(Vector3 position, IEnumerable<SchematicObject> source, uint toGet = 0U) where T : ASchematicMeshComponent Parameters Type Name Description Vector3 position The position from which looking for. System.Collections.Generic.IEnumerable < SchematicObject > source The System.Collections.Generic.IEnumerable<T> of to iterate over. System.UInt32 toGet The requested amount of entries. Returns Type Description System.Collections.Generic.IEnumerable <T> The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectsOfType<T>(Vector3, UInt32) Finds a fixed amount of all the ASchematicMeshComponent instances of type T closest to position . Declaration public static T[] FindClosestObjectsOfType<T>(Vector3 position, uint toGet = 0U) where T : ASchematicMeshComponent Parameters Type Name Description Vector3 position The position from which looking for. System.UInt32 toGet The requested amount of entries. Returns Type Description T[] The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectsWithTagOfType<T>(T, String, UInt32) Finds a fixed amount of all the ASchematicMeshComponent instances of type T closest to schematicMeshComponent . Declaration public static T[] FindClosestObjectsWithTagOfType<T>(T schematicMeshComponent, string tag, uint toGet = 0U) where T : ASchematicMeshComponent Parameters Type Name Description T schematicMeshComponent The ASchematicMeshComponent of type T from which looking for. System.String tag The tag look for. System.UInt32 toGet The requested amount of entries. Returns Type Description T[] The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectsWithTagOfType<T>(SchematicObject, String, UInt32) Finds a fixed amount of all the ASchematicMeshComponent instances of type T closest to schematicObject . Declaration public static T[] FindClosestObjectsWithTagOfType<T>(SchematicObject schematicObject, string tag, uint toGet = 0U) where T : ASchematicMeshComponent Parameters Type Name Description SchematicObject schematicObject The from which looking for. System.String tag The tag look for. System.UInt32 toGet The requested amount of entries. Returns Type Description T[] The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectsWithTagOfType<T>(IEnumerable<SchematicObject>, String, UInt32) Finds a fixed amount of all the ASchematicMeshComponent instances of type T closest to this ASchematicMeshComponent instance. Declaration public T[] FindClosestObjectsWithTagOfType<T>(IEnumerable<SchematicObject> source, string tag, uint toGet = 0U) where T : ASchematicMeshComponent Parameters Type Name Description System.Collections.Generic.IEnumerable < SchematicObject > source The System.Collections.Generic.IEnumerable<T> of to iterate over. System.String tag The tag look for. System.UInt32 toGet The requested amount of entries. Returns Type Description T[] The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectsWithTagOfType<T>(String, UInt32) Finds a fixed amount of all the ASchematicMeshComponent instances of type T closest to this ASchematicMeshComponent instance. Declaration public T[] FindClosestObjectsWithTagOfType<T>(string tag, uint toGet = 0U) where T : ASchematicMeshComponent Parameters Type Name Description System.String tag The tag look for. System.UInt32 toGet The requested amount of entries. Returns Type Description T[] The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectsWithTagOfType<T>(Vector3, String, IEnumerable<SchematicObject>, UInt32) Finds a fixed amount of all the ASchematicMeshComponent instances of type T closest to position . Declaration public static T[] FindClosestObjectsWithTagOfType<T>(Vector3 position, string tag, IEnumerable<SchematicObject> source, uint toGet = 0U) where T : ASchematicMeshComponent Parameters Type Name Description Vector3 position The position from which looking for. System.String tag The tag look for. System.Collections.Generic.IEnumerable < SchematicObject > source The System.Collections.Generic.IEnumerable<T> of to iterate over. System.UInt32 toGet The requested amount of entries. Returns Type Description T[] The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectsWithTagOfType<T>(Vector3, String, UInt32) Finds a fixed amount of all the ASchematicMeshComponent instances of type T closest to position . Declaration public static T[] FindClosestObjectsWithTagOfType<T>(Vector3 position, string tag, uint toGet = 0U) where T : ASchematicMeshComponent Parameters Type Name Description Vector3 position The position from which looking for. System.String tag The tag look for. System.UInt32 toGet The requested amount of entries. Returns Type Description T[] The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectWithTagOfType<T>(T, String) Finds the ASchematicMeshComponent instance of type T closest to schematicMeshComponent . Declaration public static T FindClosestObjectWithTagOfType<T>(T schematicMeshComponent, string tag) where T : ASchematicMeshComponent Parameters Type Name Description T schematicMeshComponent The ASchematicMeshComponent of type T from which looking for. System.String tag The tag look for. Returns Type Description T The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectWithTagOfType<T>(SchematicObject, String) Finds the ASchematicMeshComponent instance of type T closest to schematicObject . Declaration public static T FindClosestObjectWithTagOfType<T>(SchematicObject schematicObject, string tag) where T : ASchematicMeshComponent Parameters Type Name Description SchematicObject schematicObject The from which looking for. System.String tag The tag look for. Returns Type Description T The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectWithTagOfType<T>(IEnumerable<SchematicObject>, String) Finds the ASchematicMeshComponent instance of type T closest to this ASchematicMeshComponent instance. Declaration public T FindClosestObjectWithTagOfType<T>(IEnumerable<SchematicObject> source, string tag) where T : ASchematicMeshComponent Parameters Type Name Description System.Collections.Generic.IEnumerable < SchematicObject > source The System.Collections.Generic.IEnumerable<T> of to iterate over. System.String tag The tag look for. Returns Type Description T The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectWithTagOfType<T>(String) Finds the ASchematicMeshComponent instance of type T closest to this ASchematicMeshComponent instance. Declaration public T FindClosestObjectWithTagOfType<T>(string tag) where T : ASchematicMeshComponent Parameters Type Name Description System.String tag The tag look for. Returns Type Description T The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectWithTagOfType<T>(Vector3, String) Finds the ASchematicMeshComponent instance of type T closest to position . Declaration public static T FindClosestObjectWithTagOfType<T>(Vector3 position, string tag) where T : ASchematicMeshComponent Parameters Type Name Description Vector3 position The position from which looking for. System.String tag The tag look for. Returns Type Description T The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source FindClosestObjectWithTagOfType<T>(Vector3, String, IEnumerable<SchematicObject>) Finds the ASchematicMeshComponent of type T closest to position . Declaration public static T FindClosestObjectWithTagOfType<T>(Vector3 position, string tag, IEnumerable<SchematicObject> source) where T : ASchematicMeshComponent Parameters Type Name Description Vector3 position The position from which looking for. System.String tag The tag look for. System.Collections.Generic.IEnumerable < SchematicObject > source The System.Collections.Generic.IEnumerable<T> of to iterate over. Returns Type Description T The ASchematicMeshComponent of type T . Type Parameters Name Description T The ASchematicMeshComponent of type T to look for. | Improve this Doc View Source GetAnimations(Animator) Declaration public AnimatorParameter[] GetAnimations(Animator animator) Parameters Type Name Description Animator animator Returns Type Description AnimatorParameter [] | Improve this Doc View Source GetCurrentAnimation(Animator) Declaration public AnimatorStateInfo GetCurrentAnimation(Animator animator = null) Parameters Type Name Description Animator animator Returns Type Description AnimatorStateInfo | Improve this Doc View Source GetCurrentAnimation(Animator, AnimatorParameter) Declaration public ref AnimatorParameter GetCurrentAnimation(Animator animator, AnimatorParameter anim) Parameters Type Name Description Animator animator AnimatorParameter anim Returns Type Description AnimatorParameter | Improve this Doc View Source GetCurrentAnimation(Animator, String) Declaration public ref AnimatorParameter GetCurrentAnimation(Animator animator, string name) Parameters Type Name Description Animator animator System.String name Returns Type Description AnimatorParameter | Improve this Doc View Source OnBeginPlay() Declaration protected override void OnBeginPlay() Overrides ASkeletalMeshComponent.OnBeginPlay() | Improve this Doc View Source OnChangingAnimationState(ChangingAnimationStateEventArgs) Declaration public virtual void OnChangingAnimationState(ChangingAnimationStateEventArgs ev) Parameters Type Name Description ChangingAnimationStateEventArgs ev | Improve this Doc View Source OnEndPlay() Declaration protected override void OnEndPlay() Overrides ASkeletalMeshComponent.OnEndPlay() | Improve this Doc View Source PlayAnimation(AnimatorParameter, Int32) Declaration public bool PlayAnimation(AnimatorParameter anim, int animatorIndex = 0) Parameters Type Name Description AnimatorParameter anim System.Int32 animatorIndex Returns Type Description System.Boolean | Improve this Doc View Source PlayAnimation(String, Boolean) Declaration public bool PlayAnimation(string name, bool state) Parameters Type Name Description System.String name System.Boolean state Returns Type Description System.Boolean | Improve this Doc View Source PlayAnimation(String, Boolean, Int32) Declaration public bool PlayAnimation(string name, bool state, int animatorIndex = 0) Parameters Type Name Description System.String name System.Boolean state System.Int32 animatorIndex Returns Type Description System.Boolean | Improve this Doc View Source SetCurrentAnimation(Animator, AnimatorParameter) Declaration public void SetCurrentAnimation(Animator animator, AnimatorParameter anim) Parameters Type Name Description Animator animator AnimatorParameter anim | Improve this Doc View Source SetCurrentAnimation(Animator, String, Boolean) Declaration public void SetCurrentAnimation(Animator animator, string name, bool state) Parameters Type Name Description Animator animator System.String name System.Boolean state | Improve this Doc View Source ShowBones() Spawns the RootSchematic . Declaration public void ShowBones() | Improve this Doc View Source StopAnimation(Int32) Declaration public void StopAnimation(int animatorIndex = 0) Parameters Type Name Description System.Int32 animatorIndex | Improve this Doc View Source Tick() Declaration protected override void Tick() Overrides AActor.Tick() | Improve this Doc View Source TryGetAnimations(Animator, out AnimatorParameter[]) Tries to get the animations of the specified . Declaration public bool TryGetAnimations(Animator animator, out AnimatorParameter[] anims) Parameters Type Name Description Animator animator The animator to check. AnimatorParameter [] anims The animations. Returns Type Description System.Boolean true if the animations were successfully found; otherwise, false . Explicit Interface Implementations | Improve this Doc View Source IAnimatorNative.AnimatorsTriggers Declaration IReadOnlyDictionary<Animator, string[]> IAnimatorNative.AnimatorsTriggers { get; } Returns Type Description System.Collections.Generic.IReadOnlyDictionary < Animator , System.String []> Implements IAnimatorNative Extension Methods ComponentExtensions.AddActorComponent<T>(AActor, String)"
  },
  "api/RolePlus.ExternModule.API.Engine.Components.ASkeletalMeshComponent.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Components.ASkeletalMeshComponent.html",
    "title": "Class ASkeletalMeshComponent | RolePlus Docs",
    "keywords": "Class ASkeletalMeshComponent The base class for custom meshes. Inheritance System.Object TypeCastObject < UObject > UObject AActor AActorComponent ASkeletalMeshComponent ASchematicMeshComponent Inherited Members AActorComponent.Controllers AActor.DefaultFixedTickRate AActor.ComponentsInParent AActor.ComponentsInChildren AActor.Transform AActor.Position AActor.Rotation AActor.Scale AActor.CanEverTick AActor.Tick() AActor.SubscribeEvents() AActor.UnsubscribeEvents() AActor.OnBeginDestroy() AActor.AttachTo(AActor, GameObject) AActor.AttachTo(AActor, AActor) AActor.AddComponent<T>(String) AActor.AddComponent(Type, String) AActor.GetComponent<T>() AActor.GetComponent(Type) AActor.TryGetComponent<T>(T) AActor.TryGetComponent(Type, AActor) AActor.HasComponent<T>() AActor.HasComponent(Type) UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Components Assembly : RolePlus.dll Syntax public abstract class ASkeletalMeshComponent : AActorComponent Constructors | Improve this Doc View Source ASkeletalMeshComponent() Initializes a new instance of the ASkeletalMeshComponent class. Declaration protected ASkeletalMeshComponent() | Improve this Doc View Source ASkeletalMeshComponent(GameObject) Initializes a new instance of the ASkeletalMeshComponent class. Declaration protected ASkeletalMeshComponent(GameObject gameObject = null) Parameters Type Name Description GameObject gameObject | Improve this Doc View Source ASkeletalMeshComponent(GameObject, Vector3, Vector3, Quaternion) Initializes a new instance of the ASkeletalMeshComponent class. Declaration protected ASkeletalMeshComponent(GameObject gameObject, Vector3 scale, Vector3 position, Quaternion rotation) Parameters Type Name Description GameObject gameObject Vector3 scale Vector3 position Quaternion rotation Properties | Improve this Doc View Source FixedTickRate Gets or sets the value which determines the size of one tick. Declaration public override float FixedTickRate { get; set; } Property Value Type Description System.Single Overrides AActor.FixedTickRate | Improve this Doc View Source IsCollidable Gets or sets a value indicating whether the mesh is collidable. Declaration public virtual bool IsCollidable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsVisible Gets or sets a value indicating whether the mesh can be seen by other players. Declaration public virtual bool IsVisible { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source ChangeVisibilityAll(Boolean) Changes the visibility state for all the ASkeletalMeshComponent instances. Declaration public static void ChangeVisibilityAll(bool state) Parameters Type Name Description System.Boolean state | Improve this Doc View Source OnBeginPlay() Declaration protected override void OnBeginPlay() Overrides AActor.OnBeginPlay() | Improve this Doc View Source OnEndPlay() Declaration protected override void OnEndPlay() Overrides AActor.OnEndPlay() Extension Methods ComponentExtensions.AddActorComponent<T>(AActor, String)"
  },
  "api/RolePlus.ExternModule.API.Engine.Components.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Components.html",
    "title": "Namespace RolePlus.ExternModule.API.Engine.Components | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Engine.Components Classes AActorComponent AActorComponent is the base class for components that define reusable behavior that can be added to different types of object. AActorFrameComponent AActorFrameComponent is the base class for AActorComponent instances which need to be managed internally. AActorHealthComponent A class that handles in-game interactable objects by. AEnvironmentActorHealthComponent A class that handles in-game interactable objects by. AEnvironmentMeshComponent A class that handles in-game objects destinated to be used as environmental objects. AInteractableFrameComponent A class that handles in-game interactable objects by. ASchematicMeshComponent The base class for custom meshes. ASkeletalMeshComponent The base class for custom meshes."
  },
  "api/RolePlus.ExternModule.API.Engine.Core.Generic.Collections.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Core.Generic.Collections.html",
    "title": "Namespace RolePlus.ExternModule.API.Engine.Core.Generic.Collections | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Engine.Core.Generic.Collections Classes TMultiDirectionalCollection<T1, T2, T3> An object which handles three generic types. TMultiPlexCollection<T1, T2, T3, T4> An object which handles three generic types. TPlainCollection<T1, T2, T3> An object which handles two generic types. TPlexCollection<T1, T2, T3> An object which handles two generic types."
  },
  "api/RolePlus.ExternModule.API.Engine.Core.Generic.Collections.TMultiDirectionalCollection-3.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Core.Generic.Collections.TMultiDirectionalCollection-3.html",
    "title": "Class TMultiDirectionalCollection<T1, T2, T3> | RolePlus Docs",
    "keywords": "Class TMultiDirectionalCollection<T1, T2, T3> An object which handles three generic types. Inheritance System.Object TValueObject <T3> TSourceObject <T1, T3> TPlainCollection <T1, T1, T3> TMultiDirectionalCollection<T1, T2, T3> Inherited Members TPlainCollection<T1, T1, T3>.Destination TSourceObject<T1, T3>.Source TValueObject<T3>.Base TValueObject<T3>.Cast<T>() TValueObject<T3>.Cast<T>(T) TValueObject<T3>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Core.Generic.Collections Assembly : RolePlus.dll Syntax public class TMultiDirectionalCollection<T1, T2, T3> : TPlainCollection<T1, T1, T3> Type Parameters Name Description T1 The first generic type. T2 The second generic type. T3 The box type. Constructors | Improve this Doc View Source TMultiDirectionalCollection() Initializes a new instance of the TMultiDirectionalCollection<T1, T2, T3> class. Declaration public TMultiDirectionalCollection() | Improve this Doc View Source TMultiDirectionalCollection(T1, T2, T3) Initializes a new instance of the TMultiDirectionalCollection<T1, T2, T3> class. Declaration public TMultiDirectionalCollection(T1 src, T2 dst, T3 value) Parameters Type Name Description T1 src The source. T2 dst The destination. T3 value The value to box. | Improve this Doc View Source TMultiDirectionalCollection(T2, T1, T3) Initializes a new instance of the TMultiDirectionalCollection<T1, T2, T3> class. Declaration public TMultiDirectionalCollection(T2 src, T1 dst, T3 value) Parameters Type Name Description T2 src The source. T1 dst The destination. T3 value The value to box. | Improve this Doc View Source TMultiDirectionalCollection(T2, T2, T3) Initializes a new instance of the TMultiDirectionalCollection<T1, T2, T3> class. Declaration public TMultiDirectionalCollection(T2 src, T2 dst, T3 value) Parameters Type Name Description T2 src The source. T2 dst The destination. T3 value The value to box. | Improve this Doc View Source TMultiDirectionalCollection(T2, T3) Initializes a new instance of the TMultiDirectionalCollection<T1, T2, T3> class. Declaration protected TMultiDirectionalCollection(T2 dst, T3 value) Parameters Type Name Description T2 dst The destination. T3 value The value to box. | Improve this Doc View Source TMultiDirectionalCollection(T3) Initializes a new instance of the TMultiDirectionalCollection<T1, T2, T3> class. Declaration protected TMultiDirectionalCollection(T3 value) Parameters Type Name Description T3 value The value to box. Properties | Improve this Doc View Source CustomDestination Gets or sets the destination. Declaration public T2 CustomDestination { get; set; } Property Value Type Description T2 | Improve this Doc View Source CustomSource Gets or sets the source. Declaration public T2 CustomSource { get; set; } Property Value Type Description T2"
  },
  "api/RolePlus.ExternModule.API.Engine.Core.Generic.Collections.TMultiPlexCollection-4.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Core.Generic.Collections.TMultiPlexCollection-4.html",
    "title": "Class TMultiPlexCollection<T1, T2, T3, T4> | RolePlus Docs",
    "keywords": "Class TMultiPlexCollection<T1, T2, T3, T4> An object which handles three generic types. Inheritance System.Object TValueObject <T4> TPlexCollection <T1, T2, T4> TMultiPlexCollection<T1, T2, T3, T4> Inherited Members TPlexCollection<T1, T2, T4>.Key TPlexCollection<T1, T2, T4>.Value TValueObject<T4>.Base TValueObject<T4>.Cast<T>() TValueObject<T4>.Cast<T>(T) TValueObject<T4>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Core.Generic.Collections Assembly : RolePlus.dll Syntax public class TMultiPlexCollection<T1, T2, T3, T4> : TPlexCollection<T1, T2, T4> Type Parameters Name Description T1 The first generic type. T2 The second generic type. T3 The third generic type. T4 The box type. Constructors | Improve this Doc View Source TMultiPlexCollection() Initializes a new instance of the TMultiPlexCollection<T1, T2, T3, T4> class. Declaration public TMultiPlexCollection() | Improve this Doc View Source TMultiPlexCollection(T1, T2, T4) Initializes a new instance of the TMultiPlexCollection<T1, T2, T3, T4> class. Declaration public TMultiPlexCollection(T1 key, T2 value, T4 baseVal) Parameters Type Name Description T1 key The key. T2 value The value. T4 baseVal The base value. Properties | Improve this Doc View Source Plex Gets or sets the plex. Declaration public T3 Plex { get; set; } Property Value Type Description T3"
  },
  "api/RolePlus.ExternModule.API.Engine.Core.Generic.Collections.TPlainCollection-3.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Core.Generic.Collections.TPlainCollection-3.html",
    "title": "Class TPlainCollection<T1, T2, T3> | RolePlus Docs",
    "keywords": "Class TPlainCollection<T1, T2, T3> An object which handles two generic types. Inheritance System.Object TValueObject <T3> TSourceObject <T1, T3> TPlainCollection<T1, T2, T3> TMultiDirectionalCollection<T1, T2, T3> Inherited Members TSourceObject<T1, T3>.Source TValueObject<T3>.Base TValueObject<T3>.Cast<T>() TValueObject<T3>.Cast<T>(T) TValueObject<T3>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Core.Generic.Collections Assembly : RolePlus.dll Syntax public class TPlainCollection<T1, T2, T3> : TSourceObject<T1, T3> Type Parameters Name Description T1 The first generic type. T2 The second generic type. T3 The box type. Constructors | Improve this Doc View Source TPlainCollection() Initializes a new instance of the TPlainCollection<T1, T2, T3> class. Declaration public TPlainCollection() | Improve this Doc View Source TPlainCollection(T1, T2, T3) Initializes a new instance of the TPlainCollection<T1, T2, T3> class. Declaration public TPlainCollection(T1 src, T2 dst, T3 value) Parameters Type Name Description T1 src The source. T2 dst The destination. T3 value The value to store. | Improve this Doc View Source TPlainCollection(T1, T3) Initializes a new instance of the TPlainCollection<T1, T2, T3> class. Declaration protected TPlainCollection(T1 src, T3 value) Parameters Type Name Description T1 src The source. T3 value The value to store. Properties | Improve this Doc View Source Destination Gets or sets the destination. Declaration public T2 Destination { get; set; } Property Value Type Description T2"
  },
  "api/RolePlus.ExternModule.API.Engine.Core.Generic.Collections.TPlexCollection-3.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Core.Generic.Collections.TPlexCollection-3.html",
    "title": "Class TPlexCollection<T1, T2, T3> | RolePlus Docs",
    "keywords": "Class TPlexCollection<T1, T2, T3> An object which handles two generic types. Inheritance System.Object TValueObject <T3> TPlexCollection<T1, T2, T3> TMultiPlexCollection<T1, T2, T3, T4> Inherited Members TValueObject<T3>.Base TValueObject<T3>.Cast<T>() TValueObject<T3>.Cast<T>(T) TValueObject<T3>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Core.Generic.Collections Assembly : RolePlus.dll Syntax public class TPlexCollection<T1, T2, T3> : TValueObject<T3> Type Parameters Name Description T1 The first generic type. T2 The second generic type. T3 The box type. Constructors | Improve this Doc View Source TPlexCollection() Initializes a new instance of the TPlexCollection<T1, T2, T3> class. Declaration public TPlexCollection() | Improve this Doc View Source TPlexCollection(T1, T2, T3) Initializes a new instance of the TPlexCollection<T1, T2, T3> class. Declaration public TPlexCollection(T1 key, T2 value, T3 baseVal) Parameters Type Name Description T1 key The key. T2 value The value. T3 baseVal The base value. Properties | Improve this Doc View Source Key Gets or sets the key. Declaration public T1 Key { get; set; } Property Value Type Description T1 | Improve this Doc View Source Value Gets or sets the value. Declaration public T2 Value { get; set; } Property Value Type Description T2"
  },
  "api/RolePlus.ExternModule.API.Engine.Core.Generic.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Core.Generic.html",
    "title": "Namespace RolePlus.ExternModule.API.Engine.Core.Generic | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Engine.Core.Generic Classes TSourceObject<T1, T2> An object which handles a generic type. TValueObject<TObject> An object which handles a value."
  },
  "api/RolePlus.ExternModule.API.Engine.Core.Generic.TSourceObject-2.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Core.Generic.TSourceObject-2.html",
    "title": "Class TSourceObject<T1, T2> | RolePlus Docs",
    "keywords": "Class TSourceObject<T1, T2> An object which handles a generic type. Inheritance System.Object TValueObject <T2> TSourceObject<T1, T2> TPlainCollection<T1, T2, T3> Inherited Members TValueObject<T2>.Base TValueObject<T2>.Cast<T>() TValueObject<T2>.Cast<T>(T) TValueObject<T2>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Core.Generic Assembly : RolePlus.dll Syntax public class TSourceObject<T1, T2> : TValueObject<T2> Type Parameters Name Description T1 The generic type. T2 The box type. Constructors | Improve this Doc View Source TSourceObject() Initializes a new instance of the TSourceObject<T1, T2> class. Declaration public TSourceObject() | Improve this Doc View Source TSourceObject(T1, T2) Initializes a new instance of the TSourceObject<T1, T2> class. Declaration public TSourceObject(T1 src, T2 value) Parameters Type Name Description T1 src The generic type param. T2 value The value to store. Properties | Improve this Doc View Source Source Gets or sets the source. Declaration public T1 Source { get; set; } Property Value Type Description T1"
  },
  "api/RolePlus.ExternModule.API.Engine.Core.Generic.TValueObject-1.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Core.Generic.TValueObject-1.html",
    "title": "Class TValueObject<TObject> | RolePlus Docs",
    "keywords": "Class TValueObject<TObject> An object which handles a value. Inheritance System.Object TValueObject<TObject> TPlexCollection<T1, T2, T3> TSourceObject<T1, T2> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Core.Generic Assembly : RolePlus.dll Syntax public abstract class TValueObject<TObject> Type Parameters Name Description TObject The type of the value. Constructors | Improve this Doc View Source TValueObject() Initializes a new instance of the TValueObject<TObject> class. Declaration protected TValueObject() | Improve this Doc View Source TValueObject(TObject) Initializes a new instance of the TValueObject<TObject> class. Declaration protected TValueObject(TObject value) Parameters Type Name Description TObject value The value to store. | Improve this Doc View Source TValueObject(TObject, Type) Initializes a new instance of the TValueObject<TObject> class. Declaration protected TValueObject(TObject value, Type type) Parameters Type Name Description TObject value The value to store. System.Type type The System.Type to box. Properties | Improve this Doc View Source Base Gets or sets the stored value. Declaration public virtual TObject Base { get; set; } Property Value Type Description TObject Methods | Improve this Doc View Source Cast<T>() Unsafely casts Base to the specified type. Declaration public T Cast<T>() where T : class Returns Type Description T The casted Base . Type Parameters Name Description T The type cast. | Improve this Doc View Source Cast<T>(T) Unsafely casts Base to the specified type. Declaration public T Cast<T>(T _) where T : class Parameters Type Name Description T _ The type param. Returns Type Description T The casted Base . Type Parameters Name Description T The type cast. | Improve this Doc View Source Cast<T>(out T) Safely casts Base to the specified type. Declaration public bool Cast<T>(out T param) where T : class Parameters Type Name Description T param The type param. Returns Type Description System.Boolean true if Base can be casted to the specified type; otherwise, false . Type Parameters Name Description T The type cast."
  },
  "api/RolePlus.ExternModule.API.Engine.Core.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Core.html",
    "title": "Namespace RolePlus.ExternModule.API.Engine.Core | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Engine.Core Classes TypeCastObject<T1> The interface which allows defined objects to be casted to each other. UObject The base class of all RolePlus objects."
  },
  "api/RolePlus.ExternModule.API.Engine.Core.TypeCastObject-1.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Core.TypeCastObject-1.html",
    "title": "Class TypeCastObject<T1> | RolePlus Docs",
    "keywords": "Class TypeCastObject<T1> The interface which allows defined objects to be casted to each other. Inheritance System.Object TypeCastObject<T1> UObject TFirewall<T> TRule<T> Config CustomRole Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Core Assembly : RolePlus.dll Syntax public abstract class TypeCastObject<T1> where T1 : class Type Parameters Name Description T1 Constructors | Improve this Doc View Source TypeCastObject() Initializes a new instance of the TypeCastObject<T1> class. Declaration public TypeCastObject() Methods | Improve this Doc View Source Cast<T>() Unsafely casts the current T1 instance to the specified T type. Declaration public virtual T Cast<T>() where T : class Returns Type Description T The casted T1 instance. Type Parameters Name Description T The type to which to cast the T1 instance. | Improve this Doc View Source Cast<T>(out T) Safely casts the current T1 instance to the specified T type. Declaration public virtual bool Cast<T>(out T param) where T : class Parameters Type Name Description T param Returns Type Description System.Boolean true if the T1 instance was successfully casted; otherwise, false . Type Parameters Name Description T The type to which to cast the T1 instance."
  },
  "api/RolePlus.ExternModule.API.Engine.Core.UObject.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Core.UObject.html",
    "title": "Class UObject | RolePlus Docs",
    "keywords": "Class UObject The base class of all RolePlus objects. Inheritance System.Object TypeCastObject < UObject > UObject AActor UNetObject Inherited Members TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Core Assembly : RolePlus.dll Syntax public abstract class UObject : TypeCastObject<UObject> Constructors | Improve this Doc View Source UObject() Initializes a new instance of the UObject class. Declaration protected UObject() | Improve this Doc View Source UObject(GameObject) Initializes a new instance of the UObject class. Declaration protected UObject(GameObject gameObject = null) Parameters Type Name Description GameObject gameObject Properties | Improve this Doc View Source Base Gets the base . Declaration public GameObject Base { get; set; } Property Value Type Description GameObject | Improve this Doc View Source IsEditable Gets or sets a value indicating whether the UObject values can be edited. Declaration public bool IsEditable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets the name of the UObject instance. Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source RegisteredTypes Gets all the registered UObject types. Declaration public static IReadOnlyDictionary<Type, List<string>> RegisteredTypes { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < System.Type , System.Collections.Generic.List < System.String >> | Improve this Doc View Source Tag Gets the tag of the UObject instance. Declaration public string Tag { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source CreateDefaultSubobject(Type, GameObject, String) Creates a new instance of the UObject class. Declaration public static UObject CreateDefaultSubobject(Type type, GameObject gameObject, string name) Parameters Type Name Description System.Type type The UObject type. GameObject gameObject System.String name The name to be given to the new UObject instance. Returns Type Description UObject The new UObject instance. | Improve this Doc View Source CreateDefaultSubobject(Type, GameObject, String, Object[]) Creates a new instance of the UObject class. Declaration public static UObject CreateDefaultSubobject(Type type, GameObject gameObject, string name, params object[] parameters) Parameters Type Name Description System.Type type The UObject type. GameObject gameObject System.String name The name to be given to the new UObject instance. System.Object [] parameters The parameters to initialize the object. Returns Type Description UObject The new UObject instance. | Improve this Doc View Source CreateDefaultSubobject(Type, Object[]) Creates a new instance of the UObject class. Declaration public static UObject CreateDefaultSubobject(Type type, params object[] parameters) Parameters Type Name Description System.Type type The UObject type. System.Object [] parameters The parameters to initialize the object. Returns Type Description UObject The new UObject instance. | Improve this Doc View Source CreateDefaultSubobject<T>() Creates a new instance of the UObject class. Declaration public static T CreateDefaultSubobject<T>() where T : UObject Returns Type Description T The new UObject instance. Type Parameters Name Description T The cast UObject type. | Improve this Doc View Source CreateDefaultSubobject<T>(GameObject, String) Creates a new instance of the UObject class. Declaration public static T CreateDefaultSubobject<T>(GameObject gameObject, string name) where T : UObject Parameters Type Name Description GameObject gameObject System.String name The name to be given to the new UObject instance. Returns Type Description T The new UObject instance. Type Parameters Name Description T The UObject type. | Improve this Doc View Source CreateDefaultSubobject<T>(GameObject, String, Object[]) Creates a new instance of the UObject class. Declaration public static T CreateDefaultSubobject<T>(GameObject gameObject, string name, params object[] parameters) where T : UObject Parameters Type Name Description GameObject gameObject System.String name The name to be given to the new UObject instance. System.Object [] parameters The parameters to initialize the object. Returns Type Description T The new UObject instance. Type Parameters Name Description T The UObject type. | Improve this Doc View Source CreateDefaultSubobject<T>(Object[]) Creates a new instance of the UObject class. Declaration public static T CreateDefaultSubobject<T>(params object[] parameters) where T : UObject Parameters Type Name Description System.Object [] parameters The parameters to initialize the object. Returns Type Description T The new UObject instance. Type Parameters Name Description T The UObject type to cast. | Improve this Doc View Source CreateDefaultSubobject<T>(Type) Creates a new instance of the UObject class. Declaration public static T CreateDefaultSubobject<T>(Type type) where T : UObject Parameters Type Name Description System.Type type The UObject type. Returns Type Description T The new UObject instance. Type Parameters Name Description T The cast UObject type. | Improve this Doc View Source CreateDefaultSubobject<T>(Type, GameObject, String) Creates a new instance of the UObject class. Declaration public static T CreateDefaultSubobject<T>(Type type, GameObject gameObject, string name) where T : UObject Parameters Type Name Description System.Type type The UObject type. GameObject gameObject System.String name The name to be given to the new UObject instance. Returns Type Description T The new UObject instance. Type Parameters Name Description T The cast UObject type. | Improve this Doc View Source CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) Creates a new instance of the UObject class. Declaration public static T CreateDefaultSubobject<T>(Type type, GameObject gameObject, string name, params object[] parameters) where T : UObject Parameters Type Name Description System.Type type The UObject type. GameObject gameObject System.String name The name to be given to the new UObject instance. System.Object [] parameters The parameters to initialize the object. Returns Type Description T The new UObject instance. Type Parameters Name Description T The cast UObject type. | Improve this Doc View Source Destroy() Destroys the current UObject instance. Declaration public void Destroy() | Improve this Doc View Source Destroy(Boolean) Declaration protected virtual void Destroy(bool destroying) Parameters Type Name Description System.Boolean destroying | Improve this Doc View Source DestroyActiveObject(Type, GameObject) Destroys an active UObject instance given the specified . Declaration public static bool DestroyActiveObject(Type type, GameObject gameObject) Parameters Type Name Description System.Type type The type of the object. GameObject gameObject The belonging to the object. Returns Type Description System.Boolean true if the object was destroyed; otherwise, false . | Improve this Doc View Source DestroyActiveObject<T>(GameObject) Destroys an active UObject instance of type T given the specified . Declaration public static bool DestroyActiveObject<T>(GameObject gameObject) where T : UObject Parameters Type Name Description GameObject gameObject Returns Type Description System.Boolean true if the object was destroyed; otherwise, false . Type Parameters Name Description T The T type to look for. | Improve this Doc View Source DestroyActiveObjectsOfType<T>() Destroys all the active UObject instances of type T . Declaration public static void DestroyActiveObjectsOfType<T>() where T : UObject Type Parameters Name Description T The T type to look for. | Improve this Doc View Source DestroyAllObjects() Destroys all the active UObject instances. Declaration public static void DestroyAllObjects() | Improve this Doc View Source DestroyAllObjectsOfType<T>() Destroys all the active T UObject instances. Declaration public static void DestroyAllObjectsOfType<T>() where T : UObject Type Parameters Name Description T The T type to look for. | Improve this Doc View Source FindActiveObjectOfType<T>(Func<UObject, Boolean>) Finds the active UObject instances of type T filtered based on a predicate. Declaration public static T FindActiveObjectOfType<T>(Func<UObject, bool> predicate) where T : UObject Parameters Type Name Description System.Func < UObject , System.Boolean > predicate The condition to satify. Returns Type Description T The corresponding active T UObject . Type Parameters Name Description T The T type to look for. | Improve this Doc View Source FindActiveObjectsOfType<T>() Finds all the active UObject instances of type T . Declaration public static T[] FindActiveObjectsOfType<T>() where T : UObject Returns Type Description T[] A T [] containing all the matching results. Type Parameters Name Description T The T type to look for. | Improve this Doc View Source FindActiveObjectsOfType<T>(Func<T, Boolean>) Finds all the active UObject instances of type T . Declaration public static T[] FindActiveObjectsOfType<T>(Func<T, bool> predicate) where T : UObject Parameters Type Name Description System.Func <T, System.Boolean > predicate The condition to satify. Returns Type Description T[] A T [] containing all the elements that satify the condition. Type Parameters Name Description T | Improve this Doc View Source FindActiveObjectsOfType<T>(Func<UObject, Boolean>) Finds all the active UObject instances of type T filtered based on a predicate. Declaration public static T[] FindActiveObjectsOfType<T>(Func<UObject, bool> predicate) where T : UObject Parameters Type Name Description System.Func < UObject , System.Boolean > predicate The condition to satify. Returns Type Description T[] A T [] containing all the matching results. Type Parameters Name Description T The T type to look for. | Improve this Doc View Source FindActiveObjectsOfType<T>(Func<Object, Boolean>) Finds all the active UObject instances of type T . Declaration public static T[] FindActiveObjectsOfType<T>(Func<object, bool> predicate) where T : UObject Parameters Type Name Description System.Func < System.Object , System.Boolean > predicate The condition to satify. Returns Type Description T[] A T [] containing all the elements that satify the condition. Type Parameters Name Description T | Improve this Doc View Source FindActiveObjectsOfType<T>(String) Finds all the active UObject instances of type T with the specified name . Declaration public static T[] FindActiveObjectsOfType<T>(string name) where T : UObject Parameters Type Name Description System.String name The name to look for. Returns Type Description T[] A T [] containing all the matching results. Type Parameters Name Description T The T type to look for. | Improve this Doc View Source FindActiveObjectsOfType<T>(Type) Finds all the active UObject instances of type T . Declaration public static T[] FindActiveObjectsOfType<T>(Type type) where T : UObject Parameters Type Name Description System.Type type The UObject type. Returns Type Description T[] A T [] containing all the matching results. Type Parameters Name Description T The T type to look for. | Improve this Doc View Source FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) Finds all the active UObject instances of type T filtered based on a predicate. Declaration public static T[] FindActiveObjectsOfType<T>(Type type, Func<UObject, bool> predicate) where T : UObject Parameters Type Name Description System.Type type The UObject type. System.Func < UObject , System.Boolean > predicate The condition to satify. Returns Type Description T[] A T [] containing all the matching results. Type Parameters Name Description T The T type to look for. | Improve this Doc View Source FindActiveObjectsWithTagOfType<T>(String) Finds all the active UObject instances of type T with the specified tag . Declaration public static T[] FindActiveObjectsWithTagOfType<T>(string tag) where T : UObject Parameters Type Name Description System.String tag The tag to look for. Returns Type Description T[] A T [] containing all the matching results. Type Parameters Name Description T The T type to look for. | Improve this Doc View Source FindUObjectDefinedTypeByName(String, Boolean) Finds the most accurate System.Type matching the given name . Declaration public static Type FindUObjectDefinedTypeByName(string name, bool ignoreAbstractTypes = true) Parameters Type Name Description System.String name The name to look for. System.Boolean ignoreAbstractTypes A value indicating whether abstract types should be ignored. Returns Type Description System.Type The System.Type with the name that matches the given name. | Improve this Doc View Source GetUObjectTypeByName(String) Gets a System.Type from a given type name. Declaration public static Type GetUObjectTypeByName(string typeName) Parameters Type Name Description System.String typeName The type name to look for. Returns Type Description System.Type A System.Type matching the type name or null if not found. | Improve this Doc View Source GetUObjectTypeFromRegisteredTypes(Type) Gets a UObject type from all the registered types. Declaration public static Type GetUObjectTypeFromRegisteredTypes(Type type) Parameters Type Name Description System.Type type The UObject type. Returns Type Description System.Type The matching System.Type . Exceptions Type Condition System.NullReferenceException Occurs when the requested type is not the same as the specified type. | Improve this Doc View Source GetUObjectTypeFromRegisteredTypes(Type, String) Gets a UObject type from all the registered types. Declaration public static Type GetUObjectTypeFromRegisteredTypes(Type type, string name) Parameters Type Name Description System.Type type The UObject type. System.String name The name of the type to look for. Returns Type Description System.Type The matching System.Type . Exceptions Type Condition System.NullReferenceException Occurs when the requested type's name is not the same as the specified name. | Improve this Doc View Source GetUObjectTypeFromRegisteredTypes<T>() Gets a UObject type from all the registered types. Declaration public static Type GetUObjectTypeFromRegisteredTypes<T>() where T : UObject Returns Type Description System.Type The matching System.Type . Type Parameters Name Description T The UObject type. Exceptions Type Condition System.NullReferenceException Occurs when the requested type is not the same as the specified type. | Improve this Doc View Source GetUObjectTypeFromRegisteredTypes<T>(String) Gets a UObject type from all the registered types. Declaration public static Type GetUObjectTypeFromRegisteredTypes<T>(string name) where T : UObject Parameters Type Name Description System.String name The name of the type to look for. Returns Type Description System.Type The matching System.Type . Type Parameters Name Description T The UObject type. Exceptions Type Condition System.NullReferenceException Occurs when the requested type's name is not the same as the specified name. | Improve this Doc View Source GetUObjectTypeFromRegisteredTypesByName(String) Gets a UObject type from all the registered types. Declaration public static Type GetUObjectTypeFromRegisteredTypesByName(string name) Parameters Type Name Description System.String name The name of the type to look for. Returns Type Description System.Type The matching System.Type . Exceptions Type Condition System.NullReferenceException Occurs when the requested type's name is not the same as the specified name. | Improve this Doc View Source OnBeginDestroy() Fired before the current UObject instance is destroyed. Declaration protected virtual void OnBeginDestroy() | Improve this Doc View Source OnDestroyed() Fired when the current UObject instance has been explicitly destroyed. Declaration protected virtual void OnDestroyed() | Improve this Doc View Source RegisterUObjectType(Type, String) Registers the specified UObject type . Declaration public static Type RegisterUObjectType(Type type, string name) Parameters Type Name Description System.Type type The type to register. System.String name The name of the registered type. Returns Type Description System.Type | Improve this Doc View Source RegisterUObjectType<T>(String) Registers the specified UObject type T . Declaration public static Type RegisterUObjectType<T>(string name) where T : UObject Parameters Type Name Description System.String name The name of the registered type. Returns Type Description System.Type Type Parameters Name Description T The type to register. | Improve this Doc View Source UnregisterUObjectType(String) Unregisters the specified UObject type. Declaration public static bool UnregisterUObjectType(string name) Parameters Type Name Description System.String name The name of the type to unregister. Returns Type Description System.Boolean true if the type was unregistered successfully; otherwise, false . | Improve this Doc View Source UnregisterUObjectType(Type) Registers the specified UObject type. Declaration public static bool UnregisterUObjectType(Type type) Parameters Type Name Description System.Type type The type to register. Returns Type Description System.Boolean true if the type was unregistered successfully; otherwise, false ."
  },
  "api/RolePlus.ExternModule.API.Engine.Extensions.ComponentExtensions.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Extensions.ComponentExtensions.html",
    "title": "Class ComponentExtensions | RolePlus Docs",
    "keywords": "Class ComponentExtensions A set of useful extensions to easily interact with AActor . Inheritance System.Object ComponentExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Extensions Assembly : RolePlus.dll Syntax public static class ComponentExtensions Methods | Improve this Doc View Source AddActorComponent<T>(GameObject, String) Adds a T AActor to the given . Declaration public static T AddActorComponent<T>(this GameObject gameObject, string name = \"\") where T : AActor Parameters Type Name Description GameObject gameObject The who should own the AActor . System.String name Returns Type Description T The added T AActor instance. Type Parameters Name Description T The T AActor to be added. | Improve this Doc View Source AddActorComponent<T>(Player, String) Adds a T AActor to the given . Declaration public static T AddActorComponent<T>(this Player player, string name = \"\") where T : AActor Parameters Type Name Description Player player The who should own the AActor . System.String name The name of the T AActor . Returns Type Description T The added T AActor instance. Type Parameters Name Description T The T AActor to be added. | Improve this Doc View Source AddActorComponent<T>(AActor, String) Adds a T AActor to the given AActor . Declaration public static T AddActorComponent<T>(this AActor actor, string name = \"\") where T : AActor Parameters Type Name Description AActor actor The AActor who should own the AActor . System.String name Returns Type Description T The added T AActor instance. Type Parameters Name Description T The T AActor to be added. | Improve this Doc View Source GetActiveActorComponentsAll(Player) Gets all active AActor s from the given . Declaration public static IEnumerable<AActor> GetActiveActorComponentsAll(this Player player) Parameters Type Name Description Player player The who owns the active AActor s. Returns Type Description System.Collections.Generic.IEnumerable < AActor > A System.Collections.Generic.IEnumerable<T> of AActor contaning all the active AActor s. | Improve this Doc View Source GetActiveComponentsAll(GameObject) Gets all active AActor s from the given . Declaration public static IEnumerable<AActor> GetActiveComponentsAll(this GameObject gameObject) Parameters Type Name Description GameObject gameObject The who owns the active AActor s. Returns Type Description System.Collections.Generic.IEnumerable < AActor > A System.Collections.Generic.IEnumerable<T> of AActor contaning all the active AActor s. | Improve this Doc View Source GetActorComponent<T>(GameObject) Gets a T AActor from the given . Declaration public static T GetActorComponent<T>(this GameObject gameObject) where T : AActor Parameters Type Name Description GameObject gameObject The who owns the AActor . Returns Type Description T The T AActor instance. Type Parameters Name Description T The T AActor to be added. | Improve this Doc View Source GetActorComponent<T>(Player) Gets a T AActor from the given . Declaration public static T GetActorComponent<T>(this Player player) where T : AActor Parameters Type Name Description Player player The who owns the AActor . Returns Type Description T The T AActor instance. Type Parameters Name Description T The T AActor to be added. | Improve this Doc View Source HasActorComponent<T>(GameObject) Checks if the given has an active T AActor Declaration public static bool HasActorComponent<T>(this GameObject gameObject) where T : AActor Parameters Type Name Description GameObject gameObject The to check. Returns Type Description System.Boolean true if the T AActor was found; otherwise, false . Type Parameters Name Description T The AActor to look for. | Improve this Doc View Source HasActorComponent<T>(Player) Checks if the given has an active T AActor Declaration public static bool HasActorComponent<T>(this Player player) where T : AActor Parameters Type Name Description Player player The to check. Returns Type Description System.Boolean true if the T AActor was found; otherwise, false . Type Parameters Name Description T The AActor to look for. | Improve this Doc View Source TryGetActorComponent<T>(GameObject, out T) Gets a T AActor from the given . Declaration public static bool TryGetActorComponent<T>(this GameObject gameObject, out T component) where T : AActor Parameters Type Name Description GameObject gameObject The who owns the AActor . T component The T AActor . Returns Type Description System.Boolean true if the T AActor was found; otherwise, false . Type Parameters Name Description T The T AActor to be added. | Improve this Doc View Source TryGetActorComponent<T>(Player, out T) Gets a T AActor from the given . Declaration public static bool TryGetActorComponent<T>(this Player player, out T component) where T : AActor Parameters Type Name Description Player player The who owns the AActor . T component The T AActor . Returns Type Description System.Boolean true if the T AActor was found; otherwise, false . Type Parameters Name Description T The T AActor to be added."
  },
  "api/RolePlus.ExternModule.API.Engine.Extensions.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Extensions.html",
    "title": "Namespace RolePlus.ExternModule.API.Engine.Extensions | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Engine.Extensions Classes ComponentExtensions A set of useful extensions to easily interact with AActor ."
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.AActor.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.AActor.html",
    "title": "Class AActor | RolePlus Docs",
    "keywords": "Class AActor Actor is the base class for a UObject that can be placed or spawned in-game. Inheritance System.Object TypeCastObject < UObject > UObject AActor AActorComponent AActorFrameComponent CustomAbility Inherited Members UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework Assembly : RolePlus.dll Syntax public abstract class AActor : UObject Constructors | Improve this Doc View Source AActor(GameObject) Initializes a new instance of the AActor class. Declaration protected AActor(GameObject gameObject = null) Parameters Type Name Description GameObject gameObject Fields | Improve this Doc View Source DefaultFixedTickRate The default fixed tick rate. Declaration public const float DefaultFixedTickRate = 0.016F Field Value Type Description System.Single Properties | Improve this Doc View Source CanEverTick Gets or sets a value indicating whether the AActor can tick. Declaration public virtual bool CanEverTick { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ComponentsInChildren Gets a System.Collections.Generic.HashSet<T> of AActor containing all the components in children. Declaration protected HashSet<AActor> ComponentsInChildren { get; } Property Value Type Description System.Collections.Generic.HashSet < AActor > | Improve this Doc View Source ComponentsInParent Gets a AActor [] containing all the components in parent. Declaration protected AActor[] ComponentsInParent { get; } Property Value Type Description AActor [] | Improve this Doc View Source FixedTickRate Gets or sets the value which determines the size of every tick. Declaration public virtual float FixedTickRate { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Position Gets or sets the position . Declaration public virtual Vector3 Position { get; set; } Property Value Type Description Vector3 | Improve this Doc View Source Rotation Gets or sets the rotation . Declaration public virtual Quaternion Rotation { get; set; } Property Value Type Description Quaternion | Improve this Doc View Source Scale Gets or sets the scale . Declaration public virtual Vector3 Scale { get; set; } Property Value Type Description Vector3 | Improve this Doc View Source Transform Gets the . Declaration public Transform Transform { get; } Property Value Type Description Transform Methods | Improve this Doc View Source AddComponent(Type, String) Adds a component to this actor. Declaration public AActor AddComponent(Type type, string name = \"\") Parameters Type Name Description System.Type type The System.Type of the AActor to be added. System.String name The name of the component. Returns Type Description AActor | Improve this Doc View Source AddComponent<T>(String) Adds a component to this actor. Declaration public T AddComponent<T>(string name = \"\") where T : AActor Parameters Type Name Description System.String name The name of the component. Returns Type Description T Type Parameters Name Description T The T AActor to be added. | Improve this Doc View Source AttachTo(AActor, GameObject) Attaches a AActor to the specified . Declaration public static void AttachTo(AActor comp, GameObject gameObject) Parameters Type Name Description AActor comp AActor GameObject gameObject | Improve this Doc View Source AttachTo(AActor, AActor) Attaches a AActor to the specified . Declaration public static void AttachTo(AActor comp, AActor actor) Parameters Type Name Description AActor comp AActor AActor actor AActor | Improve this Doc View Source GetComponent(Type) Gets a component from this actor. Declaration public AActor GetComponent(Type type) Parameters Type Name Description System.Type type The System.Type of the AActor to look for. Returns Type Description AActor | Improve this Doc View Source GetComponent<T>() Gets a component from this actor. Declaration public T GetComponent<T>() where T : AActor Returns Type Description T Type Parameters Name Description T The T AActor to look for. | Improve this Doc View Source HasComponent(Type) Checks if the actor has an active component. Declaration public bool HasComponent(Type type) Parameters Type Name Description System.Type type The AActor to look for. Returns Type Description System.Boolean true if the component was found; otherwise, false . | Improve this Doc View Source HasComponent<T>() Checks if the actor has an active component. Declaration public bool HasComponent<T>() where T : AActor Returns Type Description System.Boolean true if the component was found; otherwise, false . Type Parameters Name Description T The AActor to look for. | Improve this Doc View Source OnBeginDestroy() Declaration protected override void OnBeginDestroy() Overrides UObject.OnBeginDestroy() | Improve this Doc View Source OnBeginPlay() Fired after the AActor instance is created. Declaration protected virtual void OnBeginPlay() | Improve this Doc View Source OnEndPlay() Fired before the current AActor instance is destroyed. Declaration protected virtual void OnEndPlay() | Improve this Doc View Source SubscribeEvents() Subscribes all the events. Declaration protected virtual void SubscribeEvents() | Improve this Doc View Source Tick() Fired every tick. Declaration protected virtual void Tick() | Improve this Doc View Source TryGetComponent(Type, out AActor) Tries to get a component from this actor. Declaration public bool TryGetComponent(Type type, out AActor component) Parameters Type Name Description System.Type type The System.Type of the AActor to get. AActor component The found component. Returns Type Description System.Boolean true if the component was found; otherwise, false . | Improve this Doc View Source TryGetComponent<T>(out T) Tries to get a component from this actor. Declaration public bool TryGetComponent<T>(out T component) where T : AActor Parameters Type Name Description T component The T AActor . Returns Type Description System.Boolean true if the component was found; otherwise, false . Type Parameters Name Description T The T AActor to look for. | Improve this Doc View Source UnsubscribeEvents() Unsubscribes all the events. Declaration protected virtual void UnsubscribeEvents() Extension Methods ComponentExtensions.AddActorComponent<T>(AActor, String)"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.AnimatorParameter.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.AnimatorParameter.html",
    "title": "Class AnimatorParameter | RolePlus Docs",
    "keywords": "Class AnimatorParameter A class to easily handle objects. Inheritance System.Object AnimatorParameter Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework Assembly : RolePlus.dll Syntax public class AnimatorParameter Constructors | Improve this Doc View Source AnimatorParameter(Animator, String) Initializes a new instance of the AnimatorParameter class. Declaration public AnimatorParameter(Animator animator, string name) Parameters Type Name Description Animator animator System.String name | Improve this Doc View Source AnimatorParameter(Animator, String, Boolean) Initializes a new instance of the AnimatorParameter class. Declaration public AnimatorParameter(Animator animator, string name, bool state) Parameters Type Name Description Animator animator System.String name System.Boolean state Properties | Improve this Doc View Source Animator The . Declaration public Animator Animator { get; } Property Value Type Description Animator | Improve this Doc View Source Name The name of the parameter. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source State The state of the parameter. Declaration public bool State { get; set; } Property Value Type Description System.Boolean Operators | Improve this Doc View Source Equality(AnimatorParameter, AnimatorParameter) Compares two operands: AnimatorParameter and AnimatorParameter . Declaration public static bool operator ==(AnimatorParameter left, AnimatorParameter right) Parameters Type Name Description AnimatorParameter left The AnimatorParameter to compare. AnimatorParameter right The AnimatorParameter to compare. Returns Type Description System.Boolean true if the values are equal. | Improve this Doc View Source Inequality(AnimatorParameter, AnimatorParameter) Compares two operands: AnimatorParameter and AnimatorParameter . Declaration public static bool operator !=(AnimatorParameter left, AnimatorParameter right) Parameters Type Name Description AnimatorParameter left The AnimatorParameter to compare. AnimatorParameter right The AnimatorParameter to compare. Returns Type Description System.Boolean true if the values are not equal."
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Bootstrap.GlobalPatchProcessor.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Bootstrap.GlobalPatchProcessor.html",
    "title": "Class GlobalPatchProcessor | RolePlus Docs",
    "keywords": "Class GlobalPatchProcessor A alternative detour tool which adds more ways to manage patches and external assemblies. Inheritance System.Object GlobalPatchProcessor Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Bootstrap Assembly : RolePlus.dll Syntax public class GlobalPatchProcessor Properties | Improve this Doc View Source PatchedGroupMethods Gets all the patched methods and their relative patch group. Declaration public static IReadOnlyDictionary<MethodBase, HashSet<string>> PatchedGroupMethods { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < System.Reflection.MethodBase , System.Collections.Generic.HashSet < System.String >> | Improve this Doc View Source PatchedMethods Gets all the patched methods. Declaration public static IEnumerable<MethodBase> PatchedMethods { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Reflection.MethodBase > Methods | Improve this Doc View Source PatchAll(String, String) Searches the current assembly for Harmony annotations and uses them to create patches. It supports target-patching using PatchGroupAttribute and the relative groupId . Declaration public static Harmony PatchAll(string id = \"\", string groupId = null) Parameters Type Name Description System.String id The Harmony instance id. System.String groupId The target group to include. Returns Type Description Harmony Exceptions Type Condition System.ArgumentNullException Thrown when the GroupId is null or empty. | Improve this Doc View Source UnpatchAll(String, String) Unpatches methods by patching them with zero patches. Declaration public static void UnpatchAll(string id = \"\", string groupId = null) Parameters Type Name Description System.String id The Harmony instance id. System.String groupId The target group to include. Exceptions Type Condition System.ArgumentNullException Thrown when the GroupId is null or empty."
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Bootstrap.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Bootstrap.html",
    "title": "Namespace RolePlus.ExternModule.API.Engine.Framework.Bootstrap | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Engine.Framework.Bootstrap Classes GlobalPatchProcessor A alternative detour tool which adds more ways to manage patches and external assemblies. PatchGroupAttribute This attribute is used within Harmony patches and the relative annotations to define a target element. A target element can be a System.Type , langword_csharp_class or System.Reflection.MethodInfo . PatchGroupAttribute allows to define elements made for patching. A target-patching approach is useful to patch specific elements without having to directly patch everything without considering excluded elements. Target-patching also allows to emit patches without having to manually define and/or supply parameters and elements made for patching"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Bootstrap.PatchGroupAttribute.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Bootstrap.PatchGroupAttribute.html",
    "title": "Class PatchGroupAttribute | RolePlus Docs",
    "keywords": "Class PatchGroupAttribute This attribute is used within Harmony patches and the relative annotations to define a target element. A target element can be a System.Type , langword_csharp_class or System.Reflection.MethodInfo . PatchGroupAttribute allows to define elements made for patching. A target-patching approach is useful to patch specific elements without having to directly patch everything without considering excluded elements. Target-patching also allows to emit patches without having to manually define and/or supply parameters and elements made for patching Inheritance System.Object System.Attribute PatchGroupAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Bootstrap Assembly : RolePlus.dll Syntax [AttributeUsage(AttributeTargets.All, AllowMultiple = true, Inherited = true)] public class PatchGroupAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source PatchGroupAttribute(String) Initializes a new instance of the PatchGroupAttribute class. Declaration public PatchGroupAttribute(string groupId) Parameters Type Name Description System.String groupId The group of target-patch. Properties | Improve this Doc View Source GroupId Gets the group id. Declaration public string GroupId { get; } Property Value Type Description System.String Implements System.Runtime.InteropServices._Attribute"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.Delegates.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.Delegates.html",
    "title": "Class Delegates | RolePlus Docs",
    "keywords": "Class Delegates Patch and unpatch events into the game. Inheritance System.Object Delegates Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Events Assembly : RolePlus.dll Syntax public sealed class Delegates"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.Delegates.TEventHandler.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.Delegates.TEventHandler.html",
    "title": "Delegate Delegates.TEventHandler | RolePlus Docs",
    "keywords": "Delegate Delegates.TEventHandler The custom System.EventHandler delegate with empty parameters. Namespace : RolePlus.ExternModule.API.Engine.Framework.Events Assembly : RolePlus.dll Syntax public delegate void TEventHandler();"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.Delegates.TEventHandler-1.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.Delegates.TEventHandler-1.html",
    "title": "Delegate Delegates.TEventHandler<TEventArgs> | RolePlus Docs",
    "keywords": "Delegate Delegates.TEventHandler<TEventArgs> The System.EventHandler delegate. Namespace : RolePlus.ExternModule.API.Engine.Framework.Events Assembly : RolePlus.dll Syntax public delegate void TEventHandler<TEventArgs>(TEventArgs ev) where TEventArgs : EventArgs; Parameters Type Name Description TEventArgs ev Type Parameters Name Description TEventArgs"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.Delegates.TEventHandler-2.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.Delegates.TEventHandler-2.html",
    "title": "Delegate Delegates.TEventHandler<T1, TEventArgs> | RolePlus Docs",
    "keywords": "Delegate Delegates.TEventHandler<T1, TEventArgs> The System.EventHandler delegate. Namespace : RolePlus.ExternModule.API.Engine.Framework.Events Assembly : RolePlus.dll Syntax public delegate void TEventHandler<T1, TEventArgs>(TEventArgs ev) where TEventArgs : PlexEventArgs<T1>; Parameters Type Name Description TEventArgs ev Type Parameters Name Description T1 TEventArgs"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.Delegates.TEventHandler-3.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.Delegates.TEventHandler-3.html",
    "title": "Delegate Delegates.TEventHandler<T1, T2, TEventArgs> | RolePlus Docs",
    "keywords": "Delegate Delegates.TEventHandler<T1, T2, TEventArgs> The System.EventHandler delegate. Namespace : RolePlus.ExternModule.API.Engine.Framework.Events Assembly : RolePlus.dll Syntax public delegate void TEventHandler<T1, T2, TEventArgs>(TEventArgs ev) where TEventArgs : MultiPlexEventArgs<T1, T2>; Parameters Type Name Description TEventArgs ev Type Parameters Name Description T1 T2 TEventArgs"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs.ChangingAnimationStateEventArgs.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs.ChangingAnimationStateEventArgs.html",
    "title": "Class ChangingAnimationStateEventArgs | RolePlus Docs",
    "keywords": "Class ChangingAnimationStateEventArgs Contains all the information before a ASchematicMeshComponent changes animation state. Inheritance System.Object System.EventArgs ChangingAnimationStateEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs Assembly : RolePlus.dll Syntax public class ChangingAnimationStateEventArgs : EventArgs Constructors | Improve this Doc View Source ChangingAnimationStateEventArgs(ASchematicMeshComponent, Animator, AnimatorParameter) Initializes a new instance of the ChangingAnimationStateEventArgs class. Declaration public ChangingAnimationStateEventArgs(ASchematicMeshComponent component, Animator animator, AnimatorParameter param) Parameters Type Name Description ASchematicMeshComponent component Animator animator AnimatorParameter param Properties | Improve this Doc View Source AnimationParameter Gets or sets the AnimatorParameter which is being changed to. Declaration public AnimatorParameter AnimationParameter { get; } Property Value Type Description AnimatorParameter | Improve this Doc View Source Animator Gets the . Declaration public Animator Animator { get; } Property Value Type Description Animator | Improve this Doc View Source MeshComponent Gets the ASchematicMeshComponent changing animation state. Declaration public ASchematicMeshComponent MeshComponent { get; } Property Value Type Description ASchematicMeshComponent"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs.CompletedAnimationStateEventArgs.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs.CompletedAnimationStateEventArgs.html",
    "title": "Class CompletedAnimationStateEventArgs | RolePlus Docs",
    "keywords": "Class CompletedAnimationStateEventArgs Contains all the information after a ASchematicMeshComponent completes an animation. Inheritance System.Object System.EventArgs CompletedAnimationStateEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs Assembly : RolePlus.dll Syntax public class CompletedAnimationStateEventArgs : EventArgs Constructors | Improve this Doc View Source CompletedAnimationStateEventArgs(ASchematicMeshComponent, Animator, AnimatorStateInfo) Initializes a new instance of the CompletedAnimationStateEventArgs class. Declaration public CompletedAnimationStateEventArgs(ASchematicMeshComponent component, Animator animator, AnimatorStateInfo info) Parameters Type Name Description ASchematicMeshComponent component Animator animator AnimatorStateInfo info Properties | Improve this Doc View Source Animator Gets the . Declaration public Animator Animator { get; } Property Value Type Description Animator | Improve this Doc View Source Info Gets or sets the of the completed animation. Declaration public AnimatorStateInfo Info { get; } Property Value Type Description AnimatorStateInfo | Improve this Doc View Source MeshComponent Gets the ASchematicMeshComponent which completed the animation. Declaration public ASchematicMeshComponent MeshComponent { get; } Property Value Type Description ASchematicMeshComponent"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs.html",
    "title": "Namespace RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs Classes ChangingAnimationStateEventArgs Contains all the information before a ASchematicMeshComponent changes animation state. CompletedAnimationStateEventArgs Contains all the information after a ASchematicMeshComponent completes an animation. InteractingObjectEventArgs Contains all the information before an object interaction occurs. ReceivingNetworkMessageEventArgs<T1> Contains all the information before a TNetworkMessage<T1, T2> is sent. ReceivingNetworkMessageEventArgs<T1, T2> Contains all the information before a TNetworkMessage<T1, T2> is sent. ReceivingPipelineMessageEventArgs<T1> Contains all the information before a TNetworkPipelineMessage<T1> reaches the pipeline."
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs.InteractingObjectEventArgs.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs.InteractingObjectEventArgs.html",
    "title": "Class InteractingObjectEventArgs | RolePlus Docs",
    "keywords": "Class InteractingObjectEventArgs Contains all the information before an object interaction occurs. Inheritance System.Object System.EventArgs InteractingObjectEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs Assembly : RolePlus.dll Syntax public class InteractingObjectEventArgs : EventArgs Constructors | Improve this Doc View Source InteractingObjectEventArgs(Player, AInteractableFrameComponent) Initializes a new instance of the InteractingObjectEventArgs class. Declaration public InteractingObjectEventArgs(Player player, AInteractableFrameComponent interactableFrame) Parameters Type Name Description Player player AInteractableFrameComponent interactableFrame Properties | Improve this Doc View Source InteractableFrame Gets the AInteractableFrameComponent . Declaration public AInteractableFrameComponent InteractableFrame { get; } Property Value Type Description AInteractableFrameComponent | Improve this Doc View Source Player Gets the player who's trying to interact with the InteractableFrame . Declaration public Player Player { get; } Property Value Type Description Player"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs.ReceivingNetworkMessageEventArgs-1.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs.ReceivingNetworkMessageEventArgs-1.html",
    "title": "Class ReceivingNetworkMessageEventArgs<T1> | RolePlus Docs",
    "keywords": "Class ReceivingNetworkMessageEventArgs<T1> Contains all the information before a TNetworkMessage<T1, T2> is sent. Inheritance System.Object System.EventArgs PlexEventArgs <T1> ReceivingNetworkMessageEventArgs<T1> Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs Assembly : RolePlus.dll Syntax public class ReceivingNetworkMessageEventArgs<T1> : PlexEventArgs<T1> Type Parameters Name Description T1 Constructors | Improve this Doc View Source ReceivingNetworkMessageEventArgs() Initializes a new instance of the ReceivingNetworkMessageEventArgs<T1> class. Declaration protected ReceivingNetworkMessageEventArgs() | Improve this Doc View Source ReceivingNetworkMessageEventArgs(TNetworkMessage<T1>, TNetworkMessage<T1>, Boolean) Initializes a new instance of the ReceivingNetworkMessageEventArgs<T1> class. Declaration public ReceivingNetworkMessageEventArgs(TNetworkMessage<T1> oldMsg, TNetworkMessage<T1> newMsg, bool isAllowed = true) Parameters Type Name Description TNetworkMessage <T1> oldMsg TNetworkMessage <T1> newMsg System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the message can be sent. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewMessage Gets the received TNetworkMessage<T1, T2> . Declaration public TNetworkMessage<T1> NewMessage { get; } Property Value Type Description TNetworkMessage <T1> | Improve this Doc View Source OldMessage Gets the old TNetworkMessage<T1, T2> . Declaration public TNetworkMessage<T1> OldMessage { get; } Property Value Type Description TNetworkMessage <T1>"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs.ReceivingNetworkMessageEventArgs-2.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs.ReceivingNetworkMessageEventArgs-2.html",
    "title": "Class ReceivingNetworkMessageEventArgs<T1, T2> | RolePlus Docs",
    "keywords": "Class ReceivingNetworkMessageEventArgs<T1, T2> Contains all the information before a TNetworkMessage<T1, T2> is sent. Inheritance System.Object System.EventArgs PlexEventArgs <T1> MultiPlexEventArgs <T1, T2> ReceivingNetworkMessageEventArgs<T1, T2> Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs Assembly : RolePlus.dll Syntax public class ReceivingNetworkMessageEventArgs<T1, T2> : MultiPlexEventArgs<T1, T2> Type Parameters Name Description T1 T2 Constructors | Improve this Doc View Source ReceivingNetworkMessageEventArgs(TNetworkMessage<T1, T2>, TNetworkMessage<T1, T2>, Boolean) Initializes a new instance of the ReceivingNetworkMessageEventArgs<T1, T2> class. Declaration public ReceivingNetworkMessageEventArgs(TNetworkMessage<T1, T2> oldMsg, TNetworkMessage<T1, T2> newMsg, bool isAllowed = true) Parameters Type Name Description TNetworkMessage <T1, T2> oldMsg TNetworkMessage <T1, T2> newMsg System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the message can be sent. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewMessage Gets the received TNetworkMessage<T1, T2> . Declaration public TNetworkMessage<T1, T2> NewMessage { get; } Property Value Type Description TNetworkMessage <T1, T2> | Improve this Doc View Source OldMessage Gets the old TNetworkMessage<T1, T2> . Declaration public TNetworkMessage<T1, T2> OldMessage { get; } Property Value Type Description TNetworkMessage <T1, T2>"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs.ReceivingPipelineMessageEventArgs-1.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs.ReceivingPipelineMessageEventArgs-1.html",
    "title": "Class ReceivingPipelineMessageEventArgs<T1> | RolePlus Docs",
    "keywords": "Class ReceivingPipelineMessageEventArgs<T1> Contains all the information before a TNetworkPipelineMessage<T1> reaches the pipeline. Inheritance System.Object System.EventArgs PlexEventArgs <T1> ReceivingPipelineMessageEventArgs<T1> Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Events.EventArgs Assembly : RolePlus.dll Syntax public class ReceivingPipelineMessageEventArgs<T1> : PlexEventArgs<T1> Type Parameters Name Description T1 Constructors | Improve this Doc View Source ReceivingPipelineMessageEventArgs(TNetworkMessage<T1>, Boolean) Initializes a new instance of the ReceivingPipelineMessageEventArgs<T1> class. Declaration public ReceivingPipelineMessageEventArgs(TNetworkMessage<T1> msg, bool isAllowed = true) Parameters Type Name Description TNetworkMessage <T1> msg System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the message can reach the pipeline. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Message Gets the received TNetworkMessage<T1, T2> . Declaration public TNetworkPipelineMessage<T1> Message { get; } Property Value Type Description TNetworkPipelineMessage <T1>"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.Handlers.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.Handlers.html",
    "title": "Namespace RolePlus.ExternModule.API.Engine.Framework.Events.Handlers | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Engine.Framework.Events.Handlers Classes Network Handles all the network events. Network.MultiPlex<T1, T2> Handles all the network events which require two generic types. Network.Plex<T1> Handles all the network events which require a generic type. Player Handles all the network events. UObject Handles all the network events."
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.Handlers.Network.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.Handlers.Network.html",
    "title": "Class Network | RolePlus Docs",
    "keywords": "Class Network Handles all the network events. Inheritance System.Object Network Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Events.Handlers Assembly : RolePlus.dll Syntax public static class Network Methods | Improve this Doc View Source OnReceivingNetworkMessage<T1>(ReceivingNetworkMessageEventArgs<T1>) Called before receiving a TNetworkMessage<T1> . Declaration public static void OnReceivingNetworkMessage<T1>(ReceivingNetworkMessageEventArgs<T1> ev) Parameters Type Name Description ReceivingNetworkMessageEventArgs <T1> ev The ReceivingNetworkMessageEventArgs<T1> instance. Type Parameters Name Description T1 The source. | Improve this Doc View Source OnReceivingNetworkMessage<T1, T2>(ReceivingNetworkMessageEventArgs<T1, T2>) Called before receiving a TNetworkMessage<T1, T2> . Declaration public static void OnReceivingNetworkMessage<T1, T2>(ReceivingNetworkMessageEventArgs<T1, T2> ev) Parameters Type Name Description ReceivingNetworkMessageEventArgs <T1, T2> ev The ReceivingNetworkMessageEventArgs<T1, T2> instance. Type Parameters Name Description T1 The source. T2 The content. | Improve this Doc View Source OnReceivingPipelineMessage<T1>(ReceivingPipelineMessageEventArgs<T1>) Called before a TNetworkMessage<T1> reaches the pipeline. Declaration public static void OnReceivingPipelineMessage<T1>(ReceivingPipelineMessageEventArgs<T1> ev) Parameters Type Name Description ReceivingPipelineMessageEventArgs <T1> ev The ReceivingPipelineMessageEventArgs<T1> instance. Type Parameters Name Description T1 The source."
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.Handlers.Network.MultiPlex-2.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.Handlers.Network.MultiPlex-2.html",
    "title": "Class Network.MultiPlex<T1, T2> | RolePlus Docs",
    "keywords": "Class Network.MultiPlex<T1, T2> Handles all the network events which require two generic types. Inheritance System.Object Network.MultiPlex<T1, T2> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Events.Handlers Assembly : RolePlus.dll Syntax public static class MultiPlex<T1, T2> Type Parameters Name Description T1 T2 Methods | Improve this Doc View Source OnReceivingNetworkMessage(ReceivingNetworkMessageEventArgs<T1, T2>) Called before receiving a TNetworkMessage<T1, T2> . Declaration public static void OnReceivingNetworkMessage(ReceivingNetworkMessageEventArgs<T1, T2> ev) Parameters Type Name Description ReceivingNetworkMessageEventArgs <T1, T2> ev The ReceivingNetworkMessageEventArgs<T1, T2> instance. Events | Improve this Doc View Source ReceivingNetworkMessage Invoked before receiving a TNetworkMessage<T1, T2> . Declaration public static event Delegates.TEventHandler<ReceivingNetworkMessageEventArgs<T1, T2>> ReceivingNetworkMessage Event Type Type Description Delegates.TEventHandler < ReceivingNetworkMessageEventArgs <T1, T2>>"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.Handlers.Network.Plex-1.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.Handlers.Network.Plex-1.html",
    "title": "Class Network.Plex<T1> | RolePlus Docs",
    "keywords": "Class Network.Plex<T1> Handles all the network events which require a generic type. Inheritance System.Object Network.Plex<T1> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Events.Handlers Assembly : RolePlus.dll Syntax public static class Plex<T1> Type Parameters Name Description T1 Methods | Improve this Doc View Source OnReceivingNetworkMessage(ReceivingNetworkMessageEventArgs<T1>) Called before receiving a TNetworkMessage<T1> . Declaration public static void OnReceivingNetworkMessage(ReceivingNetworkMessageEventArgs<T1> ev) Parameters Type Name Description ReceivingNetworkMessageEventArgs <T1> ev The ReceivingNetworkMessageEventArgs<T1> instance. | Improve this Doc View Source OnReceivingPipelineMessage(ReceivingPipelineMessageEventArgs<T1>) Called before a TNetworkMessage<T1> reaches the pipeline. Declaration public static void OnReceivingPipelineMessage(ReceivingPipelineMessageEventArgs<T1> ev) Parameters Type Name Description ReceivingPipelineMessageEventArgs <T1> ev The ReceivingPipelineMessageEventArgs<T1> instance. Events | Improve this Doc View Source ReceivingNetworkMessage Invoked before receiving a TNetworkMessage<T1> . Declaration public static event Delegates.TEventHandler<ReceivingNetworkMessageEventArgs<T1>> ReceivingNetworkMessage Event Type Type Description Delegates.TEventHandler < ReceivingNetworkMessageEventArgs <T1>> | Improve this Doc View Source ReceivingPipelineMessage Invoked before receiving a TNetworkMessage<T1, T2> . Declaration public static event Delegates.TEventHandler<ReceivingPipelineMessageEventArgs<T1>> ReceivingPipelineMessage Event Type Type Description Delegates.TEventHandler < ReceivingPipelineMessageEventArgs <T1>>"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.Handlers.Player.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.Handlers.Player.html",
    "title": "Class Player | RolePlus Docs",
    "keywords": "Class Player Handles all the network events. Inheritance System.Object Player Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Events.Handlers Assembly : RolePlus.dll Syntax public static class Player Methods | Improve this Doc View Source OnInteractingObject(InteractingObjectEventArgs) Called before an object interaction occurs. Declaration public static void OnInteractingObject(InteractingObjectEventArgs ev) Parameters Type Name Description InteractingObjectEventArgs ev The InteractingObjectEventArgs instance. Events | Improve this Doc View Source InteractingObject Invoked before an object interaction occurs. Declaration public static event Delegates.TEventHandler<InteractingObjectEventArgs> InteractingObject Event Type Type Description Delegates.TEventHandler < InteractingObjectEventArgs >"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.Handlers.UObject.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.Handlers.UObject.html",
    "title": "Class UObject | RolePlus Docs",
    "keywords": "Class UObject Handles all the network events. Inheritance System.Object UObject Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Events.Handlers Assembly : RolePlus.dll Syntax public static class UObject Methods | Improve this Doc View Source OnChangingAnimationState(ChangingAnimationStateEventArgs) Called before a ASchematicMeshComponent changes animation state. Declaration public static void OnChangingAnimationState(ChangingAnimationStateEventArgs ev) Parameters Type Name Description ChangingAnimationStateEventArgs ev The ChangingAnimationStateEventArgs instance. | Improve this Doc View Source OnCompletedAnimationState(CompletedAnimationStateEventArgs) Called after a ASchematicMeshComponent completes an animation. Declaration public static void OnCompletedAnimationState(CompletedAnimationStateEventArgs ev) Parameters Type Name Description CompletedAnimationStateEventArgs ev The CompletedAnimationStateEventArgs instance. Events | Improve this Doc View Source ChangingAnimationState Fired before a ASchematicMeshComponent changes animation state. Declaration public static event Delegates.TEventHandler<ChangingAnimationStateEventArgs> ChangingAnimationState Event Type Type Description Delegates.TEventHandler < ChangingAnimationStateEventArgs > | Improve this Doc View Source CompletedAnimationState Fired after a ASchematicMeshComponent completes an animation. Declaration public static event Delegates.TEventHandler<CompletedAnimationStateEventArgs> CompletedAnimationState Event Type Type Description Delegates.TEventHandler < CompletedAnimationStateEventArgs >"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.html",
    "title": "Namespace RolePlus.ExternModule.API.Engine.Framework.Events | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Engine.Framework.Events Classes Delegates Patch and unpatch events into the game. MultiPlexEventArgs<T1, T2> Patch and unpatch events into the game. PlexEventArgs<T1> Patch and unpatch events into the game. Delegates Delegates.TEventHandler The custom System.EventHandler delegate with empty parameters. Delegates.TEventHandler<TEventArgs> The System.EventHandler delegate. Delegates.TEventHandler<T1, TEventArgs> The System.EventHandler delegate. Delegates.TEventHandler<T1, T2, TEventArgs> The System.EventHandler delegate. MultiPlexEventArgs<T1, T2>.TEventHandler<T1, T2, TEventArgs> The System.EventHandler delegate. PlexEventArgs<T1>.TEventHandler<T1, TEventArgs> The System.EventHandler delegate."
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.MultiPlexEventArgs-2.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.MultiPlexEventArgs-2.html",
    "title": "Class MultiPlexEventArgs<T1, T2> | RolePlus Docs",
    "keywords": "Class MultiPlexEventArgs<T1, T2> Patch and unpatch events into the game. Inheritance System.Object System.EventArgs PlexEventArgs <T1> MultiPlexEventArgs<T1, T2> ReceivingNetworkMessageEventArgs<T1, T2> Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Events Assembly : RolePlus.dll Syntax public class MultiPlexEventArgs<T1, T2> : PlexEventArgs<T1> Type Parameters Name Description T1 T2"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.MultiPlexEventArgs-2.TEventHandler-3.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.MultiPlexEventArgs-2.TEventHandler-3.html",
    "title": "Delegate MultiPlexEventArgs<T1, T2>.TEventHandler<T1, T2, TEventArgs> | RolePlus Docs",
    "keywords": "Delegate MultiPlexEventArgs<T1, T2>.TEventHandler<T1, T2, TEventArgs> The System.EventHandler delegate. Namespace : RolePlus.ExternModule.API.Engine.Framework.Events Assembly : RolePlus.dll Syntax public delegate void TEventHandler<T1, T2, TEventArgs>(TEventArgs ev) where TEventArgs : MultiPlexEventArgs<T1, T2>; Parameters Type Name Description TEventArgs ev Type Parameters Name Description T1 T2 TEventArgs"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.PlexEventArgs-1.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.PlexEventArgs-1.html",
    "title": "Class PlexEventArgs<T1> | RolePlus Docs",
    "keywords": "Class PlexEventArgs<T1> Patch and unpatch events into the game. Inheritance System.Object System.EventArgs PlexEventArgs<T1> ReceivingNetworkMessageEventArgs<T1> ReceivingPipelineMessageEventArgs<T1> MultiPlexEventArgs<T1, T2> Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Events Assembly : RolePlus.dll Syntax public class PlexEventArgs<T1> : EventArgs Type Parameters Name Description T1"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Events.PlexEventArgs-1.TEventHandler-2.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Events.PlexEventArgs-1.TEventHandler-2.html",
    "title": "Delegate PlexEventArgs<T1>.TEventHandler<T1, TEventArgs> | RolePlus Docs",
    "keywords": "Delegate PlexEventArgs<T1>.TEventHandler<T1, TEventArgs> The System.EventHandler delegate. Namespace : RolePlus.ExternModule.API.Engine.Framework.Events Assembly : RolePlus.dll Syntax public delegate void TEventHandler<T1, TEventArgs>(TEventArgs ev) where TEventArgs : PlexEventArgs<T1>; Parameters Type Name Description TEventArgs ev Type Parameters Name Description T1 TEventArgs"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.html",
    "title": "Namespace RolePlus.ExternModule.API.Engine.Framework | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Engine.Framework Classes AActor Actor is the base class for a UObject that can be placed or spawned in-game. AnimatorParameter A class to easily handle objects. Interfaces INetworkMessage<T1> Basic implementation to handle network messages INetworkMessage<T1, T2> Basic implementation to handle network messages"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.INetworkMessage-1.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.INetworkMessage-1.html",
    "title": "Interface INetworkMessage<T1> | RolePlus Docs",
    "keywords": "Interface INetworkMessage<T1> Basic implementation to handle network messages Namespace : RolePlus.ExternModule.API.Engine.Framework Assembly : RolePlus.dll Syntax public interface INetworkMessage<T1> Type Parameters Name Description T1 Properties | Improve this Doc View Source Source Gets the source of the message. Declaration T1 Source { get; } Property Value Type Description T1"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.INetworkMessage-2.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.INetworkMessage-2.html",
    "title": "Interface INetworkMessage<T1, T2> | RolePlus Docs",
    "keywords": "Interface INetworkMessage<T1, T2> Basic implementation to handle network messages Inherited Members INetworkMessage<T1>.Source Namespace : RolePlus.ExternModule.API.Engine.Framework Assembly : RolePlus.dll Syntax public interface INetworkMessage<T1, T2> : INetworkMessage<T1> Type Parameters Name Description T1 T2 Properties | Improve this Doc View Source Content Gets or sets the content of the message. Declaration T2 Content { get; set; } Property Value Type Description T2 Methods | Improve this Doc View Source Reset() Resets the content. Declaration void Reset()"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Interfaces.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Interfaces.html",
    "title": "Namespace RolePlus.ExternModule.API.Engine.Framework.Interfaces | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Engine.Framework.Interfaces Interfaces IAnimatorNative Basic implementation to handle animations inside components."
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Interfaces.IAnimatorNative.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Interfaces.IAnimatorNative.html",
    "title": "Interface IAnimatorNative | RolePlus Docs",
    "keywords": "Interface IAnimatorNative Basic implementation to handle animations inside components. Namespace : RolePlus.ExternModule.API.Engine.Framework.Interfaces Assembly : RolePlus.dll Syntax public interface IAnimatorNative Properties | Improve this Doc View Source AnimatorsTriggers Gets a System.String [] containing all the triggers for the paired . Declaration IReadOnlyDictionary<Animator, string[]> AnimatorsTriggers { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < Animator , System.String []> Methods | Improve this Doc View Source GetAnimations(Animator) Gets the animations of the specified . Declaration AnimatorParameter[] GetAnimations(Animator animator) Parameters Type Name Description Animator animator The animator to check. Returns Type Description AnimatorParameter [] The animations. | Improve this Doc View Source GetCurrentAnimation(Animator) Gets the current playing animation of the specified . Declaration AnimatorStateInfo GetCurrentAnimation(Animator animator) Parameters Type Name Description Animator animator The animator to check. Returns Type Description AnimatorStateInfo The current playing animation. | Improve this Doc View Source GetCurrentAnimation(Animator, AnimatorParameter) Gets the current playing animation of the specified . Declaration ref AnimatorParameter GetCurrentAnimation(Animator animator, AnimatorParameter anim) Parameters Type Name Description Animator animator The animator to check. AnimatorParameter anim The AnimatorParameter to get. Returns Type Description AnimatorParameter The current playing animation. | Improve this Doc View Source GetCurrentAnimation(Animator, String) Gets the current playing animation of the specified . Declaration ref AnimatorParameter GetCurrentAnimation(Animator animator, string name) Parameters Type Name Description Animator animator The animator to check. System.String name The name of the animation state to get. Returns Type Description AnimatorParameter The current playing animation. | Improve this Doc View Source OnChangingAnimationState(ChangingAnimationStateEventArgs) Declaration void OnChangingAnimationState(ChangingAnimationStateEventArgs ev) Parameters Type Name Description ChangingAnimationStateEventArgs ev | Improve this Doc View Source PlayAnimation(AnimatorParameter, Int32) Plays an animation given a AnimatorParameter . Declaration bool PlayAnimation(AnimatorParameter anim, int animatorIndex = 0) Parameters Type Name Description AnimatorParameter anim The AnimatorParameter . System.Int32 animatorIndex The index of the animator. Returns Type Description System.Boolean true if the animation was played successfully; otherwise, false . | Improve this Doc View Source PlayAnimation(String, Boolean, Int32) Plays an animation given a parameter name. Declaration bool PlayAnimation(string name, bool state, int animatorIndex = 0) Parameters Type Name Description System.String name The name of the parameter. System.Boolean state The state of the parameter. System.Int32 animatorIndex The index of the animator. Returns Type Description System.Boolean true if the animation was played successfully; otherwise, false . | Improve this Doc View Source SetCurrentAnimation(Animator, AnimatorParameter) Sets the current playing animation of the specified . Declaration void SetCurrentAnimation(Animator animator, AnimatorParameter anim) Parameters Type Name Description Animator animator The animator to modify. AnimatorParameter anim The AnimatorParameter to set. | Improve this Doc View Source SetCurrentAnimation(Animator, String, Boolean) Sets the current playing animation of the specified . Declaration void SetCurrentAnimation(Animator animator, string name, bool state) Parameters Type Name Description Animator animator The animator to modify. System.String name The name of the animation state to set. System.Boolean state The state of the animation state to set. | Improve this Doc View Source StopAnimation(Int32) Stops an animation from the located in the specified index. Declaration void StopAnimation(int animatorIndex = 0) Parameters Type Name Description System.Int32 animatorIndex The index of the animator."
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Network.ENetworkAuthority.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Network.ENetworkAuthority.html",
    "title": "Enum ENetworkAuthority | RolePlus Docs",
    "keywords": "Enum ENetworkAuthority All the network authority flags. Namespace : RolePlus.ExternModule.API.Engine.Framework.Network Assembly : RolePlus.dll Syntax [Flags] public enum ENetworkAuthority : byte Fields Name Description Network Defines a network authority. None Defines a none authority. Server Defines a server authority. Threat Defines a threat authority. User Defines a user authority."
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Network.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Network.html",
    "title": "Namespace RolePlus.ExternModule.API.Engine.Framework.Network | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Engine.Framework.Network Classes RuleAttribute This attribute determines whether the class which is being applied to should be treated as TRule<T> . TFirewall<T> The class which allows to handle TRule<T> objects. TNetworkMessage<T1> Object that keeps track of the given data and can be sent across the network. TNetworkMessage<T1, T2> Object that keeps track of the given data and can be sent across the network. TRule<T> Rule is the base class for objects used by for TFirewall<T> . UNetObject The base class of all network objects. Enums ENetworkAuthority All the network authority flags."
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Network.Models.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Network.Models.html",
    "title": "Namespace RolePlus.ExternModule.API.Engine.Framework.Network.Models | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Engine.Framework.Network.Models Classes UNetEntity The network entity which encapsulates the object. UNetManager An object which manages server data across the network. UNetServer An object used to communicate across the network."
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetEntity.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetEntity.html",
    "title": "Class UNetEntity | RolePlus Docs",
    "keywords": "Class UNetEntity The network entity which encapsulates the object. Inheritance System.Object TypeCastObject < UObject > UObject UNetObject UNetEntity Inherited Members UNetObject.NetworkMessages UNetObject.NetworkAuthority UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnBeginDestroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Network.Models Assembly : RolePlus.dll Syntax public sealed class UNetEntity : UNetObject Constructors | Improve this Doc View Source UNetEntity(String, Boolean, Boolean, DateTime) Initializes a new instance of the UNetEntity class. Declaration public UNetEntity(string userId, bool isSteamLimited = false, bool isSteamVACBanned = false, DateTime lastUpdate = default(DateTime)) Parameters Type Name Description System.String userId System.Boolean isSteamLimited System.Boolean isSteamVACBanned System.DateTime lastUpdate Properties | Improve this Doc View Source Entities Gets a System.Collections.Generic.IReadOnlyList<T> of UNetEntity containing all the entities. Declaration public static IReadOnlyList<UNetEntity> Entities { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < UNetEntity > | Improve this Doc View Source IsSteamLimited Gets a value indicating whether the Owner is steam limited. Declaration public bool IsSteamLimited { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSteamVACBanned Gets a value indicating whether the Owner is steam VAC banned. Declaration public bool IsSteamVACBanned { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUsingVPN Gets a value indicating whether the entity is using a VPN. Declaration public bool IsUsingVPN { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LastUpdate Gets the last update of this UNetEntity . Declaration public DateTime LastUpdate { get; } Property Value Type Description System.DateTime | Improve this Doc View Source Latency Declaration public int Latency { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Network_Name Declaration public string Network_Name { get; } Property Value Type Description System.String | Improve this Doc View Source Owner Gets the owner of the entity. Declaration public Player Owner { get; } Property Value Type Description Player | Improve this Doc View Source Server Gets the UNetServer on which the Owner is currently playing on. Declaration public UNetServer Server { get; } Property Value Type Description UNetServer | Improve this Doc View Source UserId Gets the entity's UserId. Declaration public string UserId { get; } Property Value Type Description System.String | Improve this Doc View Source VirtualPrivateNetworkData Gets the FVirtualPrivateNetwork . Declaration public FVirtualPrivateNetwork VirtualPrivateNetworkData { get; } Property Value Type Description FVirtualPrivateNetwork Methods | Improve this Doc View Source Get(Player) Gets the UNetEntity belonging to the given object. Declaration public static UNetEntity Get(Player player) Parameters Type Name Description Player player The player to check. Returns Type Description UNetEntity The corresponding UNetEntity or null if not found. | Improve this Doc View Source Get(IEnumerable<Player>) Gets the a System.Collections.Generic.IEnumerable<T> of UNetEntity belonging to the given System.Collections.Generic.IEnumerable<T> of objects. Declaration public static IEnumerable<UNetEntity> Get(IEnumerable<Player> players) Parameters Type Name Description System.Collections.Generic.IEnumerable < Player > players The players to check. Returns Type Description System.Collections.Generic.IEnumerable < UNetEntity > The corresponding UNetEntity for each or null if not found. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetManager.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetManager.html",
    "title": "Class UNetManager | RolePlus Docs",
    "keywords": "Class UNetManager An object which manages server data across the network. Inheritance System.Object UNetManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Network.Models Assembly : RolePlus.dll Syntax public class UNetManager Properties | Improve this Doc View Source DataPath Gets the data path. Declaration public string DataPath { get; } Property Value Type Description System.String | Improve this Doc View Source EntityData Gets all the entities data. Declaration public Dictionary<string, UNetEntity> EntityData { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , UNetEntity > | Improve this Doc View Source Servers Gets all the servers. Declaration public List<UNetServer> Servers { get; } Property Value Type Description System.Collections.Generic.List < UNetServer > | Improve this Doc View Source Singleton Gets the static instance. Declaration public static UNetManager Singleton { get; } Property Value Type Description UNetManager Methods | Improve this Doc View Source LoadEntityData(String) Loads entity data. Declaration public UNetEntity LoadEntityData(string userId) Parameters Type Name Description System.String userId The user id of the entity. Returns Type Description UNetEntity The loaded entity. | Improve this Doc View Source LoadServerData() Loads server data. Declaration public UNetServer LoadServerData() Returns Type Description UNetServer A UNetServer containing all the server data. | Improve this Doc View Source SaveEntityData(UNetEntity) Saves entity data. Declaration public void SaveEntityData(UNetEntity data) Parameters Type Name Description UNetEntity data The entity to save."
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetServer.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetServer.html",
    "title": "Class UNetServer | RolePlus Docs",
    "keywords": "Class UNetServer An object used to communicate across the network. Inheritance System.Object TypeCastObject < UObject > UObject UNetObject UNetServer Inherited Members UNetObject.NetworkMessages UNetObject.NetworkAuthority UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnBeginDestroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Network.Models Assembly : RolePlus.dll Syntax public class UNetServer : UNetObject Constructors | Improve this Doc View Source UNetServer(UInt16) Initializes a new instance of the UNetServer class. Declaration public UNetServer(ushort port) Parameters Type Name Description System.UInt16 port The port. Properties | Improve this Doc View Source DisplayName Declaration public static string DisplayName { get; set; } Property Value Type Description System.String | Improve this Doc View Source FriendlyFire Declaration public static bool FriendlyFire { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IPAddress Declaration public static string IPAddress { get; } Property Value Type Description System.String | Improve this Doc View Source MaxPlayerCount Declaration public static int MaxPlayerCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source NetHost Declaration public static Player NetHost { get; } Property Value Type Description Player | Improve this Doc View Source PlayerCount Declaration public static int PlayerCount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Port Declaration public ushort Port { get; } Property Value Type Description System.UInt16 Methods | Improve this Doc View Source Restart() Declaration public static void Restart() | Improve this Doc View Source RestartRedirect(UInt16) Declaration public static bool RestartRedirect(ushort redirectPort) Parameters Type Name Description System.UInt16 redirectPort Returns Type Description System.Boolean | Improve this Doc View Source RunCommand(String, CommandSender) Declaration public static void RunCommand(string command, CommandSender sender = null) Parameters Type Name Description System.String command CommandSender sender | Improve this Doc View Source Shutdown() Declaration public static void Shutdown() | Improve this Doc View Source ShutdownRedirect(UInt16) Declaration public static bool ShutdownRedirect(ushort redirectPort) Parameters Type Name Description System.UInt16 redirectPort Returns Type Description System.Boolean"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Network.RuleAttribute.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Network.RuleAttribute.html",
    "title": "Class RuleAttribute | RolePlus Docs",
    "keywords": "Class RuleAttribute This attribute determines whether the class which is being applied to should be treated as TRule<T> . Inheritance System.Object System.Attribute RuleAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Network Assembly : RolePlus.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class RuleAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source RuleAttribute(String) Initializes a new instance of the RuleAttribute class. Declaration public RuleAttribute(string group) Parameters Type Name Description System.String group Properties | Improve this Doc View Source Group Gets the rule's group. Declaration public string Group { get; } Property Value Type Description System.String Implements System.Runtime.InteropServices._Attribute"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Network.TFirewall-1.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Network.TFirewall-1.html",
    "title": "Class TFirewall<T> | RolePlus Docs",
    "keywords": "Class TFirewall<T> The class which allows to handle TRule<T> objects. Inheritance System.Object TypeCastObject < TFirewall <T>> TFirewall<T> Inherited Members TypeCastObject<TFirewall<T>>.Cast<T>() TypeCastObject<TFirewall<T>>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Network Assembly : RolePlus.dll Syntax public class TFirewall<T> : TypeCastObject<TFirewall<T>> Type Parameters Name Description T The data type used by the managed rules. Constructors | Improve this Doc View Source TFirewall(TRule<T>) Initializes a new instance of the TFirewall<T> class. Declaration protected TFirewall(TRule<T> rule) Parameters Type Name Description TRule <T> rule The rule to handle. | Improve this Doc View Source TFirewall(IEnumerable<TRule<T>>) Initializes a new instance of the TFirewall<T> class. Declaration protected TFirewall(IEnumerable<TRule<T>> rules) Parameters Type Name Description System.Collections.Generic.IEnumerable < TRule <T>> rules The rules to handle. Properties | Improve this Doc View Source Configurations Gets a System.Collections.Generic.IReadOnlyCollection<T> of TFirewall<T> containing all the active configurations. Declaration public static IReadOnlyCollection<TFirewall<T>> Configurations { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < TFirewall <T>> | Improve this Doc View Source Name Gets the name of the current configuration. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Rules Gets the active rules. Declaration public IReadOnlyCollection<TRule<T>> Rules { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < TRule <T>> Methods | Improve this Doc View Source Configure(TRule<T>, String) Configures a new TFirewall<T> instance. Declaration public static TFirewall<T> Configure(TRule<T> rule, string name) Parameters Type Name Description TRule <T> rule The configuration. System.String name The name to identify the firewall. Returns Type Description TFirewall <T> The configured TFirewall<T> instance. | Improve this Doc View Source Configure(IEnumerable<TRule<T>>, String) Configures a new TFirewall<T> instance. Declaration public static TFirewall<T> Configure(IEnumerable<TRule<T>> rules, string name) Parameters Type Name Description System.Collections.Generic.IEnumerable < TRule <T>> rules The configuration. System.String name The name to identify the firewall. Returns Type Description TFirewall <T> The configured TFirewall<T> instance. | Improve this Doc View Source Configure(String, String) Configures a new TFirewall<T> instance. Declaration public static TFirewall<T> Configure(string group, string name) Parameters Type Name Description System.String group The configuration group. System.String name The name to identify the firewall. Returns Type Description TFirewall <T> The configured TFirewall<T> instance. | Improve this Doc View Source Finalize() Finalizes an instance of the TFirewall<T> class. Declaration protected void Finalize() | Improve this Doc View Source Reconfigure(ref TFirewall<T>, TRule<T>) Reconfigures the TFirewall<T> instance. Declaration public static bool Reconfigure(ref TFirewall<T> firewall, TRule<T> rule) Parameters Type Name Description TFirewall <T> firewall The TFirewall<T> instance. TRule <T> rule The new rule. Returns Type Description System.Boolean true if the firewall was successfully reconfigured; otherwise, false . | Improve this Doc View Source Reconfigure(ref TFirewall<T>, IEnumerable<TRule<T>>) Reconfigures the TFirewall<T> instance. Declaration public static TFirewall<T> Reconfigure(ref TFirewall<T> firewall, IEnumerable<TRule<T>> rules) Parameters Type Name Description TFirewall <T> firewall The TFirewall<T> instance. System.Collections.Generic.IEnumerable < TRule <T>> rules The new rules. Returns Type Description TFirewall <T> The reconfigured TFirewall<T> instance. | Improve this Doc View Source Reconfigure(ref TFirewall<T>, Int32, TRule<T>) Reconfigures the TFirewall<T> instance. Declaration public static bool Reconfigure(ref TFirewall<T> firewall, int index, TRule<T> rule) Parameters Type Name Description TFirewall <T> firewall The TFirewall<T> instance. System.Int32 index The index of the rule to reconfigure. TRule <T> rule The new rule. Returns Type Description System.Boolean true if the firewall was successfully reconfigured; otherwise, false ."
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Network.TNetworkMessage-1.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Network.TNetworkMessage-1.html",
    "title": "Class TNetworkMessage<T1> | RolePlus Docs",
    "keywords": "Class TNetworkMessage<T1> Object that keeps track of the given data and can be sent across the network. Inheritance System.Object TNetworkMessage<T1> TNetworkMessage <T1, T2> Implements INetworkMessage <T1> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Network Assembly : RolePlus.dll Syntax public class TNetworkMessage<T1> : INetworkMessage<T1> Type Parameters Name Description T1 Constructors | Improve this Doc View Source TNetworkMessage(T1) Initializes a new instance of the TNetworkMessage<T1> class. Declaration public TNetworkMessage(T1 source) Parameters Type Name Description T1 source The source to be set. Properties | Improve this Doc View Source NetworkPipeline Gets a System.Collections.Generic.IReadOnlyCollection<T> containing all the active TNetworkMessage<T1> instances. Declaration public static IReadOnlyCollection<TNetworkMessage<T1>> NetworkPipeline { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < TNetworkMessage <T1>> | Improve this Doc View Source Source Declaration public T1 Source { get; protected set; } Property Value Type Description T1 Methods | Improve this Doc View Source Destroy() Destroys the TNetworkMessage<T1, T2> instance. Declaration public void Destroy() | Improve this Doc View Source Finalize() Finalizes an instance of the TNetworkMessage<T1> class. Declaration protected void Finalize() | Improve this Doc View Source NetworkDestroy() Fired before the TNetworkMessage<T1> is destroyed. Declaration protected virtual void NetworkDestroy() | Improve this Doc View Source Send(TNetworkMessage<T1>) Sends the current TNetworkMessage<T1, T2> instance. Declaration public bool Send(TNetworkMessage<T1> instance) Parameters Type Name Description TNetworkMessage <T1> instance The instance to modify. Returns Type Description System.Boolean true if the message was sent successfully; otherwise, false . | Improve this Doc View Source Send<T1>(TNetworkMessage<T1>) Sends a TNetworkMessage<T1, T2> . Declaration public static bool Send<T1>(TNetworkMessage<T1> instance) Parameters Type Name Description TNetworkMessage <T1> instance The instance to modify. Returns Type Description System.Boolean true if the message was sent successfully; otherwise, false . Type Parameters Name Description T1 The source. | Improve this Doc View Source Send<T1>(TNetworkMessage<T1>, TNetworkMessage<T1>) Sends a TNetworkMessage<T1, T2> . Declaration public static bool Send<T1>(TNetworkMessage<T1> instance, TNetworkMessage<T1> msg) Parameters Type Name Description TNetworkMessage <T1> instance The instance to modify. TNetworkMessage <T1> msg The new message. Returns Type Description System.Boolean true if the message was sent successfully; otherwise, false . Type Parameters Name Description T1 The source. Implements INetworkMessage<T1>"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Network.TNetworkMessage-2.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Network.TNetworkMessage-2.html",
    "title": "Class TNetworkMessage<T1, T2> | RolePlus Docs",
    "keywords": "Class TNetworkMessage<T1, T2> Object that keeps track of the given data and can be sent across the network. Inheritance System.Object TNetworkMessage <T1> TNetworkMessage<T1, T2> Implements INetworkMessage <T1> Inherited Members TNetworkMessage<T1>.NetworkPipeline TNetworkMessage<T1>.Source TNetworkMessage<T1>.Send<T1>(TNetworkMessage<T1>, TNetworkMessage<T1>) TNetworkMessage<T1>.Send<T1>(TNetworkMessage<T1>) TNetworkMessage<T1>.NetworkDestroy() TNetworkMessage<T1>.Send(TNetworkMessage<T1>) TNetworkMessage<T1>.Destroy() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Network Assembly : RolePlus.dll Syntax public class TNetworkMessage<T1, T2> : TNetworkMessage<T1>, INetworkMessage<T1> Type Parameters Name Description T1 T2 Constructors | Improve this Doc View Source TNetworkMessage(T1, T2) Initializes a new instance of the TNetworkMessage<T1, T2> class. Declaration public TNetworkMessage(T1 source, T2 tDefault) Parameters Type Name Description T1 source The source to be set. T2 tDefault The deafult value of the content. Properties | Improve this Doc View Source Content Declaration public T2 Content { get; set; } Property Value Type Description T2 Methods | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source Send(TNetworkMessage<T1, T2>) Sends the current TNetworkMessage<T1, T2> instance. Declaration public bool Send(TNetworkMessage<T1, T2> instance) Parameters Type Name Description TNetworkMessage <T1, T2> instance The instance to modify. Returns Type Description System.Boolean true if the message was sent successfully; otherwise, false . | Improve this Doc View Source Send<T1, T2>(TNetworkMessage<T1, T2>, T2) Sends a TNetworkMessage<T1, T2> . Declaration public static bool Send<T1, T2>(TNetworkMessage<T1, T2> instance, T2 content) Parameters Type Name Description TNetworkMessage <T1, T2> instance The instance to modify. T2 content The new content. Returns Type Description System.Boolean true if the message was sent successfully; otherwise, false . Type Parameters Name Description T1 The source. T2 The content. | Improve this Doc View Source Send<T1, T2>(TNetworkMessage<T1, T2>, TNetworkMessage<T1, T2>) Sends a TNetworkMessage<T1, T2> . Declaration public static bool Send<T1, T2>(TNetworkMessage<T1, T2> instance, TNetworkMessage<T1, T2> msg) Parameters Type Name Description TNetworkMessage <T1, T2> instance The instance to modify. TNetworkMessage <T1, T2> msg The new message. Returns Type Description System.Boolean true if the message was sent successfully; otherwise, false . Type Parameters Name Description T1 The source. T2 The content. Implements INetworkMessage<T1>"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Network.TRule-1.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Network.TRule-1.html",
    "title": "Class TRule<T> | RolePlus Docs",
    "keywords": "Class TRule<T> Rule is the base class for objects used by for TFirewall<T> . Inheritance System.Object TypeCastObject < TRule <T>> TRule<T> AntiPreAuth AntiRaid FailoverNetwork ProxyRedirect SteamSanitizer VPNShield Inherited Members TypeCastObject<TRule<T>>.Cast<T>() TypeCastObject<TRule<T>>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Network Assembly : RolePlus.dll Syntax public abstract class TRule<T> : TypeCastObject<TRule<T>> Type Parameters Name Description T The data type to handle and identify actions. Properties | Improve this Doc View Source Allowlist Gets a System.Collections.Generic.IReadOnlyCollection<T> of T containing all the allowed T objects. Declaration protected IReadOnlyCollection<T> Allowlist { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection <T> | Improve this Doc View Source Denylist Gets a System.Collections.Generic.IReadOnlyCollection<T> of T containing all the denied T objects. Declaration protected IReadOnlyCollection<T> Denylist { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection <T> | Improve this Doc View Source Name Gets or sets the name of the rule. Declaration public virtual string Name { get; protected set; } Property Value Type Description System.String Methods | Improve this Doc View Source Allow(T) Allows the given T object. Declaration public void Allow(T param) Parameters Type Name Description T param The object to allow. | Improve this Doc View Source Deny(T) Denies the given T object. Declaration public void Deny(T param) Parameters Type Name Description T param The object to deny. | Improve this Doc View Source Finalize() Finalizes an instance of the TRule<T> class. Declaration protected void Finalize() | Improve this Doc View Source IsAllowed(T) Checks whether the given T object is allowed. Declaration public bool IsAllowed(T param) Parameters Type Name Description T param The object to allow. Returns Type Description System.Boolean true if is allowed; otherwise, false . | Improve this Doc View Source IsDenied(T) Checks whether the given T object is denied. Declaration public bool IsDenied(T param) Parameters Type Name Description T param The object to allow. Returns Type Description System.Boolean true if is denied; otherwise, false . | Improve this Doc View Source Load() Loads the rule. Declaration public virtual void Load() | Improve this Doc View Source Log(String) Logs the specified message into the server console. Declaration protected virtual void Log(string info) Parameters Type Name Description System.String info The message to display. | Improve this Doc View Source NetworkSync() Fired every frame. Declaration protected virtual void NetworkSync() | Improve this Doc View Source TryParse(String, out T) Tries to parse raw data into T data. Declaration public abstract bool TryParse(string raw, out T data) Parameters Type Name Description System.String raw Data to parse. T data Parsed data. Returns Type Description System.Boolean true if data was parsed successfully; otherwise, false . | Improve this Doc View Source Unload() Unloads the rule. Declaration public virtual void Unload()"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Network.UNetObject.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Network.UNetObject.html",
    "title": "Class UNetObject | RolePlus Docs",
    "keywords": "Class UNetObject The base class of all network objects. Inheritance System.Object TypeCastObject < UObject > UObject UNetObject UNetEntity UNetServer Inherited Members UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnBeginDestroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Engine.Framework.Network Assembly : RolePlus.dll Syntax public abstract class UNetObject : UObject Constructors | Improve this Doc View Source UNetObject() Initializes a new instance of the UNetObject class. Declaration protected UNetObject() Properties | Improve this Doc View Source NetworkAuthority Gets or sets the ENetworkAuthority . Declaration public ENetworkAuthority NetworkAuthority { get; protected set; } Property Value Type Description ENetworkAuthority | Improve this Doc View Source NetworkMessages Gets the cached System.Collections.Generic.IReadOnlyCollection<T> of TNetworkMessage<T1> . Declaration public static IReadOnlyCollection<TNetworkMessage<UNetObject>> NetworkMessages { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < TNetworkMessage < UNetObject >>"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Structs.FTransform.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Structs.FTransform.html",
    "title": "Struct FTransform | RolePlus Docs",
    "keywords": "Struct FTransform Transform composed of Scale, Rotation (as a quaternion), and Translation. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : RolePlus.ExternModule.API.Engine.Framework.Structs Assembly : RolePlus.dll Syntax public struct FTransform Constructors | Improve this Doc View Source FTransform(FTransform, Vector3, Quaternion, Vector3) Initializes a new instance of the FTransform struct. Declaration public FTransform(FTransform target, Vector3 position = null, Quaternion rotation = null, Vector3 scale = null) Parameters Type Name Description FTransform target Vector3 position Quaternion rotation Vector3 scale | Improve this Doc View Source FTransform(Vector3, Quaternion, Vector3) Initializes a new instance of the FTransform struct. Declaration public FTransform(Vector3 position, Quaternion rotation, Vector3 scale) Parameters Type Name Description Vector3 position Quaternion rotation Vector3 scale Properties | Improve this Doc View Source Rotation 2 Gets or sets the rotation. Declaration public Quaternion Rotation { readonly get; set; } Property Value Type Description Quaternion | Improve this Doc View Source Scale Gets or sets the scale. Declaration public Vector3 Scale { readonly get; set; } Property Value Type Description Vector3 | Improve this Doc View Source Translation Gets or sets the translation. Declaration public Vector3 Translation { readonly get; set; } Property Value Type Description Vector3"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Structs.FVirtualPrivateNetwork.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Structs.FVirtualPrivateNetwork.html",
    "title": "Struct FVirtualPrivateNetwork | RolePlus Docs",
    "keywords": "Struct FVirtualPrivateNetwork A struct to encapsulate VPN data. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : RolePlus.ExternModule.API.Engine.Framework.Structs Assembly : RolePlus.dll Syntax public struct FVirtualPrivateNetwork Properties | Improve this Doc View Source ASN Gets or sets the VPN's ASN. Declaration public int ASN { readonly get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Block Gets or sets the VPN's block. Declaration public int Block { readonly get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CountryCode Gets or sets the VPN's country code. Declaration public string CountryCode { readonly get; set; } Property Value Type Description System.String | Improve this Doc View Source CountryName Gets or sets the VPN's country name. Declaration public string CountryName { readonly get; set; } Property Value Type Description System.String | Improve this Doc View Source Hostname Gets or sets the VPN's hostname. Declaration public string Hostname { readonly get; set; } Property Value Type Description System.String | Improve this Doc View Source IP Gets or sets the VPN's IP. Declaration public string IP { readonly get; set; } Property Value Type Description System.String | Improve this Doc View Source ISP Gets or sets the VPN's ISP. Declaration public string ISP { readonly get; set; } Property Value Type Description System.String"
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Structs.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Structs.html",
    "title": "Namespace RolePlus.ExternModule.API.Engine.Framework.Structs | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Engine.Framework.Structs Structs FTransform Transform composed of Scale, Rotation (as a quaternion), and Translation. FVirtualPrivateNetwork A struct to encapsulate VPN data. TNetworkPipelineMessage<T1> A message that is being sent before a new UNetObject is created."
  },
  "api/RolePlus.ExternModule.API.Engine.Framework.Structs.TNetworkPipelineMessage-1.html": {
    "href": "api/RolePlus.ExternModule.API.Engine.Framework.Structs.TNetworkPipelineMessage-1.html",
    "title": "Struct TNetworkPipelineMessage<T1> | RolePlus Docs",
    "keywords": "Struct TNetworkPipelineMessage<T1> A message that is being sent before a new UNetObject is created. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : RolePlus.ExternModule.API.Engine.Framework.Structs Assembly : RolePlus.dll Syntax public struct TNetworkPipelineMessage<T1> Type Parameters Name Description T1 Constructors | Improve this Doc View Source TNetworkPipelineMessage(TNetworkMessage<T1>) Initializes a new instance of the TNetworkPipelineMessage<T1> struct. Declaration public TNetworkPipelineMessage(TNetworkMessage<T1> obj) Parameters Type Name Description TNetworkMessage <T1> obj The network object. Properties | Improve this Doc View Source Object The network object. Declaration public readonly TNetworkMessage<T1> Object { get; } Property Value Type Description TNetworkMessage <T1>"
  },
  "api/RolePlus.ExternModule.API.Enums.BranchType.html": {
    "href": "api/RolePlus.ExternModule.API.Enums.BranchType.html",
    "title": "Enum BranchType | RolePlus Docs",
    "keywords": "Enum BranchType All available environments. Namespace : RolePlus.ExternModule.API.Enums Assembly : RolePlus.dll Syntax public enum BranchType Fields Name Description Alpha The alpha branch. Beta The beta branch. Debug The debug branch. Dev The development branch. Prealpha The prealpha branch. Release The production branch. Unstable The unstable branch."
  },
  "api/RolePlus.ExternModule.API.Enums.html": {
    "href": "api/RolePlus.ExternModule.API.Enums.html",
    "title": "Namespace RolePlus.ExternModule.API.Enums | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Enums Enums BranchType All available environments. RespawnSystem RespawnSystem status modes. ScreenLocation Represents locations on a user's display."
  },
  "api/RolePlus.ExternModule.API.Enums.RespawnSystem.html": {
    "href": "api/RolePlus.ExternModule.API.Enums.RespawnSystem.html",
    "title": "Enum RespawnSystem | RolePlus Docs",
    "keywords": "Enum RespawnSystem RespawnSystem status modes. Namespace : RolePlus.ExternModule.API.Enums Assembly : RolePlus.dll Syntax public enum RespawnSystem Fields Name Description Disabled Disabled. Enabled Enabled."
  },
  "api/RolePlus.ExternModule.API.Enums.ScreenLocation.html": {
    "href": "api/RolePlus.ExternModule.API.Enums.ScreenLocation.html",
    "title": "Enum ScreenLocation | RolePlus Docs",
    "keywords": "Enum ScreenLocation Represents locations on a user's display. Namespace : RolePlus.ExternModule.API.Enums Assembly : RolePlus.dll Syntax public enum ScreenLocation Fields Name Description Bottom Represents the bottom of the screen. Middle Represents the middle of the screen. MiddleBottom Represents between the Middle and the Bottom . MiddleTop Represents between the Middle and the Top . Top Represents the top of the screen."
  },
  "api/RolePlus.ExternModule.API.Features.AdvancedGameplay.html": {
    "href": "api/RolePlus.ExternModule.API.Features.AdvancedGameplay.html",
    "title": "Namespace RolePlus.ExternModule.API.Features.AdvancedGameplay | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Features.AdvancedGameplay Classes MultiPlayerGamemode"
  },
  "api/RolePlus.ExternModule.API.Features.AdvancedGameplay.MultiPlayerGamemode.html": {
    "href": "api/RolePlus.ExternModule.API.Features.AdvancedGameplay.MultiPlayerGamemode.html",
    "title": "Class MultiPlayerGamemode | RolePlus Docs",
    "keywords": "Class MultiPlayerGamemode Inheritance System.Object MultiPlayerGamemode Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.AdvancedGameplay Assembly : RolePlus.dll Syntax public abstract class MultiPlayerGamemode"
  },
  "api/RolePlus.ExternModule.API.Features.Badge.html": {
    "href": "api/RolePlus.ExternModule.API.Features.Badge.html",
    "title": "Struct Badge | RolePlus Docs",
    "keywords": "Struct Badge A tool to easily manage in-game badges. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : RolePlus.ExternModule.API.Features Assembly : RolePlus.dll Syntax public struct Badge Constructors | Improve this Doc View Source Badge(Player, String, String) Initializes a new instance of the Badge struct. Declaration public Badge(Player player, string rank, string color) Parameters Type Name Description Player player The owner of the badge. System.String rank The rank to be set. System.String color The color of the rank. Properties | Improve this Doc View Source Color The color of the content. Declaration public readonly string Color { get; } Property Value Type Description System.String | Improve this Doc View Source IsHidden Gets or sets a value indicating whether the badge is hidden. Declaration public bool IsHidden { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source List Gets a System.Collections.Generic.HashSet<T> Declaration public static readonly HashSet<Badge> List { get; } Property Value Type Description System.Collections.Generic.HashSet < Badge > | Improve this Doc View Source Owner The owner of the badge. Declaration public readonly Player Owner { get; } Property Value Type Description Player | Improve this Doc View Source Rank The badge content. Declaration public readonly string Rank { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Get(Player) Gets a Badge belonging to a object. Declaration public static Badge Get(Player player) Parameters Type Name Description Player player The player to check. Returns Type Description Badge A Badge object or langword_csharp_default if not found. | Improve this Doc View Source Hide() Hides the badge. Declaration public void Hide() | Improve this Doc View Source Hide(Player) Hides the badge. Declaration public static bool Hide(Player player) Parameters Type Name Description Player player The owner of the Badge . Returns Type Description System.Boolean true if the owner's badge was hidden successfully; otherwise, false . | Improve this Doc View Source Load() Loads the badge. Declaration public void Load() | Improve this Doc View Source Load(Player, String, String) Loads the badge. Declaration public static Badge Load(Player player, string rank, string color) Parameters Type Name Description Player player The owner of the Badge . System.String rank The content of the Badge . System.String color The color of the content. Returns Type Description Badge The loaded Badge object. | Improve this Doc View Source Reload() Reloads the badge. Declaration public void Reload() | Improve this Doc View Source Reload(Player) Reloads the badge. Declaration public static bool Reload(Player player) Parameters Type Name Description Player player The owner of the Badge . Returns Type Description System.Boolean true if the owner's badge was reloaded successfully; otherwise, false . | Improve this Doc View Source Unload() Unloads the badge. Declaration public void Unload() | Improve this Doc View Source Unload(Player) Unloads the badge. Declaration public static bool Unload(Player player) Parameters Type Name Description Player player The owner of the Badge . Returns Type Description System.Boolean true if the owner's badge was unloaded successfully; otherwise, false ."
  },
  "api/RolePlus.ExternModule.API.Features.Configs.Config.html": {
    "href": "api/RolePlus.ExternModule.API.Features.Configs.Config.html",
    "title": "Class Config | RolePlus Docs",
    "keywords": "Class Config The base class that handles the config system. Inheritance System.Object TypeCastObject < System.Object > Config Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.Configs Assembly : RolePlus.dll Syntax public sealed class Config : TypeCastObject<object> Constructors | Improve this Doc View Source Config(Object) Initializes a new instance of the Config class. Declaration public Config(object obj) Parameters Type Name Description System.Object obj The config object. Properties | Improve this Doc View Source AbsolutePath Gets the absolute path. Declaration public string AbsolutePath { get; } Property Value Type Description System.String | Improve this Doc View Source Base Gets the base config instance. Declaration public object Base { get; } Property Value Type Description System.Object | Improve this Doc View Source Folder Gets or sets the config's folder. Declaration public string Folder { get; set; } Property Value Type Description System.String | Improve this Doc View Source List Gets a System.Collections.Generic.IReadOnlyCollection<T> containing all the Config . Declaration public static IReadOnlyDictionary<Config, HashSet<Config>> List { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < Config , System.Collections.Generic.HashSet < Config >> | Improve this Doc View Source Name Gets or sets the config's name. Declaration public string Name { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Cast<T>() Declaration public override T Cast<T>() where T : class Returns Type Description T Type Parameters Name Description T Overrides RolePlus.ExternModule.API.Engine.Core.TypeCastObject<System.Object>.Cast<T>() | Improve this Doc View Source Cast<T>(out T) Safely casts the current Base instance to the specified T type. Declaration public override bool Cast<T>(out T param) where T : class Parameters Type Name Description T param Returns Type Description System.Boolean true if the Base instance was successfully casted; otherwise, false . Type Parameters Name Description T The type to which to cast the Base instance. Overrides RolePlus.ExternModule.API.Engine.Core.TypeCastObject<System.Object>.Cast<T>(T) | Improve this Doc View Source GenerateNew<T>() Generates a new config of type T . Declaration public static Config GenerateNew<T>() where T : IConfig Returns Type Description Config The generated config. Type Parameters Name Description T The type of the config. | Improve this Doc View Source Get<T>() Gets a Config instance given the specified type T . Declaration public static Config Get<T>() where T : class Returns Type Description Config The corresponding Config instance or null if not found. Type Parameters Name Description T The type of the config to look for. | Improve this Doc View Source GetPath<T>() Gets the path of the specified data object of type T . Declaration public static string GetPath<T>() where T : class Returns Type Description System.String The corresponding data's path or null if not found. Type Parameters Name Description T The type of the data to be read. | Improve this Doc View Source Load(Config, String) Loads a config. Declaration public static void Load(Config config, string path = null) Parameters Type Name Description Config config The config to load. System.String path The config's path. | Improve this Doc View Source Load(Type, ConfigAttribute) Loads a config from a System.Type . Declaration public static Config Load(Type type, ConfigAttribute attribute = null) Parameters Type Name Description System.Type type The config type. ConfigAttribute attribute The config data. Returns Type Description Config | Improve this Doc View Source LoadAll() Loads all the configs. Declaration public static void LoadAll() | Improve this Doc View Source LoadFromCache(Config) Loads a config from the cached configs. Declaration public static void LoadFromCache(Config config) Parameters Type Name Description Config config The config to load. | Improve this Doc View Source Read<T>() Reads a data object of type T . Declaration public T Read<T>() where T : class Returns Type Description T The corresponding T instance or null if not found. Type Parameters Name Description T The type of the data to be read. | Improve this Doc View Source Write<T>(String, Object) Writes a new value contained in the specified config of type T . Declaration public void Write<T>(string name, object value) where T : class Parameters Type Name Description System.String name The name of the parameter to be modified. System.Object value The new value to be written. Type Parameters Name Description T The type of the data to be written."
  },
  "api/RolePlus.ExternModule.API.Features.Configs.ConfigAttribute.html": {
    "href": "api/RolePlus.ExternModule.API.Features.Configs.ConfigAttribute.html",
    "title": "Class ConfigAttribute | RolePlus Docs",
    "keywords": "Class ConfigAttribute This attribute determines whether the class which is being applied to should be treated as Config . Inheritance System.Object System.Attribute ConfigAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.Configs Assembly : RolePlus.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class ConfigAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source ConfigAttribute() Initializes a new instance of the ConfigAttribute class. Declaration public ConfigAttribute() | Improve this Doc View Source ConfigAttribute(String, String, Boolean) Initializes a new instance of the ConfigAttribute class. Declaration public ConfigAttribute(string folder, string name, bool isParent = false) Parameters Type Name Description System.String folder System.String name System.Boolean isParent Properties | Improve this Doc View Source Folder Gets the folder's name. Declaration public string Folder { get; } Property Value Type Description System.String | Improve this Doc View Source IsParent Gets a value indicating whether the class on which this attribute is being applied toshould be treated as parent. Declaration public bool IsParent { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets the file's name. Declaration public string Name { get; } Property Value Type Description System.String Implements System.Runtime.InteropServices._Attribute"
  },
  "api/RolePlus.ExternModule.API.Features.Configs.html": {
    "href": "api/RolePlus.ExternModule.API.Features.Configs.html",
    "title": "Namespace RolePlus.ExternModule.API.Features.Configs | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Features.Configs Classes Config The base class that handles the config system. ConfigAttribute This attribute determines whether the class which is being applied to should be treated as Config . Interfaces IConfig Defines the contract for basic config features."
  },
  "api/RolePlus.ExternModule.API.Features.Configs.IConfig.html": {
    "href": "api/RolePlus.ExternModule.API.Features.Configs.IConfig.html",
    "title": "Interface IConfig | RolePlus Docs",
    "keywords": "Interface IConfig Defines the contract for basic config features. Namespace : RolePlus.ExternModule.API.Features.Configs Assembly : RolePlus.dll Syntax public interface IConfig Properties | Improve this Doc View Source IsEnabled Gets or sets a value indicating whether the config should be read. Declaration bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShowDebugMessages Gets or sets a value whether debug messages should be shown. Declaration bool ShowDebugMessages { get; set; } Property Value Type Description System.Boolean"
  },
  "api/RolePlus.ExternModule.API.Features.Controllers.html": {
    "href": "api/RolePlus.ExternModule.API.Features.Controllers.html",
    "title": "Namespace RolePlus.ExternModule.API.Features.Controllers | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Features.Controllers Classes ObjectController A controller to be used with any type of components. PlayerScriptController A controller to be used with any type of playable character component."
  },
  "api/RolePlus.ExternModule.API.Features.Controllers.ObjectController.html": {
    "href": "api/RolePlus.ExternModule.API.Features.Controllers.ObjectController.html",
    "title": "Class ObjectController | RolePlus Docs",
    "keywords": "Class ObjectController A controller to be used with any type of components. Inheritance System.Object ObjectController PlayerScriptController Namespace : RolePlus.ExternModule.API.Features.Controllers Assembly : RolePlus.dll Syntax public abstract class ObjectController : MonoBehaviour Methods | Improve this Doc View Source Awake() Declaration protected virtual void Awake() | Improve this Doc View Source Destroy() Destroys the component. Declaration public virtual void Destroy() | Improve this Doc View Source FixedUpdate() Declaration protected virtual void FixedUpdate() | Improve this Doc View Source PartiallyDestroy() Partially destroys the component. Declaration protected virtual void PartiallyDestroy() | Improve this Doc View Source Start() Declaration protected virtual void Start() | Improve this Doc View Source SubscribeEvents() Subscribes the events. Declaration protected virtual void SubscribeEvents() | Improve this Doc View Source UnsubscribeEvents() Unsubscribes the events. Declaration protected virtual void UnsubscribeEvents()"
  },
  "api/RolePlus.ExternModule.API.Features.Controllers.PlayerScriptController.html": {
    "href": "api/RolePlus.ExternModule.API.Features.Controllers.PlayerScriptController.html",
    "title": "Class PlayerScriptController | RolePlus Docs",
    "keywords": "Class PlayerScriptController A controller to be used with any type of playable character component. Inheritance System.Object ObjectController PlayerScriptController HudManager Inherited Members ObjectController.Destroy() Namespace : RolePlus.ExternModule.API.Features.Controllers Assembly : RolePlus.dll Syntax public abstract class PlayerScriptController : ObjectController Properties | Improve this Doc View Source Owner The owner of the PlayerScriptController . Declaration public abstract Player Owner { get; protected set; } Property Value Type Description Player Methods | Improve this Doc View Source Awake() Declaration protected override void Awake() Overrides ObjectController.Awake() | Improve this Doc View Source Check(Player) Checks whether the given is the Owner . Declaration public bool Check(Player player) Parameters Type Name Description Player player The to check. Returns Type Description System.Boolean true if the is the Owner ; otherwise, false . | Improve this Doc View Source FixedUpdate() Declaration protected override void FixedUpdate() Overrides ObjectController.FixedUpdate() | Improve this Doc View Source OnLeft(LeftEventArgs) Declaration protected virtual void OnLeft(LeftEventArgs ev) Parameters Type Name Description LeftEventArgs ev | Improve this Doc View Source PartiallyDestroy() Declaration protected override void PartiallyDestroy() Overrides ObjectController.PartiallyDestroy() | Improve this Doc View Source Start() Declaration protected override void Start() Overrides ObjectController.Start() | Improve this Doc View Source SubscribeEvents() Declaration protected override void SubscribeEvents() Overrides ObjectController.SubscribeEvents() | Improve this Doc View Source UnsubscribeEvents() Declaration protected override void UnsubscribeEvents() Overrides ObjectController.UnsubscribeEvents()"
  },
  "api/RolePlus.ExternModule.API.Features.CustomAbilities.CustomAbility.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomAbilities.CustomAbility.html",
    "title": "Class CustomAbility | RolePlus Docs",
    "keywords": "Class CustomAbility CustomAbility is the base class used to create user-defined types treated as abilities applicable to a . Inheritance System.Object TypeCastObject < UObject > UObject AActor CustomAbility Scp079Ability Inherited Members AActor.DefaultFixedTickRate AActor.ComponentsInParent AActor.ComponentsInChildren AActor.Transform AActor.Position AActor.Rotation AActor.Scale AActor.CanEverTick AActor.FixedTickRate AActor.Tick() AActor.SubscribeEvents() AActor.UnsubscribeEvents() AActor.OnBeginDestroy() AActor.AttachTo(AActor, GameObject) AActor.AttachTo(AActor, AActor) AActor.AddComponent<T>(String) AActor.AddComponent(Type, String) AActor.GetComponent<T>() AActor.GetComponent(Type) AActor.TryGetComponent<T>(T) AActor.TryGetComponent(Type, AActor) AActor.HasComponent<T>() AActor.HasComponent(Type) UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.CustomAbilities Assembly : RolePlus.dll Syntax public abstract class CustomAbility : AActor Constructors | Improve this Doc View Source CustomAbility(Single) Initializes a new instance of the CustomAbility class. Declaration protected CustomAbility(float cooldown = 0F) Parameters Type Name Description System.Single cooldown Properties | Improve this Doc View Source Cooldown Gets the required cooldown before using the ability again. Declaration public virtual float Cooldown { get; protected set; } Property Value Type Description System.Single | Improve this Doc View Source IsReady Gets or sets a value indicating whether the ability is ready. Declaration public bool IsReady { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Level Gets the level of the ability. Declaration public virtual byte Level { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Manager Gets the ability manager which contains all the players with a CustomAbility . Declaration public static HashSet<Player> Manager { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source Owner Gets the owner of the ability. Declaration public Player Owner { get; } Property Value Type Description Player | Improve this Doc View Source PlayersValue Gets the players and their respective CustomAbility . Declaration public static IReadOnlyDictionary<Player, CustomAbility> PlayersValue { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < Player , CustomAbility > | Improve this Doc View Source Registered Gets a System.Collections.Generic.IReadOnlyList<T> of CustomAbility containing all the registered custom abilites. Declaration public static IReadOnlyList<CustomAbility> Registered { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < CustomAbility > | Improve this Doc View Source Type Gets the ability type name. Declaration public virtual string Type { get; } Property Value Type Description System.String | Improve this Doc View Source UnlockedMessage Gets the message to display when the ability is unlocked. Declaration public virtual string UnlockedMessage { get; protected set; } Property Value Type Description System.String | Improve this Doc View Source UsedMessage Gets the message to display when the ability is used. Declaration public virtual string UsedMessage { get; protected set; } Property Value Type Description System.String | Improve this Doc View Source WindupTime Gets the time to wait before the ability is activated. Declaration public virtual float WindupTime { get; protected set; } Property Value Type Description System.Single Methods | Improve this Doc View Source AddAbilities(Player, IEnumerable<String>) Adds a System.Collections.Generic.IEnumerable<T> of CustomAbility to the specified . Declaration public static void AddAbilities(Player player, IEnumerable<string> types) Parameters Type Name Description Player player The player to affect. System.Collections.Generic.IEnumerable < System.String > types The custom abilities. | Improve this Doc View Source AddAbilities(Player, IEnumerable<Type>) Adds a System.Collections.Generic.IEnumerable<T> of CustomAbility to the specified . Declaration public static void AddAbilities(Player player, IEnumerable<Type> types) Parameters Type Name Description Player player The player to affect. System.Collections.Generic.IEnumerable < System.Type > types The custom abilities. | Improve this Doc View Source AddAbility(Player, String) Adds a CustomAbility to the specified . Declaration public static bool AddAbility(Player player, string type) Parameters Type Name Description Player player The player to affect. System.String type The custom ability type. Returns Type Description System.Boolean true if the CustomAbility was given successfully; otherwise, false . | Improve this Doc View Source AddAbility(Player, Type) Adds a CustomAbility to the specified . Declaration public static bool AddAbility(Player player, Type type) Parameters Type Name Description Player player The player to affect. System.Type type The custom ability type. Returns Type Description System.Boolean true if the CustomAbility was given successfully; otherwise, false . | Improve this Doc View Source AddAbility<T>(Player, out T) Adds a T CustomAbility to the specified . Declaration public static bool AddAbility<T>(Player player, out T customAbility) where T : CustomAbility Parameters Type Name Description Player player The player to affect. T customAbility The given ability. Returns Type Description System.Boolean true if the CustomAbility was given successfully; otherwise, false . Type Parameters Name Description T The custom ability type. | Improve this Doc View Source Check(Player) Gets a value indicating whether the specified is the owner of this CustomAbility . Declaration public bool Check(Player player) Parameters Type Name Description Player player The to check. Returns Type Description System.Boolean true if the specified is the owner of this CustomAbility ; otherwise, false . | Improve this Doc View Source CooldownConditions() The cooldown conditions. Declaration protected virtual bool CooldownConditions() Returns Type Description System.Boolean | Improve this Doc View Source Get(Player, String) Gets a CustomAbility from a given the specified type name. Declaration public static CustomAbility Get(Player player, string type) Parameters Type Name Description Player player The player to check. System.String type The ability type name. Returns Type Description CustomAbility The corresponding CustomAbility , or null if not found. | Improve this Doc View Source Get(String) Gets a CustomAbility given the specified type name. Declaration public static CustomAbility Get(string type) Parameters Type Name Description System.String type The ability type name. Returns Type Description CustomAbility The corresponding CustomAbility , or null if not found. | Improve this Doc View Source Get<T>(Player) Gets a CustomAbility from a given the specified type name. Declaration public static T Get<T>(Player player) where T : CustomAbility Parameters Type Name Description Player player The player to check. Returns Type Description T The corresponding CustomAbility , or null if not found. Type Parameters Name Description T | Improve this Doc View Source OnAbilityUsed() Fired when the ability is used. Declaration protected virtual void OnAbilityUsed() | Improve this Doc View Source OnBeginPlay() Declaration protected override void OnBeginPlay() Overrides AActor.OnBeginPlay() | Improve this Doc View Source OnChangingLevel(Byte) Fired when the level is changed. Declaration protected virtual void OnChangingLevel(byte level) Parameters Type Name Description System.Byte level The new level. | Improve this Doc View Source OnEndPlay() Declaration protected override void OnEndPlay() Overrides AActor.OnEndPlay() | Improve this Doc View Source RegisterAbilities() Enables all the custom abilities present in the assembly. Declaration public static IEnumerable<CustomAbility> RegisterAbilities() Returns Type Description System.Collections.Generic.IEnumerable < CustomAbility > A System.Collections.Generic.IEnumerable<T> of CustomAbility which contains all the enabled custom abilities. | Improve this Doc View Source RemoveAbilities(Player) Removes all the custom abilities from the specified . Declaration public static void RemoveAbilities(Player player) Parameters Type Name Description Player player The player to affect. | Improve this Doc View Source RemoveAbilities(Player, IEnumerable<String>) Removes a System.Collections.Generic.IEnumerable<T> of CustomAbility from the specified . Declaration public static void RemoveAbilities(Player player, IEnumerable<string> types) Parameters Type Name Description Player player The player to affect. System.Collections.Generic.IEnumerable < System.String > types The custom abilities. | Improve this Doc View Source RemoveAbilities(Player, IEnumerable<Type>) Removes a System.Collections.Generic.IEnumerable<T> of CustomAbility from the specified . Declaration public static void RemoveAbilities(Player player, IEnumerable<Type> types) Parameters Type Name Description Player player The player to affect. System.Collections.Generic.IEnumerable < System.Type > types The custom abilities. | Improve this Doc View Source RemoveAbility(Player, String) Removes a CustomAbility from the specified . Declaration public static bool RemoveAbility(Player player, string type) Parameters Type Name Description Player player The player to affect. System.String type The custom ability type. Returns Type Description System.Boolean true if the CustomAbility was removed successfully; otherwise, false . | Improve this Doc View Source RemoveAbility(Player, Type) Removes a CustomAbility from the specified . Declaration public static bool RemoveAbility(Player player, Type type) Parameters Type Name Description Player player The player to affect. System.Type type The custom ability type. Returns Type Description System.Boolean true if the CustomAbility was removed successfully; otherwise, false . | Improve this Doc View Source RemoveAbility<T>(Player) Removes a T CustomAbility from the specified . Declaration public static bool RemoveAbility<T>(Player player) where T : CustomAbility Parameters Type Name Description Player player The player to affect. Returns Type Description System.Boolean true if the CustomAbility was removed successfully; otherwise, false . Type Parameters Name Description T The custom ability type. | Improve this Doc View Source UnregisterAbilities() Disables all the custom abilities present in the assembly. Declaration public static IEnumerable<CustomAbility> UnregisterAbilities() Returns Type Description System.Collections.Generic.IEnumerable < CustomAbility > A System.Collections.Generic.IEnumerable<T> of CustomAbility which contains all the disabled custom abilities. Extension Methods ComponentExtensions.AddActorComponent<T>(AActor, String)"
  },
  "api/RolePlus.ExternModule.API.Features.CustomAbilities.CustomAbilityAttribute.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomAbilities.CustomAbilityAttribute.html",
    "title": "Class CustomAbilityAttribute | RolePlus Docs",
    "keywords": "Class CustomAbilityAttribute This attribute determines whether the class which is being applied to should be treated as CustomAbility . Inheritance System.Object System.Attribute CustomAbilityAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.CustomAbilities Assembly : RolePlus.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class CustomAbilityAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute"
  },
  "api/RolePlus.ExternModule.API.Features.CustomAbilities.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomAbilities.html",
    "title": "Namespace RolePlus.ExternModule.API.Features.CustomAbilities | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Features.CustomAbilities Classes CustomAbility CustomAbility is the base class used to create user-defined types treated as abilities applicable to a . CustomAbilityAttribute This attribute determines whether the class which is being applied to should be treated as CustomAbility . Scp079Ability The Scp079Ability base class. Enums Scp079Ability.InvokeResponse All available responses used by Invoke(Object[]) ."
  },
  "api/RolePlus.ExternModule.API.Features.CustomAbilities.Scp079Ability.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomAbilities.Scp079Ability.html",
    "title": "Class Scp079Ability | RolePlus Docs",
    "keywords": "Class Scp079Ability The Scp079Ability base class. Inheritance System.Object TypeCastObject < UObject > UObject AActor CustomAbility Scp079Ability Inherited Members CustomAbility.Registered CustomAbility.Manager CustomAbility.PlayersValue CustomAbility.Owner CustomAbility.IsReady CustomAbility.Cooldown CustomAbility.UsedMessage CustomAbility.UnlockedMessage CustomAbility.WindupTime CustomAbility.Level CustomAbility.Type CustomAbility.Get(String) CustomAbility.Get(Player, String) CustomAbility.Get<T>(Player) CustomAbility.AddAbility<T>(Player, T) CustomAbility.AddAbility(Player, Type) CustomAbility.AddAbility(Player, String) CustomAbility.AddAbilities(Player, IEnumerable<Type>) CustomAbility.AddAbilities(Player, IEnumerable<String>) CustomAbility.RemoveAbility<T>(Player) CustomAbility.RemoveAbility(Player, Type) CustomAbility.RemoveAbility(Player, String) CustomAbility.RemoveAbilities(Player) CustomAbility.RemoveAbilities(Player, IEnumerable<Type>) CustomAbility.RemoveAbilities(Player, IEnumerable<String>) CustomAbility.RegisterAbilities() CustomAbility.UnregisterAbilities() CustomAbility.Check(Player) CustomAbility.OnBeginPlay() CustomAbility.OnEndPlay() CustomAbility.OnChangingLevel(Byte) AActor.DefaultFixedTickRate AActor.ComponentsInParent AActor.ComponentsInChildren AActor.Transform AActor.Position AActor.Rotation AActor.Scale AActor.CanEverTick AActor.FixedTickRate AActor.Tick() AActor.OnBeginDestroy() AActor.AttachTo(AActor, GameObject) AActor.AttachTo(AActor, AActor) AActor.AddComponent<T>(String) AActor.AddComponent(Type, String) AActor.GetComponent<T>() AActor.GetComponent(Type) AActor.TryGetComponent<T>(T) AActor.TryGetComponent(Type, AActor) AActor.HasComponent<T>() AActor.HasComponent(Type) UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.CustomAbilities Assembly : RolePlus.dll Syntax public abstract class Scp079Ability : CustomAbility Constructors | Improve this Doc View Source Scp079Ability(Byte, Single, Single, Single) Initializes a new instance of the Scp079Ability class. Declaration protected Scp079Ability(byte tier, float gainedExp, float requiredEnergy, float cooldown = 0F) Parameters Type Name Description System.Byte tier System.Single gainedExp System.Single requiredEnergy System.Single cooldown | Improve this Doc View Source Scp079Ability(Single) Initializes a new instance of the Scp079Ability class. Declaration protected Scp079Ability(float cooldown = 0F) Parameters Type Name Description System.Single cooldown Properties | Improve this Doc View Source AllowedZones Gets a System.Collections.Generic.IEnumerable<T> of containing all the zones in which SCP-079 can use the ability. Declaration public virtual IEnumerable<ZoneType> AllowedZones { get; protected set; } Property Value Type Description System.Collections.Generic.IEnumerable < ZoneType > | Improve this Doc View Source Duration Gets the duration of the ability. Declaration public virtual float Duration { get; protected set; } Property Value Type Description System.Single | Improve this Doc View Source GainedExperience Gets the gained experience after using the ability. Declaration public abstract float GainedExperience { get; protected set; } Property Value Type Description System.Single | Improve this Doc View Source IsUnlockable Gets a value indicating whether the ability is unlockable. Declaration public bool IsUnlockable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUnlocked Gets a value indicating whether the ability is unlocked. Declaration public bool IsUnlocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source RequiredEnergy Gets the required energy to use the ability. Declaration public abstract float RequiredEnergy { get; protected set; } Property Value Type Description System.Single | Improve this Doc View Source Tier Gets the required tier to unlock the ability. Declaration public abstract byte Tier { get; protected set; } Property Value Type Description System.Byte Methods | Improve this Doc View Source CooldownConditions() Declaration protected override bool CooldownConditions() Returns Type Description System.Boolean Overrides CustomAbility.CooldownConditions() | Improve this Doc View Source Invoke(Object[]) Invokes the ability. Declaration public virtual Scp079Ability.InvokeResponse Invoke(params object[] args) Parameters Type Name Description System.Object [] args Returns Type Description Scp079Ability.InvokeResponse | Improve this Doc View Source IsAbilityUnlocked(Scp079Role, Scp079Ability) Gets a value indicating whether the ability is unlocked. Declaration public static bool IsAbilityUnlocked(Scp079Role scp079, Scp079Ability ability) Parameters Type Name Description Scp079Role scp079 The player who owns the ability.. Scp079Ability ability The ability to check. Returns Type Description System.Boolean true if the ability is unlocked; otherwise, false . | Improve this Doc View Source IsInvokable(out Scp079Ability.InvokeResponse) Checks if the ability is invokable. Declaration public bool IsInvokable(out Scp079Ability.InvokeResponse invokeResponse) Parameters Type Name Description Scp079Ability.InvokeResponse invokeResponse The response. Returns Type Description System.Boolean true if the ability is invokable; otherwise, false . | Improve this Doc View Source OnAbilityUsed() Declaration protected override void OnAbilityUsed() Overrides CustomAbility.OnAbilityUsed() | Improve this Doc View Source OnGainingLevel(GainingLevelEventArgs) Declaration protected virtual void OnGainingLevel(GainingLevelEventArgs ev) Parameters Type Name Description GainingLevelEventArgs ev | Improve this Doc View Source SubscribeEvents() Declaration protected override void SubscribeEvents() Overrides AActor.SubscribeEvents() | Improve this Doc View Source UnsubscribeEvents() Declaration protected override void UnsubscribeEvents() Overrides AActor.UnsubscribeEvents() Extension Methods ComponentExtensions.AddActorComponent<T>(AActor, String)"
  },
  "api/RolePlus.ExternModule.API.Features.CustomAbilities.Scp079Ability.InvokeResponse.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomAbilities.Scp079Ability.InvokeResponse.html",
    "title": "Enum Scp079Ability.InvokeResponse | RolePlus Docs",
    "keywords": "Enum Scp079Ability.InvokeResponse All available responses used by Invoke(Object[]) . Namespace : RolePlus.ExternModule.API.Features.CustomAbilities Assembly : RolePlus.dll Syntax public enum InvokeResponse Fields Name Description InvalidData Invalid data. Locked Locked. NotEnoughEnergy Not enough energy. OnCooldown On cooldown. Valid Invoked."
  },
  "api/RolePlus.ExternModule.API.Features.CustomGamemode.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomGamemode.html",
    "title": "Class CustomGamemode | RolePlus Docs",
    "keywords": "Class CustomGamemode A class to easily manage custom gamemodes. Inheritance System.Object CustomGamemode CustomGamemode<T> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features Assembly : RolePlus.dll Syntax public abstract class CustomGamemode Properties | Improve this Doc View Source CurrentGamemode Gets the currently loaded CustomGamemode . Declaration public static CustomGamemode CurrentGamemode { get; } Property Value Type Description CustomGamemode | Improve this Doc View Source DisplayName Gets the name to be displayed. Declaration public virtual string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source EndingDelay Gets the ending delay before restarting the server. Declaration public virtual float EndingDelay { get; } Property Value Type Description System.Single | Improve this Doc View Source IsEnabled Gets a value indicating whether the gamemode is enabled. Declaration public virtual bool IsEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRegistered Gets a value indicating whether the gamemode is registered. Declaration public bool IsRegistered { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRespawnAllowed Gets a value indicating whether the respawn is enabled. Declaration public virtual bool IsRespawnAllowed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets the name. Declaration public virtual string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Players Gets all the players with a PlayerScript . Declaration public static List<Player> Players { get; } Property Value Type Description System.Collections.Generic.List < Player > | Improve this Doc View Source PlayerScript Gets the PlayerScriptController . Declaration public virtual Type PlayerScript { get; } Property Value Type Description System.Type | Improve this Doc View Source PreviousGamemode Gets the previously loaded CustomGamemode . Declaration public static CustomGamemode PreviousGamemode { get; } Property Value Type Description CustomGamemode | Improve this Doc View Source Registered Gets a System.Collections.Generic.List<T> which contains all registered CustomGamemode 's. Declaration public static List<CustomGamemode> Registered { get; } Property Value Type Description System.Collections.Generic.List < CustomGamemode > | Improve this Doc View Source StartingBroadcast Gets the to be displayed when the game starts. Declaration public virtual Broadcast StartingBroadcast { get; } Property Value Type Description Broadcast | Improve this Doc View Source Type Gets the gamemode type. Declaration public string Type { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Get(String) Gets the CustomGamemode given a specified name. Declaration public CustomGamemode Get(string name) Parameters Type Name Description System.String name The specified name. Returns Type Description CustomGamemode The corresponding CustomGamemode or null if not found. | Improve this Doc View Source OnEnded() Ends the gamemode. Declaration protected virtual void OnEnded() | Improve this Doc View Source OnStarted() Starts the gamemode. Declaration protected virtual void OnStarted() | Improve this Doc View Source RegisterGamemodes() Enables all the custom gamemodes present in the assembly. Declaration public static IEnumerable<CustomGamemode> RegisterGamemodes() Returns Type Description System.Collections.Generic.IEnumerable < CustomGamemode > A System.Collections.Generic.IEnumerable<T> of CustomGamemode which contains all the enabled custom gamemodes. | Improve this Doc View Source SubscribeEvents() Subscribes all the events. Declaration protected virtual void SubscribeEvents() | Improve this Doc View Source TryEnd(CustomGamemode) Tries to end a CustomGamemode given a CustomGamemode instance. Declaration public static bool TryEnd(CustomGamemode customGamemode) Parameters Type Name Description CustomGamemode customGamemode The CustomGamemode instance. Returns Type Description System.Boolean true if the CustomGamemode has been ended successfully; otherwise false . | Improve this Doc View Source TryEnd(String) Tries to end a CustomGamemode given a specified name. Declaration public static bool TryEnd(string name) Parameters Type Name Description System.String name The specified name. Returns Type Description System.Boolean true if the CustomGamemode has been ended successfully; otherwise false . | Improve this Doc View Source TryGet(String, out CustomGamemode) Tries to get a CustomGamemode given a specified name. Declaration public static bool TryGet(string name, out CustomGamemode customGamemode) Parameters Type Name Description System.String name The specified name. CustomGamemode customGamemode The found CustomGamemode . Returns Type Description System.Boolean true if the CustomGamemode has been found successfully; otherwise false . | Improve this Doc View Source TryRegister() Tries to register a CustomGamemode . Declaration public bool TryRegister() Returns Type Description System.Boolean Returns a value indicating whether the CustomGamemode was registered or not. | Improve this Doc View Source TryStart(CustomGamemode) Tries to start a CustomGamemode given a CustomGamemode instance. Declaration public static bool TryStart(CustomGamemode customGamemode) Parameters Type Name Description CustomGamemode customGamemode The CustomGamemode instance. Returns Type Description System.Boolean true if the CustomGamemode has been started successfully; otherwise false . | Improve this Doc View Source TryStart(String) Tries to start a CustomGamemode given a specified name. Declaration public static bool TryStart(string name) Parameters Type Name Description System.String name The specified name. Returns Type Description System.Boolean true if the CustomGamemode has been started successfully; otherwise false . | Improve this Doc View Source TryUnregister() Tries to unregister a CustomGamemode . Declaration public bool TryUnregister() Returns Type Description System.Boolean Returns a value indicating whether the CustomGamemode was unregistered or not. | Improve this Doc View Source UnregisterGamemodes() Disables all the custom gamemodes present in the assembly. Declaration public static IEnumerable<CustomGamemode> UnregisterGamemodes() Returns Type Description System.Collections.Generic.IEnumerable < CustomGamemode > A System.Collections.Generic.IEnumerable<T> of CustomGamemode which contains all the disabled custom gamemodes. | Improve this Doc View Source UnsubscribeEvents() Unsubscribes all the events. Declaration protected virtual void UnsubscribeEvents()"
  },
  "api/RolePlus.ExternModule.API.Features.CustomGamemode-1.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomGamemode-1.html",
    "title": "Class CustomGamemode<T> | RolePlus Docs",
    "keywords": "Class CustomGamemode<T> Inheritance System.Object CustomGamemode CustomGamemode<T> Inherited Members CustomGamemode.Registered CustomGamemode.Players CustomGamemode.CurrentGamemode CustomGamemode.PreviousGamemode CustomGamemode.Type CustomGamemode.Name CustomGamemode.DisplayName CustomGamemode.IsEnabled CustomGamemode.EndingDelay CustomGamemode.IsRespawnAllowed CustomGamemode.StartingBroadcast CustomGamemode.IsRegistered CustomGamemode.TryGet(String, CustomGamemode) CustomGamemode.TryStart(CustomGamemode) CustomGamemode.TryStart(String) CustomGamemode.TryEnd(CustomGamemode) CustomGamemode.TryEnd(String) CustomGamemode.RegisterGamemodes() CustomGamemode.UnregisterGamemodes() CustomGamemode.TryRegister() CustomGamemode.TryUnregister() CustomGamemode.Get(String) CustomGamemode.OnStarted() CustomGamemode.OnEnded() CustomGamemode.SubscribeEvents() CustomGamemode.UnsubscribeEvents() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features Assembly : RolePlus.dll Syntax public abstract class CustomGamemode<T> : CustomGamemode where T : class Type Parameters Name Description T Properties | Improve this Doc View Source PlayerScript Declaration public override Type PlayerScript { get; } Property Value Type Description System.Type Overrides CustomGamemode.PlayerScript"
  },
  "api/RolePlus.ExternModule.API.Features.CustomGamemodeAttribute.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomGamemodeAttribute.html",
    "title": "Class CustomGamemodeAttribute | RolePlus Docs",
    "keywords": "Class CustomGamemodeAttribute This attribute determines whether the class which is being applied to should be treated as CustomGamemode . Inheritance System.Object System.Attribute CustomGamemodeAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features Assembly : RolePlus.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class CustomGamemodeAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute"
  },
  "api/RolePlus.ExternModule.API.Features.CustomHud.Hint.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomHud.Hint.html",
    "title": "Struct Hint | RolePlus Docs",
    "keywords": "Struct Hint Represents a hint to be displayed to a player. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : RolePlus.ExternModule.API.Features.CustomHud Assembly : RolePlus.dll Syntax public struct Hint Constructors | Improve this Doc View Source Hint(String, Single) Initializes a new instance of the Hint struct. Declaration public Hint(string content, float duration) Parameters Type Name Description System.String content System.Single duration Properties | Improve this Doc View Source Content Gets or sets the content of the hint. Declaration public string Content { readonly get; set; } Property Value Type Description System.String | Improve this Doc View Source Duration Gets or sets the duration of the hint. Declaration public float Duration { readonly get; set; } Property Value Type Description System.Single"
  },
  "api/RolePlus.ExternModule.API.Features.CustomHud.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomHud.html",
    "title": "Namespace RolePlus.ExternModule.API.Features.CustomHud | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Features.CustomHud Classes HudManager Manages hints on a player's display. HudScreen Represents a display part of a HudManager . Structs Hint Represents a hint to be displayed to a player."
  },
  "api/RolePlus.ExternModule.API.Features.CustomHud.HudManager.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomHud.HudManager.html",
    "title": "Class HudManager | RolePlus Docs",
    "keywords": "Class HudManager Manages hints on a player's display. Inheritance System.Object ObjectController PlayerScriptController HudManager Inherited Members PlayerScriptController.Start() PlayerScriptController.SubscribeEvents() PlayerScriptController.UnsubscribeEvents() PlayerScriptController.OnLeft(LeftEventArgs) PlayerScriptController.Check(Player) ObjectController.Destroy() Namespace : RolePlus.ExternModule.API.Features.CustomHud Assembly : RolePlus.dll Syntax public sealed class HudManager : PlayerScriptController Properties | Improve this Doc View Source Displays Gets all attached HudScreen instances. Declaration public SortedList<ScreenLocation, HudScreen> Displays { get; } Property Value Type Description System.Collections.Generic.SortedList < ScreenLocation , HudScreen > | Improve this Doc View Source Instances Gets all instance of the HudManager component. Declaration public static Dictionary<Exiled.API.Features.Player, HudManager> Instances { get; } Property Value Type Description System.Collections.Generic.Dictionary < Exiled.API.Features.Player , HudManager > | Improve this Doc View Source Owner Declaration public override Exiled.API.Features.Player Owner { get; protected set; } Property Value Type Description Exiled.API.Features.Player Overrides PlayerScriptController.Owner Methods | Improve this Doc View Source Awake() Declaration protected override void Awake() Overrides PlayerScriptController.Awake() | Improve this Doc View Source FixedUpdate() Declaration protected override void FixedUpdate() Overrides PlayerScriptController.FixedUpdate() | Improve this Doc View Source PartiallyDestroy() Declaration protected override void PartiallyDestroy() Overrides PlayerScriptController.PartiallyDestroy() | Improve this Doc View Source ShowHint(Exiled.API.Features.Player, String, Single, Boolean, ScreenLocation) Displays a hint to a player. Declaration public static void ShowHint(Exiled.API.Features.Player player, string message, float duration = 3F, bool overrideCurrent = true, ScreenLocation displayLocation = ScreenLocation.MiddleBottom) Parameters Type Name Description Exiled.API.Features.Player player The player to show the hint to. System.String message The message to display. System.Single duration The duration of the hint. System.Boolean overrideCurrent Overrides the active hint. ScreenLocation displayLocation The location to display the hint."
  },
  "api/RolePlus.ExternModule.API.Features.CustomHud.HudScreen.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomHud.HudScreen.html",
    "title": "Class HudScreen | RolePlus Docs",
    "keywords": "Class HudScreen Represents a display part of a HudManager . Inheritance System.Object HudScreen Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.CustomHud Assembly : RolePlus.dll Syntax public class HudScreen Constructors | Improve this Doc View Source HudScreen() Initializes a new instance of the HudScreen class. Declaration public HudScreen() Properties | Improve this Doc View Source Content Gets or sets the content to be displayed. Declaration public string Content { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Enqueue(String, Single, Boolean) Enqueues a hint. Declaration public void Enqueue(string content, float duration, bool overrideQueue) Parameters Type Name Description System.String content The content of the hint. System.Single duration The duration of the hint. System.Boolean overrideQueue Whether the queue should be cleared before adding the hint. | Improve this Doc View Source Kill() Kills the coroutine that handles the display. Declaration public void Kill()"
  },
  "api/RolePlus.ExternModule.API.Features.CustomRoles.CustomRole.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomRoles.CustomRole.html",
    "title": "Class CustomRole | RolePlus Docs",
    "keywords": "Class CustomRole A tool to easily manage custom roles. Inheritance System.Object TypeCastObject < CustomRole > CustomRole CustomRole<T> Inherited Members TypeCastObject<CustomRole>.Cast<T>() TypeCastObject<CustomRole>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.CustomRoles Assembly : RolePlus.dll Syntax public abstract class CustomRole : TypeCastObject<CustomRole> Properties | Improve this Doc View Source CanEscape Gets a value indicating whether the player can escape through the escape inner. Declaration public virtual bool CanEscape { get; } Property Value Type Description System.Boolean | Improve this Doc View Source EscapeCustomRole Gets the CustomRole 's escape CustomRole . Declaration public virtual uint EscapeCustomRole { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source EscapeRole Gets the CustomRole 's escape . Declaration public virtual RoleType EscapeRole { get; } Property Value Type Description RoleType | Improve this Doc View Source Id Gets the type. Declaration public virtual uint Id { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source IsEnabled Gets a value indicating whether the CustomRole is enabled. Declaration public virtual bool IsEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRegistered Gets a value indicating whether the CustomRole is registered. Declaration public virtual bool IsRegistered { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsScp Gets a value indicating whether or not the CustomRole is a custom SCP. Declaration public virtual bool IsScp { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsTeamComponent Gets a value indicating whether the CustomRole is used for custom teams. Declaration public virtual bool IsTeamComponent { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Manager Gets the role manager which contains all the players with a CustomRole . Declaration public static HashSet<Player> Manager { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source MaxInstances Gets a value representing the maximum instances of the CustomRole that can be automatically assigned. Declaration public virtual int MaxInstances { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Name Gets a the CustomRole 's name. Declaration public virtual string Name { get; } Property Value Type Description System.String | Improve this Doc View Source OverrideEscapeCustomRole Gets a value indicating whether the escape custom role should be overridden. Declaration public virtual bool OverrideEscapeCustomRole { get; } Property Value Type Description System.Boolean | Improve this Doc View Source OverrideEscapeRole Gets a value indicating whether the escape role should be overridden. Declaration public virtual bool OverrideEscapeRole { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Players Gets a list of players who have this CustomRole . Declaration public IEnumerable<Player> Players { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Player > | Improve this Doc View Source Probability Gets the relative spawn probability of the CustomRole . Declaration public virtual int Probability { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Registered Gets a System.Collections.Generic.List<T> which contains all registered CustomRole 's. Declaration public static List<CustomRole> Registered { get; } Property Value Type Description System.Collections.Generic.List < CustomRole > | Improve this Doc View Source RespawnRole Gets the CustomRole 's respawn . Declaration public virtual RoleType RespawnRole { get; } Property Value Type Description RoleType | Improve this Doc View Source RespawnTeam Gets the CustomRole 's respawn . Declaration public virtual Team RespawnTeam { get; } Property Value Type Description Team | Improve this Doc View Source Role Gets the CustomRole 's . Declaration public virtual RoleType Role { get; } Property Value Type Description RoleType | Improve this Doc View Source RoleBuilderComponent Gets the CustomRole 's System.Type . Declaration public virtual Type RoleBuilderComponent { get; } Property Value Type Description System.Type | Improve this Doc View Source ShouldKeepPosition Gets a value indicating whether the player should be spawned in the same position. Declaration public virtual bool ShouldKeepPosition { get; } Property Value Type Description System.Boolean | Improve this Doc View Source SpawnOnEvents Gets a System.Collections.Generic.Dictionary<TKey, TValue> containing all the events, and the relative probability, on which spawn the custom role. Declaration public virtual Dictionary<string, int> SpawnOnEvents { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Int32 > Methods | Improve this Doc View Source CanSpawnByProbability() Gets a value indicating whether a player can be spawned as a specific CustomRole given its probability. Declaration public bool CanSpawnByProbability() Returns Type Description System.Boolean true if the probability condition was satified; otherwise, false . | Improve this Doc View Source ForceSpawn(Player, Boolean) Force spawns the player as a specific CustomRole . Declaration public void ForceSpawn(Player player, bool shouldKeepPosition = false) Parameters Type Name Description Player player The to be spawned. System.Boolean shouldKeepPosition A value indicating whether the should be spawned in the same position. | Improve this Doc View Source Get(Player) Gets a CustomRole from a . Declaration public static CustomRole Get(Player player) Parameters Type Name Description Player player The CustomRole owner. Returns Type Description CustomRole The CustomRole matching the search or null if not registered. | Improve this Doc View Source Get(Object) Gets a CustomRole given the specified Id . Declaration public static CustomRole Get(object customRoleType) Parameters Type Name Description System.Object customRoleType The specified Id . Returns Type Description CustomRole The CustomRole matching the search or null if not registered. | Improve this Doc View Source Get(String) Gets a CustomRole given the specified name. Declaration public static CustomRole Get(string name) Parameters Type Name Description System.String name The specified name. Returns Type Description CustomRole The CustomRole matching the search or null if not registered. | Improve this Doc View Source Get(Type) Gets a CustomRole given the specified RoleBuilderComponent . Declaration public static CustomRole Get(Type type) Parameters Type Name Description System.Type type The specified RoleBuilderComponent . Returns Type Description CustomRole The CustomRole matching the search or null if not found. | Improve this Doc View Source RegisterRoles() Enables all the custom roles present in the assembly. Declaration public static List<CustomRole> RegisterRoles() Returns Type Description System.Collections.Generic.List < CustomRole > A System.Collections.Generic.IEnumerable<T> of CustomRole which contains all the enabled custom roles. | Improve this Doc View Source SafeSpawn(Player, CustomRole) Tries to spawn the player as a specific CustomRole . Declaration public static bool SafeSpawn(Player player, CustomRole customRole) Parameters Type Name Description Player player The to be spawned. CustomRole customRole The CustomRole to be set. Returns Type Description System.Boolean true if the player was spawned; otherwise, false . | Improve this Doc View Source SafeSpawn(Player, Object) Tries to spawn the player as a specific CustomRole . Declaration public static bool SafeSpawn(Player player, object customRoleType) Parameters Type Name Description Player player The to be spawned. System.Object customRoleType The System.Object to be set. Returns Type Description System.Boolean true if the player was spawned; otherwise, false . | Improve this Doc View Source SafeSpawn(Player, String) Tries to spawn the player as a specific CustomRole by name. Declaration public static bool SafeSpawn(Player player, string name) Parameters Type Name Description Player player The to be spawned. System.String name The CustomRole name to be set. Returns Type Description System.Boolean Returns a value indicating whether the was spawned or not. | Improve this Doc View Source Spawn(Player) Spawns the player as a specific CustomRole . Declaration public bool Spawn(Player player) Parameters Type Name Description Player player The to be spawned. Returns Type Description System.Boolean true if the player was spawned; otherwise, false . | Improve this Doc View Source TryGet(Player, out CustomRole) Tries to get the player's current CustomRole . Declaration public static bool TryGet(Player player, out CustomRole customRole) Parameters Type Name Description Player player The to search on. CustomRole customRole The found CustomRole , null if not registered. Returns Type Description System.Boolean true if a CustomRole was found; otherwise, false . | Improve this Doc View Source TryGet(Object, out CustomRole) Tries to get a CustomRole given the specified CustomRole . Declaration public static bool TryGet(object customRoleType, out CustomRole customRole) Parameters Type Name Description System.Object customRoleType The System.Object to look for. CustomRole customRole The found CustomRole , null if not registered. Returns Type Description System.Boolean true if a CustomRole was found; otherwise, false . | Improve this Doc View Source TryGet(String, out CustomRole) Tries to get a CustomRole given a specified name. Declaration public static bool TryGet(string name, out CustomRole customRole) Parameters Type Name Description System.String name The CustomRole name to look for. CustomRole customRole The found CustomRole , null if not registered. Returns Type Description System.Boolean true if a CustomRole was found; otherwise, false . | Improve this Doc View Source UnregisterRoles() Disables all the custom roles present in the assembly. Declaration public static List<CustomRole> UnregisterRoles() Returns Type Description System.Collections.Generic.List < CustomRole > A System.Collections.Generic.IEnumerable<T> of CustomRole which contains all the disabled custom roles. | Improve this Doc View Source UnsafeSpawn(Player, CustomRole, Boolean) Tries to force spawn the player as a specific CustomRole . Declaration public static bool UnsafeSpawn(Player player, CustomRole customRole, bool shouldKeepPosition = false) Parameters Type Name Description Player player The to be spawned. CustomRole customRole The CustomRole to be set. System.Boolean shouldKeepPosition A value indicating whether the should be spawned in the same position. Returns Type Description System.Boolean true if the player was spawned; otherwise, false . | Improve this Doc View Source UnsafeSpawn(Player, Object, Boolean) Tries to force spawn the player as a specific CustomRole . Declaration public static bool UnsafeSpawn(Player player, object customRoleType, bool shouldKeepPosition = false) Parameters Type Name Description Player player The to be spawned. System.Object customRoleType The System.Object to be set. System.Boolean shouldKeepPosition A value indicating whether the should be spawned in the same position. Returns Type Description System.Boolean true if the player was spawned; otherwise, false . | Improve this Doc View Source UnsafeSpawn(Player, String, Boolean) Tries to force spawn the player as a specific CustomRole by name. Declaration public static bool UnsafeSpawn(Player player, string name, bool shouldKeepPosition = false) Parameters Type Name Description Player player The to be spawned. System.String name The CustomRole name to be set. System.Boolean shouldKeepPosition A value indicating whether the should be spawned in the same position. Returns Type Description System.Boolean true if the player was spawned; otherwise, false . Operators | Improve this Doc View Source Equality(CustomRole, CustomRole) Compares two operands: CustomRole and CustomRole . Declaration public static bool operator ==(CustomRole left, CustomRole right) Parameters Type Name Description CustomRole left The CustomRole to compare. CustomRole right The CustomRole to compare. Returns Type Description System.Boolean true if the values are equal. | Improve this Doc View Source Equality(CustomRole, Object) Compares two operands: CustomRole and System.Object . Declaration public static bool operator ==(CustomRole left, object right) Parameters Type Name Description CustomRole left The CustomRole to compare. System.Object right The System.Object to compare. Returns Type Description System.Boolean true if the values are equal. | Improve this Doc View Source Equality(Object, CustomRole) Compares two operands: System.Object and CustomRole . Declaration public static bool operator ==(object left, CustomRole right) Parameters Type Name Description System.Object left The System.Object to compare. CustomRole right The CustomRole to compare. Returns Type Description System.Boolean true if the values are equal. | Improve this Doc View Source Inequality(CustomRole, CustomRole) Compares two operands: CustomRole and CustomRole . Declaration public static bool operator !=(CustomRole left, CustomRole right) Parameters Type Name Description CustomRole left The CustomRole to compare. CustomRole right The CustomRole to compare. Returns Type Description System.Boolean true if the values are not equal. | Improve this Doc View Source Inequality(CustomRole, Object) Compares two operands: CustomRole and System.Object . Declaration public static bool operator !=(CustomRole left, object right) Parameters Type Name Description CustomRole left The CustomRole to compare. System.Object right The System.Object to compare. Returns Type Description System.Boolean true if the values are not equal. | Improve this Doc View Source Inequality(Object, CustomRole) Compares two operands: System.Object and CustomRole . Declaration public static bool operator !=(object left, CustomRole right) Parameters Type Name Description System.Object left The System.Object to compare. CustomRole right The CustomRole to compare. Returns Type Description System.Boolean true if the values are not equal."
  },
  "api/RolePlus.ExternModule.API.Features.CustomRoles.CustomRole.ICustomRoleConfig.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomRoles.CustomRole.ICustomRoleConfig.html",
    "title": "Interface CustomRole.ICustomRoleConfig | RolePlus Docs",
    "keywords": "Interface CustomRole.ICustomRoleConfig Defines the contract for config features used by CustomRole . Namespace : RolePlus.ExternModule.API.Features.CustomRoles Assembly : RolePlus.dll Syntax public interface ICustomRoleConfig Properties | Improve this Doc View Source ArtificialHealth Gets or sets the . Declaration float ArtificialHealth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Broadcast Gets or sets the content. Declaration Broadcast Broadcast { get; set; } Property Value Type Description Broadcast | Improve this Doc View Source Health Gets or sets the . Declaration float Health { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxArtificialHealth Gets or sets the . Declaration float MaxArtificialHealth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxHealth Gets or sets the 's maximum health. Declaration int MaxHealth { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Scale Gets or sets the . Declaration float Scale { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Spawnpoints Gets or sets a System.Collections.Generic.IEnumerable<T> of which represents the spawnpoints collection. Declaration List<RoomType> Spawnpoints { get; set; } Property Value Type Description System.Collections.Generic.List < RoomType >"
  },
  "api/RolePlus.ExternModule.API.Features.CustomRoles.CustomRole.ICustomRoleConfig.ICustomInventory.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomRoles.CustomRole.ICustomRoleConfig.ICustomInventory.html",
    "title": "Interface CustomRole.ICustomRoleConfig.ICustomInventory | RolePlus Docs",
    "keywords": "Interface CustomRole.ICustomRoleConfig.ICustomInventory Defines the contract for config features related to inventory management. Namespace : RolePlus.ExternModule.API.Features.CustomRoles Assembly : RolePlus.dll Syntax public interface ICustomInventory Properties | Improve this Doc View Source AmmoBox Gets or sets the ammo box to be given. Declaration Dictionary<AmmoType, ushort> AmmoBox { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < AmmoType , System.UInt16 > | Improve this Doc View Source CustomItems Gets or sets the custom items to be given. Declaration List<object> CustomItems { get; set; } Property Value Type Description System.Collections.Generic.List < System.Object > | Improve this Doc View Source Items Gets or sets the items to be given. Declaration List<ItemType> Items { get; set; } Property Value Type Description System.Collections.Generic.List < ItemType >"
  },
  "api/RolePlus.ExternModule.API.Features.CustomRoles.CustomRole.Info.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomRoles.CustomRole.Info.html",
    "title": "Struct CustomRole.Info | RolePlus Docs",
    "keywords": "Struct CustomRole.Info A set of tools to use with CustomRole . Implements CustomRole.ICustomRoleConfig Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : RolePlus.ExternModule.API.Features.CustomRoles Assembly : RolePlus.dll Syntax public struct Info : CustomRole.ICustomRoleConfig Constructors | Improve this Doc View Source Info(Single, Single, Int32, Single, Single, Broadcast, List<RoomType>) Initializes a new instance of the CustomRole.Info struct. Declaration public Info(float scale, float health, int maxHealth, float artificialHealth, float maxArtificialHealth, Broadcast broadcast, List<RoomType> spawnPoints) Parameters Type Name Description System.Single scale The scale to be set. System.Single health The health to be set. System.Int32 maxHealth The max health to be set. System.Single artificialHealth The artificial health to be set. System.Single maxArtificialHealth The max artificial health to be set. Broadcast broadcast The broadcast to show. System.Collections.Generic.List < RoomType > spawnPoints The spawnpoints. Properties | Improve this Doc View Source ArtificialHealth Declaration public float ArtificialHealth { readonly get; set; } Property Value Type Description System.Single | Improve this Doc View Source Broadcast Declaration public Broadcast Broadcast { readonly get; set; } Property Value Type Description Broadcast | Improve this Doc View Source Health Declaration public float Health { readonly get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxArtificialHealth Declaration public float MaxArtificialHealth { readonly get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxHealth Declaration public int MaxHealth { readonly get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Scale Declaration public float Scale { readonly get; set; } Property Value Type Description System.Single | Improve this Doc View Source Spawnpoints Declaration public List<RoomType> Spawnpoints { readonly get; set; } Property Value Type Description System.Collections.Generic.List < RoomType > Implements CustomRole.ICustomRoleConfig"
  },
  "api/RolePlus.ExternModule.API.Features.CustomRoles.CustomRole.Info.InventoryManager.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomRoles.CustomRole.Info.InventoryManager.html",
    "title": "Struct CustomRole.Info.InventoryManager | RolePlus Docs",
    "keywords": "Struct CustomRole.Info.InventoryManager A tool to easily handle human CustomRole settings. Implements CustomRole.ICustomRoleConfig.ICustomInventory Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : RolePlus.ExternModule.API.Features.CustomRoles Assembly : RolePlus.dll Syntax public struct InventoryManager : CustomRole.ICustomRoleConfig.ICustomInventory Constructors | Improve this Doc View Source InventoryManager(List<ItemType>, List<Object>, Dictionary<AmmoType, UInt16>) Initializes a new instance of the CustomRole.Info.InventoryManager struct. Declaration public InventoryManager(List<ItemType> inventory, List<object> customItems, Dictionary<AmmoType, ushort> ammoBox) Parameters Type Name Description System.Collections.Generic.List < ItemType > inventory The items to be given. System.Collections.Generic.List < System.Object > customItems The custom items to be given. System.Collections.Generic.Dictionary < AmmoType , System.UInt16 > ammoBox The ammobox to be set. Properties | Improve this Doc View Source AmmoBox Declaration public Dictionary<AmmoType, ushort> AmmoBox { readonly get; set; } Property Value Type Description System.Collections.Generic.Dictionary < AmmoType , System.UInt16 > | Improve this Doc View Source CustomItems Declaration public List<object> CustomItems { readonly get; set; } Property Value Type Description System.Collections.Generic.List < System.Object > | Improve this Doc View Source Items Declaration public List<ItemType> Items { readonly get; set; } Property Value Type Description System.Collections.Generic.List < ItemType > Implements CustomRole.ICustomRoleConfig.ICustomInventory"
  },
  "api/RolePlus.ExternModule.API.Features.CustomRoles.CustomRole-1.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomRoles.CustomRole-1.html",
    "title": "Class CustomRole<T> | RolePlus Docs",
    "keywords": "Class CustomRole<T> Inheritance System.Object TypeCastObject < CustomRole > CustomRole CustomRole<T> Inherited Members CustomRole.Registered CustomRole.Manager CustomRole.Id CustomRole.Role CustomRole.EscapeRole CustomRole.EscapeCustomRole CustomRole.SpawnOnEvents CustomRole.IsScp CustomRole.Probability CustomRole.MaxInstances CustomRole.RespawnTeam CustomRole.RespawnRole CustomRole.Name CustomRole.IsEnabled CustomRole.IsTeamComponent CustomRole.ShouldKeepPosition CustomRole.OverrideEscapeRole CustomRole.OverrideEscapeCustomRole CustomRole.CanEscape CustomRole.IsRegistered CustomRole.Players CustomRole.TryGet(Object, CustomRole) CustomRole.TryGet(String, CustomRole) CustomRole.TryGet(Player, CustomRole) CustomRole.SafeSpawn(Player, CustomRole) CustomRole.SafeSpawn(Player, Object) CustomRole.SafeSpawn(Player, String) CustomRole.UnsafeSpawn(Player, CustomRole, Boolean) CustomRole.UnsafeSpawn(Player, Object, Boolean) CustomRole.UnsafeSpawn(Player, String, Boolean) CustomRole.RegisterRoles() CustomRole.UnregisterRoles() CustomRole.Get(Object) CustomRole.Get(String) CustomRole.Get(Type) CustomRole.Get(Player) CustomRole.Spawn(Player) CustomRole.ForceSpawn(Player, Boolean) CustomRole.CanSpawnByProbability() TypeCastObject<CustomRole>.Cast<T>() TypeCastObject<CustomRole>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.CustomRoles Assembly : RolePlus.dll Syntax public abstract class CustomRole<T> : CustomRole where T : RoleBuilder Type Parameters Name Description T Properties | Improve this Doc View Source RoleBuilderComponent Declaration public override Type RoleBuilderComponent { get; } Property Value Type Description System.Type Overrides CustomRole.RoleBuilderComponent"
  },
  "api/RolePlus.ExternModule.API.Features.CustomRoles.CustomRoleAttribute.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomRoles.CustomRoleAttribute.html",
    "title": "Class CustomRoleAttribute | RolePlus Docs",
    "keywords": "Class CustomRoleAttribute This attribute determines whether the class which is being applied to should be treated as CustomRole . Inheritance System.Object System.Attribute CustomRoleAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.CustomRoles Assembly : RolePlus.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class CustomRoleAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute"
  },
  "api/RolePlus.ExternModule.API.Features.CustomRoles.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomRoles.html",
    "title": "Namespace RolePlus.ExternModule.API.Features.CustomRoles | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Features.CustomRoles Classes CustomRole A tool to easily manage custom roles. CustomRole<T> CustomRoleAttribute This attribute determines whether the class which is being applied to should be treated as CustomRole . RoleBuilder A tool to easily handle the custom role's logic. Structs CustomRole.Info A set of tools to use with CustomRole . CustomRole.Info.InventoryManager A tool to easily handle human CustomRole settings. Interfaces CustomRole.ICustomRoleConfig Defines the contract for config features used by CustomRole . CustomRole.ICustomRoleConfig.ICustomInventory Defines the contract for config features related to inventory management."
  },
  "api/RolePlus.ExternModule.API.Features.CustomRoles.RoleBuilder.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomRoles.RoleBuilder.html",
    "title": "Class RoleBuilder | RolePlus Docs",
    "keywords": "Class RoleBuilder A tool to easily handle the custom role's logic. Inheritance System.Object RoleBuilder Namespace : RolePlus.ExternModule.API.Features.CustomRoles Assembly : RolePlus.dll Syntax public abstract class RoleBuilder : MonoBehaviour Properties | Improve this Doc View Source AllowedDamageTypes Gets a [] containing all the allowed damage types. Declaration protected virtual DamageType[] AllowedDamageTypes { get; } Property Value Type Description DamageType [] | Improve this Doc View Source AllowedRoles Gets a [] containing all the allowed roles. Declaration protected virtual RoleType[] AllowedRoles { get; } Property Value Type Description RoleType [] | Improve this Doc View Source BypassableDoors Gets or sets a [] containing all the bypassable doors. Declaration protected virtual DoorType[] BypassableDoors { get; set; } Property Value Type Description DoorType [] | Improve this Doc View Source CanActivateGenerators Gets or sets a value indicating whether the Owner can activate generators. Declaration protected virtual bool CanActivateGenerators { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanActivateWarhead Gets or sets a value indicating whether the Owner can activate warhead. Declaration protected virtual bool CanActivateWarhead { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanActivateWorkstations Gets or sets a value indicating whether the Owner can activate workstations. Declaration protected virtual bool CanActivateWorkstations { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanBeHandcuffed Gets or sets a value indicating whether the Owner can be handcuffed. Declaration protected virtual bool CanBeHandcuffed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanBeHurtedByScps Gets or sets a value indicating whether the Owner can be hurted by SCPs. Declaration protected virtual bool CanBeHurtedByScps { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanBypassCheckpoints Gets or sets a value indicating whether the Owner can bypass checkpoints. Declaration protected virtual bool CanBypassCheckpoints { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanChangeItems Gets or sets a value indicating whether the Owner can change items from its inventory. Declaration protected virtual bool CanChangeItems { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanContainScp106 Gets or sets a value indicating whether the Owner can contain SCP-106. Declaration protected virtual bool CanContainScp106 { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanDropItems Gets or sets a value indicating whether the Owner can drop items. Declaration protected virtual bool CanDropItems { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanEnterFemurBreaker Gets or sets a value indicating whether the Owner can enter femur breaker. Declaration protected virtual bool CanEnterFemurBreaker { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanEnterPocketDimension Gets or sets a value indicating whether the Owner can enter pocket dimension. Declaration protected virtual bool CanEnterPocketDimension { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanHurtScps Gets or sets a value indicating whether the Owner can hurt SCPs. Declaration protected virtual bool CanHurtScps { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanPickupItems Gets or sets a value indicating whether the player can pickup items. Declaration protected virtual bool CanPickupItems { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanPlaceBlood Gets or sets a value indicating whether the Owner can place blood. Declaration protected virtual bool CanPlaceBlood { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanUseElevators Gets or sets a value indicating whether the Owner can use elevators. Declaration protected virtual bool CanUseElevators { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanUseIntercom Gets or sets a value indicating whether the Owner can use intercom. Declaration protected virtual bool CanUseIntercom { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanUseVoiceChat Gets or sets a value indicating whether the Owner can voicechat. Declaration protected virtual bool CanUseVoiceChat { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Config Gets the role's configs. Declaration protected virtual Config Config { get; } Property Value Type Description Config | Improve this Doc View Source CurrentSpeed Gets the current speed of the Owner . Declaration protected float CurrentSpeed { get; } Property Value Type Description System.Single | Improve this Doc View Source CustomInfo Gets the player's custom info. Declaration protected virtual string CustomInfo { get; } Property Value Type Description System.String | Improve this Doc View Source FakeAppearance Gets or sets the of the fake appearance applied by this RoleBuilder component. Declaration protected virtual RoleType FakeAppearance { get; set; } Property Value Type Description RoleType | Improve this Doc View Source FirstPersonCameraMeshComponent Gets the first person CharacterMeshComponent . Declaration protected CharacterMeshComponent FirstPersonCameraMeshComponent { get; set; } Property Value Type Description CharacterMeshComponent | Improve this Doc View Source GivenEffects Gets a System.Collections.Generic.IEnumerable<T> of which should be given to the player. Declaration protected virtual IEnumerable<EffectType> GivenEffects { get; } Property Value Type Description System.Collections.Generic.IEnumerable < EffectType > | Improve this Doc View Source HideInfoArea Gets a value indicating whether the player's should be hidden. Declaration protected virtual bool HideInfoArea { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IgnoredDamageTypes Gets a [] containing all the ignored damage types. Declaration protected virtual DamageType[] IgnoredDamageTypes { get; } Property Value Type Description DamageType [] | Improve this Doc View Source IgnoreScp096 Gets a value indicating whether the player can trigger Scp096. Declaration protected virtual bool IgnoreScp096 { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IgnoreScp173 Gets a value indicating whether the player can look at Scp173. Declaration protected virtual bool IgnoreScp173 { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Info Gets the CustomRole . CustomRole.Info . Declaration protected virtual CustomRole.Info Info { get; } Property Value Type Description CustomRole.Info | Improve this Doc View Source InventoryInfo Gets the CustomRole.Info.InventoryManager . Declaration protected virtual CustomRole.Info.InventoryManager InventoryInfo { get; } Property Value Type Description CustomRole.Info.InventoryManager | Improve this Doc View Source IsDeathAnnouncementEnabled Gets a value indicating whether the C.A.S.S.I.E death announcement can be played when the Owner dies. Declaration protected virtual bool IsDeathAnnouncementEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNightVisionEnabled Gets or sets a value indicating whether the Owner has the night vision enabled. Declaration protected virtual bool IsNightVisionEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRoleDynamic Gets or sets a value indicating whether the player's role is dynamic. Declaration protected virtual bool IsRoleDynamic { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source KeepEffectsActive Gets a value indicating whether the effects should be kept active. Declaration protected virtual bool KeepEffectsActive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source KilledByCustomRoleAnnouncements Gets or sets a System.Collections.Generic.Dictionary<TKey, TValue> containing all the C.A.S.S.I.E announcements to be played when the Owner is killed by a player with the corresponding System.Object . Declaration protected virtual Dictionary<object, string> KilledByCustomRoleAnnouncements { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.Object , System.String > | Improve this Doc View Source KilledByCustomTeamAnnouncements Gets or sets a System.Collections.Generic.Dictionary<TKey, TValue> containing all the C.A.S.S.I.E announcements to be played when the Owner is killed by a player belonging to the corresponding System.Object . Declaration protected virtual Dictionary<object, string> KilledByCustomTeamAnnouncements { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.Object , System.String > | Improve this Doc View Source KilledByRoleAnnouncements Gets or sets a System.Collections.Generic.Dictionary<TKey, TValue> containing all the C.A.S.S.I.E announcements to be played when the Owner is killed by a player with the corresponding . Declaration protected virtual Dictionary<RoleType, string> KilledByRoleAnnouncements { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < RoleType , System.String > | Improve this Doc View Source KilledByTeamAnnouncements Gets or sets a System.Collections.Generic.Dictionary<TKey, TValue> containing all the C.A.S.S.I.E announcements to be played when the Owner is killed by a player belonging to the corresponding . Declaration protected virtual Dictionary<Team, string> KilledByTeamAnnouncements { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < Team , System.String > | Improve this Doc View Source LitePlayers Gets a System.Collections.Generic.HashSet<T> of containing all the players to be spawned keeping the same position. Declaration public static List<Player> LitePlayers { get; } Property Value Type Description System.Collections.Generic.List < Player > | Improve this Doc View Source Owner Gets or sets who owns this RoleBuilder component. Declaration public abstract Player Owner { get; protected set; } Property Value Type Description Player | Improve this Doc View Source RandomSpawnpoint Gets a random spawnpoint. Declaration public Vector3 RandomSpawnpoint { get; } Property Value Type Description Vector3 | Improve this Doc View Source RankColor Gets the player's rank color. Declaration protected virtual string RankColor { get; } Property Value Type Description System.String | Improve this Doc View Source RankName Gets the player's rank name. Declaration protected virtual string RankName { get; } Property Value Type Description System.String | Improve this Doc View Source Role Gets or sets the of this RoleBuilder component. Declaration protected RoleType Role { get; set; } Property Value Type Description RoleType | Improve this Doc View Source ShowBroadcast Gets a value indicating whether the spawn broadcast should be shown. Declaration protected virtual bool ShowBroadcast { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ThirdPersonCameraMeshComponent Gets the third person CharacterMeshComponent . Declaration protected CharacterMeshComponent ThirdPersonCameraMeshComponent { get; set; } Property Value Type Description CharacterMeshComponent | Improve this Doc View Source UnknownTerminationCauseAnnouncement Gets the C.A.S.S.I.E announcement to be played when the Owner dies from an unhandled or unknown termination cause. Declaration protected virtual string UnknownTerminationCauseAnnouncement { get; } Property Value Type Description System.String | Improve this Doc View Source UseCustomSpawnpoint Gets a value indicating whether the existing spawnpoint should be used. Declaration protected virtual bool UseCustomSpawnpoint { get; } Property Value Type Description System.Boolean | Improve this Doc View Source UseDefaultRoleOnly Gets a value indicating whether the player's role should use the specified Role only. Declaration protected virtual bool UseDefaultRoleOnly { get; } Property Value Type Description System.Boolean | Improve this Doc View Source UseFakeAppearance Gets a value indicating whether FakeAppearance should be used. Declaration protected virtual bool UseFakeAppearance { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Awake() Declaration protected virtual void Awake() | Improve this Doc View Source Check(Player) Gets a value indicating whether the specified is the owner of this RoleBuilder component instance. Declaration public bool Check(Player player) Parameters Type Name Description Player player The to check. Returns Type Description System.Boolean true if the specified is the owner of this RoleBuilder component instance; otherwise, false . | Improve this Doc View Source Destroy() Destroys this RoleBuilder instance. Declaration public virtual void Destroy() | Improve this Doc View Source DestroyThirdPersonCameraMesh() Declaration protected virtual void DestroyThirdPersonCameraMesh() | Improve this Doc View Source FixedUpdate() Declaration protected virtual void FixedUpdate() | Improve this Doc View Source IsAllowed(DamageType) Gets a value indicating whether the specified is allowed. Declaration public bool IsAllowed(DamageType damageType) Parameters Type Name Description DamageType damageType The to check. Returns Type Description System.Boolean true if the specified is allowed; otherwise, false . | Improve this Doc View Source IsIgnored(DamageType) Gets a value indicating whether the specified is ignored. Declaration public bool IsIgnored(DamageType damageType) Parameters Type Name Description DamageType damageType The to check. Returns Type Description System.Boolean true if the specified is ignored; otherwise, false . | Improve this Doc View Source LoadConfigs(Object) Loads the given config. Declaration protected virtual void LoadConfigs(object config) Parameters Type Name Description System.Object config The config load. | Improve this Doc View Source PartiallyDestroy() Fired before the CustomRole instance gets destroyed. Declaration protected virtual void PartiallyDestroy() | Improve this Doc View Source SetupThirdPersonCameraMesh(String, String, FTransform, Single) Declaration protected virtual void SetupThirdPersonCameraMesh(string meshName, string objectName, FTransform transform = default(FTransform), float fixedTickRate = 0.01F) Parameters Type Name Description System.String meshName System.String objectName FTransform transform System.Single fixedTickRate | Improve this Doc View Source Start() Declaration protected virtual void Start() | Improve this Doc View Source SubscribeEvents() Subscribes all the specified events. Declaration protected virtual void SubscribeEvents() | Improve this Doc View Source UnsubscribeEvents() Unsubscribes all the specified events. Declaration protected virtual void UnsubscribeEvents()"
  },
  "api/RolePlus.ExternModule.API.Features.CustomSkins.CharacterMeshComponent.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomSkins.CharacterMeshComponent.html",
    "title": "Class CharacterMeshComponent | RolePlus Docs",
    "keywords": "Class CharacterMeshComponent Inheritance System.Object TypeCastObject < UObject > UObject AActor AActorComponent ASkeletalMeshComponent ASchematicMeshComponent CharacterMeshComponent Implements IAnimatorNative Inherited Members ASchematicMeshComponent.AnimatorsTriggers ASchematicMeshComponent.RootSchematic ASchematicMeshComponent.MeshName ASchematicMeshComponent.Socket ASchematicMeshComponent.Scale ASchematicMeshComponent.Position ASchematicMeshComponent.Rotation ASchematicMeshComponent.IsCollidable ASchematicMeshComponent.IAnimatorNative.AnimatorsTriggers ASchematicMeshComponent.CreateDefaultSubobject<T>(GameObject, String, String, Vector3, Vector3, Quaternion, FTransform) ASchematicMeshComponent.FindClosestObjectOfType<T>(Vector3, IEnumerable<SchematicObject>) ASchematicMeshComponent.FindClosestFrameOfType<T>(Vector3, IEnumerable<Pickup>) ASchematicMeshComponent.FindClosestObjectOfType<T>(Vector3) ASchematicMeshComponent.FindClosestObjectOfType<T>(SchematicObject) ASchematicMeshComponent.FindClosestObjectOfType<T>(T) ASchematicMeshComponent.FindClosestFrameOfType<T>(Vector3) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(Vector3, String, IEnumerable<SchematicObject>) ASchematicMeshComponent.FindClosestFrameWithTagOfType<T>(Vector3, String, IEnumerable<Pickup>) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(Vector3, String) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(SchematicObject, String) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(T, String) ASchematicMeshComponent.FindClosestFrameWithTagOfType<T>(T, String) ASchematicMeshComponent.FindClosestObjectsOfType<T>(Vector3, IEnumerable<SchematicObject>, UInt32) ASchematicMeshComponent.FindClosestFramesOfType<T>(Vector3, IEnumerable<Pickup>, UInt32) ASchematicMeshComponent.FindClosestObjectsOfType<T>(Vector3, UInt32) ASchematicMeshComponent.FindClosestObjectsOfType<T>(SchematicObject, UInt32) ASchematicMeshComponent.FindClosestObjectsOfType<T>(T, UInt32) ASchematicMeshComponent.FindClosestFramesOfType<T>(T, UInt32) ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(Vector3, String, UInt32) ASchematicMeshComponent.FindClosestFramesWithTagOfType<T>(Vector3, String, UInt32) ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(Vector3, String, IEnumerable<SchematicObject>, UInt32) ASchematicMeshComponent.FindClosestFramesWithTagOfType<T>(Vector3, String, IEnumerable<Pickup>, UInt32) ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(T, String, UInt32) ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(SchematicObject, String, UInt32) ASchematicMeshComponent.Create(SchematicObject, Vector3, Vector3, Quaternion) ASchematicMeshComponent.ShowBones() ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(IEnumerable<SchematicObject>, String, UInt32) ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(String, UInt32) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(IEnumerable<SchematicObject>, String) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(String) ASchematicMeshComponent.FindClosestFrameWithTagOfType<T>(String) ASchematicMeshComponent.FindClosestObjectsOfType<T>(IEnumerable<SchematicObject>, UInt32) ASchematicMeshComponent.FindClosestObjectsOfType<T>(UInt32) ASchematicMeshComponent.FindClosestFramesOfType<T>(UInt32) ASchematicMeshComponent.FindClosestObjectOfType<T>(IEnumerable<SchematicObject>) ASchematicMeshComponent.FindClosestObjectOfType<T>() ASchematicMeshComponent.FindClosestFrameOfType<T>() ASchematicMeshComponent.PlayAnimation(String, Boolean) ASchematicMeshComponent.PlayAnimation(String, Boolean, Int32) ASchematicMeshComponent.PlayAnimation(AnimatorParameter, Int32) ASchematicMeshComponent.StopAnimation(Int32) ASchematicMeshComponent.GetAnimations(Animator) ASchematicMeshComponent.GetCurrentAnimation(Animator) ASchematicMeshComponent.GetCurrentAnimation(Animator, AnimatorParameter) ASchematicMeshComponent.GetCurrentAnimation(Animator, String) ASchematicMeshComponent.SetCurrentAnimation(Animator, AnimatorParameter) ASchematicMeshComponent.SetCurrentAnimation(Animator, String, Boolean) ASchematicMeshComponent.TryGetAnimations(Animator, AnimatorParameter[]) ASchematicMeshComponent.OnChangingAnimationState(ChangingAnimationStateEventArgs) ASkeletalMeshComponent.FixedTickRate ASkeletalMeshComponent.ChangeVisibilityAll(Boolean) AActorComponent.Controllers AActor.DefaultFixedTickRate AActor.ComponentsInParent AActor.ComponentsInChildren AActor.Transform AActor.CanEverTick AActor.SubscribeEvents() AActor.UnsubscribeEvents() AActor.OnBeginDestroy() AActor.AttachTo(AActor, GameObject) AActor.AttachTo(AActor, AActor) AActor.AddComponent<T>(String) AActor.AddComponent(Type, String) AActor.GetComponent<T>() AActor.GetComponent(Type) AActor.TryGetComponent<T>(T) AActor.TryGetComponent(Type, AActor) AActor.HasComponent<T>() AActor.HasComponent(Type) UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.CustomSkins Assembly : RolePlus.dll Syntax public class CharacterMeshComponent : ASchematicMeshComponent, IAnimatorNative Properties | Improve this Doc View Source DestroyOnDeath Gets or sets a value indicating whether the mesh should be destroyed on player's death. Declaration public bool DestroyOnDeath { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source HiddenFromPlayers Gets a System.Collections.Generic.HashSet<T> of containing all the players unable to see the mesh. Declaration public HashSet<Player> HiddenFromPlayers { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source HideLights Gets or sets a value indicating whether the mesh lights should be hidden. Declaration public bool HideLights { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOwnerVisible Gets or sets a value indicating whether the owner is visible. Declaration public bool IsOwnerVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsVisible Declaration public override bool IsVisible { get; set; } Property Value Type Description System.Boolean Overrides ASchematicMeshComponent.IsVisible | Improve this Doc View Source IsVisibleToOwner Gets or sets a value indicating whether the RootSchematic is visible to the owner. Declaration public bool IsVisibleToOwner { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsVisibleToOwnerOnly Gets or sets a value indicating whether the RootSchematic is visible to the owner only. Declaration public bool IsVisibleToOwnerOnly { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Owner Gets the owner. Declaration public Player Owner { get; set; } Property Value Type Description Player Methods | Improve this Doc View Source ChangeVisibility(Player, Boolean) Changes the mesh visibility for the specified target. Declaration public void ChangeVisibility(Player target, bool isVisible) Parameters Type Name Description Player target The target. System.Boolean isVisible The new visibility state. | Improve this Doc View Source ChangeVisibility(Func<Player, Boolean>, Boolean) Changes the mesh visibility for the specified targets. Declaration public void ChangeVisibility(Func<Player, bool> predicate, bool isVisible) Parameters Type Name Description System.Func < Player , System.Boolean > predicate The condition to satify. System.Boolean isVisible The new visibility state. | Improve this Doc View Source OnBeginPlay() Declaration protected override void OnBeginPlay() Overrides ASchematicMeshComponent.OnBeginPlay() | Improve this Doc View Source OnEndPlay() Declaration protected override void OnEndPlay() Overrides ASchematicMeshComponent.OnEndPlay() | Improve this Doc View Source Tick() Declaration protected override void Tick() Overrides ASchematicMeshComponent.Tick() Implements IAnimatorNative Extension Methods ComponentExtensions.AddActorComponent<T>(AActor, String)"
  },
  "api/RolePlus.ExternModule.API.Features.CustomSkins.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomSkins.html",
    "title": "Namespace RolePlus.ExternModule.API.Features.CustomSkins | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Features.CustomSkins Classes CharacterMeshComponent ItemMeshComponent A class to implement custom meshes for s."
  },
  "api/RolePlus.ExternModule.API.Features.CustomSkins.ItemMeshComponent.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomSkins.ItemMeshComponent.html",
    "title": "Class ItemMeshComponent | RolePlus Docs",
    "keywords": "Class ItemMeshComponent A class to implement custom meshes for s. Inheritance System.Object TypeCastObject < UObject > UObject AActor AActorComponent ASkeletalMeshComponent ASchematicMeshComponent ItemMeshComponent Implements IAnimatorNative Inherited Members ASchematicMeshComponent.AnimatorsTriggers ASchematicMeshComponent.RootSchematic ASchematicMeshComponent.MeshName ASchematicMeshComponent.Socket ASchematicMeshComponent.Scale ASchematicMeshComponent.Position ASchematicMeshComponent.Rotation ASchematicMeshComponent.IsVisible ASchematicMeshComponent.IsCollidable ASchematicMeshComponent.IAnimatorNative.AnimatorsTriggers ASchematicMeshComponent.CreateDefaultSubobject<T>(GameObject, String, String, Vector3, Vector3, Quaternion, FTransform) ASchematicMeshComponent.FindClosestObjectOfType<T>(Vector3, IEnumerable<SchematicObject>) ASchematicMeshComponent.FindClosestFrameOfType<T>(Vector3, IEnumerable<Pickup>) ASchematicMeshComponent.FindClosestObjectOfType<T>(Vector3) ASchematicMeshComponent.FindClosestObjectOfType<T>(SchematicObject) ASchematicMeshComponent.FindClosestObjectOfType<T>(T) ASchematicMeshComponent.FindClosestFrameOfType<T>(Vector3) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(Vector3, String, IEnumerable<SchematicObject>) ASchematicMeshComponent.FindClosestFrameWithTagOfType<T>(Vector3, String, IEnumerable<Pickup>) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(Vector3, String) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(SchematicObject, String) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(T, String) ASchematicMeshComponent.FindClosestFrameWithTagOfType<T>(T, String) ASchematicMeshComponent.FindClosestObjectsOfType<T>(Vector3, IEnumerable<SchematicObject>, UInt32) ASchematicMeshComponent.FindClosestFramesOfType<T>(Vector3, IEnumerable<Pickup>, UInt32) ASchematicMeshComponent.FindClosestObjectsOfType<T>(Vector3, UInt32) ASchematicMeshComponent.FindClosestObjectsOfType<T>(SchematicObject, UInt32) ASchematicMeshComponent.FindClosestObjectsOfType<T>(T, UInt32) ASchematicMeshComponent.FindClosestFramesOfType<T>(T, UInt32) ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(Vector3, String, UInt32) ASchematicMeshComponent.FindClosestFramesWithTagOfType<T>(Vector3, String, UInt32) ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(Vector3, String, IEnumerable<SchematicObject>, UInt32) ASchematicMeshComponent.FindClosestFramesWithTagOfType<T>(Vector3, String, IEnumerable<Pickup>, UInt32) ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(T, String, UInt32) ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(SchematicObject, String, UInt32) ASchematicMeshComponent.Create(SchematicObject, Vector3, Vector3, Quaternion) ASchematicMeshComponent.ShowBones() ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(IEnumerable<SchematicObject>, String, UInt32) ASchematicMeshComponent.FindClosestObjectsWithTagOfType<T>(String, UInt32) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(IEnumerable<SchematicObject>, String) ASchematicMeshComponent.FindClosestObjectWithTagOfType<T>(String) ASchematicMeshComponent.FindClosestFrameWithTagOfType<T>(String) ASchematicMeshComponent.FindClosestObjectsOfType<T>(IEnumerable<SchematicObject>, UInt32) ASchematicMeshComponent.FindClosestObjectsOfType<T>(UInt32) ASchematicMeshComponent.FindClosestFramesOfType<T>(UInt32) ASchematicMeshComponent.FindClosestObjectOfType<T>(IEnumerable<SchematicObject>) ASchematicMeshComponent.FindClosestObjectOfType<T>() ASchematicMeshComponent.FindClosestFrameOfType<T>() ASchematicMeshComponent.PlayAnimation(String, Boolean) ASchematicMeshComponent.PlayAnimation(String, Boolean, Int32) ASchematicMeshComponent.PlayAnimation(AnimatorParameter, Int32) ASchematicMeshComponent.StopAnimation(Int32) ASchematicMeshComponent.GetAnimations(Animator) ASchematicMeshComponent.GetCurrentAnimation(Animator) ASchematicMeshComponent.GetCurrentAnimation(Animator, AnimatorParameter) ASchematicMeshComponent.GetCurrentAnimation(Animator, String) ASchematicMeshComponent.SetCurrentAnimation(Animator, AnimatorParameter) ASchematicMeshComponent.SetCurrentAnimation(Animator, String, Boolean) ASchematicMeshComponent.TryGetAnimations(Animator, AnimatorParameter[]) ASchematicMeshComponent.OnChangingAnimationState(ChangingAnimationStateEventArgs) ASkeletalMeshComponent.FixedTickRate ASkeletalMeshComponent.ChangeVisibilityAll(Boolean) AActorComponent.Controllers AActor.DefaultFixedTickRate AActor.ComponentsInParent AActor.ComponentsInChildren AActor.Transform AActor.CanEverTick AActor.SubscribeEvents() AActor.UnsubscribeEvents() AActor.OnBeginDestroy() AActor.AttachTo(AActor, GameObject) AActor.AttachTo(AActor, AActor) AActor.AddComponent<T>(String) AActor.AddComponent(Type, String) AActor.GetComponent<T>() AActor.GetComponent(Type) AActor.TryGetComponent<T>(T) AActor.TryGetComponent(Type, AActor) AActor.HasComponent<T>() AActor.HasComponent(Type) UObject.RegisteredTypes UObject.Base UObject.Name UObject.Tag UObject.IsEditable UObject.GetUObjectTypeByName(String) UObject.RegisterUObjectType<T>(String) UObject.RegisterUObjectType(Type, String) UObject.UnregisterUObjectType(Type) UObject.UnregisterUObjectType(String) UObject.FindUObjectDefinedTypeByName(String, Boolean) UObject.GetUObjectTypeFromRegisteredTypes<T>() UObject.GetUObjectTypeFromRegisteredTypes<T>(String) UObject.GetUObjectTypeFromRegisteredTypes(Type) UObject.GetUObjectTypeFromRegisteredTypes(Type, String) UObject.GetUObjectTypeFromRegisteredTypesByName(String) UObject.CreateDefaultSubobject(Type, Object[]) UObject.CreateDefaultSubobject<T>(Type) UObject.CreateDefaultSubobject<T>() UObject.CreateDefaultSubobject<T>(Object[]) UObject.CreateDefaultSubobject<T>(GameObject, String) UObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) UObject.CreateDefaultSubobject<T>(Type, GameObject, String) UObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) UObject.CreateDefaultSubobject(Type, GameObject, String) UObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) UObject.DestroyAllObjects() UObject.DestroyAllObjectsOfType<T>() UObject.FindActiveObjectOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<UObject, Boolean>) UObject.FindActiveObjectsOfType<T>() UObject.FindActiveObjectsOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Type) UObject.FindActiveObjectsOfType<T>(Type, Func<UObject, Boolean>) UObject.FindActiveObjectsWithTagOfType<T>(String) UObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) UObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) UObject.DestroyActiveObjectsOfType<T>() UObject.DestroyActiveObject<T>(GameObject) UObject.DestroyActiveObject(Type, GameObject) UObject.Destroy(Boolean) UObject.Destroy() UObject.OnDestroyed() TypeCastObject<UObject>.Cast<T>() TypeCastObject<UObject>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.CustomSkins Assembly : RolePlus.dll Syntax public class ItemMeshComponent : ASchematicMeshComponent, IAnimatorNative Constructors | Improve this Doc View Source ItemMeshComponent(SchematicObject, Vector3, Vector3, Quaternion) Initializes a new instance of the ItemMeshComponent class. Declaration protected ItemMeshComponent(SchematicObject mesh, Vector3 scale, Vector3 position, Quaternion rotation) Parameters Type Name Description SchematicObject mesh Vector3 scale Vector3 position Quaternion rotation Properties | Improve this Doc View Source ItemMesh Gets the mesh. Declaration public Item ItemMesh { get; } Property Value Type Description Item | Improve this Doc View Source Owner Gets the owner. Declaration public Player Owner { get; } Property Value Type Description Player | Improve this Doc View Source PickupMesh Gets the mesh. Declaration public Pickup PickupMesh { get; } Property Value Type Description Pickup Methods | Improve this Doc View Source OnBeginPlay() Declaration protected override void OnBeginPlay() Overrides ASchematicMeshComponent.OnBeginPlay() | Improve this Doc View Source OnEndPlay() Declaration protected override void OnEndPlay() Overrides ASchematicMeshComponent.OnEndPlay() | Improve this Doc View Source Tick() Declaration protected override void Tick() Overrides ASchematicMeshComponent.Tick() Implements IAnimatorNative Extension Methods ComponentExtensions.AddActorComponent<T>(AActor, String)"
  },
  "api/RolePlus.ExternModule.API.Features.CustomTeams.CustomTeam.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomTeams.CustomTeam.html",
    "title": "Class CustomTeam | RolePlus Docs",
    "keywords": "Class CustomTeam A tool to easily manage custom teams. Inheritance System.Object CustomTeam Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.CustomTeams Assembly : RolePlus.dll Syntax public class CustomTeam Constructors | Improve this Doc View Source CustomTeam() Initializes a new instance of the CustomTeam class. Declaration public CustomTeam() Properties | Improve this Doc View Source AlivePlayers Gets a System.Collections.Generic.IEnumerable<T> of which contains all players belonging to this CustomTeam . Declaration public IEnumerable<Player> AlivePlayers { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Player > | Improve this Doc View Source CanSpawnWithoutScps Gets a value indicating whether the CustomTeam can be spawned without any scp alive. Declaration public virtual bool CanSpawnWithoutScps { get; } Property Value Type Description System.Boolean | Improve this Doc View Source DisplayColor Gets the color of the Name to be displayed. Declaration public virtual string DisplayColor { get; } Property Value Type Description System.String | Improve this Doc View Source DisplayName Gets the name of the CustomTeam to be displayed. Declaration public virtual string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source Id Gets the id. Declaration public virtual uint Id { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source IsRegistered Gets a value indicating whether the CustomTeam is registered. Declaration public bool IsRegistered { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LeadingTeam Gets the required leading teams to win. Declaration public virtual Team[] LeadingTeam { get; } Property Value Type Description Team [] | Improve this Doc View Source Manager Gets the team manager which contains all the players belonging to a CustomTeam . Declaration public static HashSet<Player> Manager { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source Name Gets the name of the CustomTeam . Declaration public virtual string Name { get; } Property Value Type Description System.String | Improve this Doc View Source PathToAlert Gets the path of the custom audio file played after the CustomTeam is spawned. Declaration public virtual string PathToAlert { get; } Property Value Type Description System.String | Improve this Doc View Source Players Gets a System.Collections.Generic.IReadOnlyDictionary<TKey, TValue> which contains all instances beloging to all CustomTeam instances. Declaration public static IReadOnlyDictionary<Player, CustomTeam> Players { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < Player , CustomTeam > | Improve this Doc View Source Probability Gets the relative spawn probability of the CustomTeam . Declaration public virtual int Probability { get; } Property Value Type Description System.Int32 | Improve this Doc View Source RandomUnit Gets a random CustomRole . Declaration public CustomRole RandomUnit { get; } Property Value Type Description CustomRole | Improve this Doc View Source Registered Gets a System.Collections.Generic.List<T> which contains all registered CustomTeam 's. Declaration public static List<CustomTeam> Registered { get; } Property Value Type Description System.Collections.Generic.List < CustomTeam > | Improve this Doc View Source RequiredCustomRoleToSpawn Gets the required CustomRole to allow the CustomTeam to spawn. Declaration public virtual uint RequiredCustomRoleToSpawn { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source RequiredRoleToSpawn Gets the required to allow the CustomTeam to spawn. Declaration public virtual RoleType RequiredRoleToSpawn { get; } Property Value Type Description RoleType | Improve this Doc View Source RespawnTeam Gets the which is being spawned from. Declaration public virtual Team RespawnTeam { get; } Property Value Type Description Team | Improve this Doc View Source Size Gets the size of the CustomTeam . Declaration public virtual uint Size { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source SpawnOnEvents Gets a System.Collections.Generic.Dictionary<TKey, TValue> containing all the events, and the relative probability, on which spawn the custom team. Declaration public virtual Dictionary<string, int> SpawnOnEvents { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Int32 > | Improve this Doc View Source Tickets Gets the tickets of the CustomTeam . Declaration public virtual uint Tickets { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source UnitName Gets the name of the CustomTeam unit. Declaration public virtual string UnitName { get; } Property Value Type Description System.String | Improve this Doc View Source Units Gets the System.Collections.Generic.IEnumerable<T> of System.Type which contains all types to be used as unit. Declaration public virtual IEnumerable<object> Units { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Object > Methods | Improve this Doc View Source AddTickets(UInt32) Adds respawn tickets to the current CustomTeam instance given a specified amount. Declaration public void AddTickets(uint amount) Parameters Type Name Description System.UInt32 amount The amount of tickets to add. | Improve this Doc View Source Finalize() Finalizes an instance of the CustomTeam class. Declaration protected void Finalize() | Improve this Doc View Source Get(Player) Gets a CustomTeam from a . Declaration public static CustomTeam Get(Player player) Parameters Type Name Description Player player The to check. Returns Type Description CustomTeam The CustomTeam matching the search or null if not registered. | Improve this Doc View Source Get(String) Gets a CustomTeam given the specified name. Declaration public static CustomTeam Get(string name) Parameters Type Name Description System.String name The specified name. Returns Type Description CustomTeam The CustomTeam matching the search or null if not registered. | Improve this Doc View Source Get<T>(Object) Gets a CustomTeam given the specified System.Object . Declaration public static CustomTeam Get<T>(object value) Parameters Type Name Description System.Object value The System.Object to check. Returns Type Description CustomTeam The CustomTeam matching the search or null if not registered. Type Parameters Name Description T | Improve this Doc View Source RegisterTeams() Enables all the custom teams present in the assembly. Declaration public static IEnumerable<CustomTeam> RegisterTeams() Returns Type Description System.Collections.Generic.IEnumerable < CustomTeam > A System.Collections.Generic.IEnumerable<T> of CustomTeam which contains all the enabled custom teams. | Improve this Doc View Source RemoveTickets(UInt32) Removes respawn tickets to the current CustomTeam instance given a specified amount. Declaration public void RemoveTickets(uint amount) Parameters Type Name Description System.UInt32 amount The amount of tickets to remove. | Improve this Doc View Source Spawn() Spawns the CustomTeam . Declaration public void Spawn() | Improve this Doc View Source Spawn(Player) Spawns a as CustomTeam unit. Declaration public void Spawn(Player player) Parameters Type Name Description Player player The to be spawned. | Improve this Doc View Source Spawn(IEnumerable<Player>, Boolean) Spawns a System.Collections.Generic.IEnumerable<T> of as this CustomTeam unit. Declaration public void Spawn(IEnumerable<Player> players, bool keepSize = true) Parameters Type Name Description System.Collections.Generic.IEnumerable < Player > players The players to be spawned. System.Boolean keepSize A value indicating whether the team size should be the same as the specified one. | Improve this Doc View Source Spawn(UInt32) Spawns the CustomTeam given the specified amount of units. Declaration public void Spawn(uint amount) Parameters Type Name Description System.UInt32 amount The amount of units to be spawned. | Improve this Doc View Source TryGet(Player, out CustomTeam) Tries to get a CustomTeam belonging to the specified . Declaration public static bool TryGet(Player player, out CustomTeam customTeam) Parameters Type Name Description Player player The to look for. CustomTeam customTeam The found CustomTeam , null if not registered. Returns Type Description System.Boolean true if a CustomTeam is found; otherwise, false . | Improve this Doc View Source TryGet(String, out CustomTeam) Tries to get a CustomTeam given the specified name. Declaration public static bool TryGet(string name, out CustomTeam customTeam) Parameters Type Name Description System.String name The name to look for. CustomTeam customTeam The found CustomTeam , null if not registered. Returns Type Description System.Boolean true if a CustomTeam is found; otherwise, false . | Improve this Doc View Source TryGet<T>(Object, out CustomTeam) Tries to get a CustomTeam given the specified System.Object . Declaration public static bool TryGet<T>(object customRoleType, out CustomTeam customTeam) Parameters Type Name Description System.Object customRoleType The System.Object to look for. CustomTeam customTeam The found CustomTeam , null if not registered. Returns Type Description System.Boolean true if a CustomTeam is found; otherwise, false . Type Parameters Name Description T | Improve this Doc View Source TryRegister() Tries to register a CustomTeam . Declaration public bool TryRegister() Returns Type Description System.Boolean true if the CustomTeam was registered; otherwise, false . | Improve this Doc View Source TrySpawn(Player, CustomTeam) Tries to spawn a player as a CustomTeam unit. Declaration public static bool TrySpawn(Player player, CustomTeam customTeam) Parameters Type Name Description Player player The to be spawned. CustomTeam customTeam The CustomTeam unit to be assigned. Returns Type Description System.Boolean true if the player was spawned; otherwise, false . | Improve this Doc View Source TrySpawn(Player, Object) Tries to spawn a player as a CustomTeam unit given the specified System.Object . Declaration public static bool TrySpawn(Player player, object customTeamType) Parameters Type Name Description Player player The to be spawned. System.Object customTeamType The specified System.Object . Returns Type Description System.Boolean true if the player was spawned; otherwise, false . | Improve this Doc View Source TrySpawn(CustomTeam) Tries to spawn the specified CustomTeam . Declaration public static bool TrySpawn(CustomTeam customTeam) Parameters Type Name Description CustomTeam customTeam The CustomTeam to be spawned. Returns Type Description System.Boolean true if the CustomTeam was spawned; otherwise, false . | Improve this Doc View Source TrySpawn(IEnumerable<Player>, CustomTeam) Tries to spawn a System.Collections.Generic.IEnumerable<T> of as a CustomTeam unit. Declaration public static bool TrySpawn(IEnumerable<Player> players, CustomTeam customTeam) Parameters Type Name Description System.Collections.Generic.IEnumerable < Player > players The players to be spawned. CustomTeam customTeam The CustomTeam unit to be assigned. Returns Type Description System.Boolean true if the players were spawned; otherwise, false . | Improve this Doc View Source TrySpawn(IEnumerable<Player>, Object) Tries to spawn a System.Collections.Generic.IEnumerable<T> of as a CustomTeam unit given the specified System.Object . Declaration public static bool TrySpawn(IEnumerable<Player> players, object customTeamType) Parameters Type Name Description System.Collections.Generic.IEnumerable < Player > players The players to be spawned. System.Object customTeamType The specified System.Object . Returns Type Description System.Boolean true if the players were spawned; otherwise, false . | Improve this Doc View Source TrySpawn(Object) Tries to spawn a CustomTeam given the specified System.Object . Declaration public static bool TrySpawn(object customTeamType) Parameters Type Name Description System.Object customTeamType The specified System.Object . Returns Type Description System.Boolean true if the CustomTeam was spawned; otherwise, false . | Improve this Doc View Source TrySpawn(UInt32, CustomTeam) Tries to spawn a CustomTeam given a specified amount of units. Declaration public static bool TrySpawn(uint amount, CustomTeam customTeam) Parameters Type Name Description System.UInt32 amount The amount of units to be spawned. CustomTeam customTeam The CustomTeam to be spawned. Returns Type Description System.Boolean true if the CustomTeam was spawned; otherwise, false . | Improve this Doc View Source TrySpawn(UInt32, Object) Tries to spawn a CustomTeam given the specified System.Object . Declaration public static bool TrySpawn(uint amount, object customTeamType) Parameters Type Name Description System.UInt32 amount The amount of units to be spawned. System.Object customTeamType The specified System.Object . Returns Type Description System.Boolean true if the CustomTeam was spawned; otherwise, false . | Improve this Doc View Source TryUnregister() Tries to register a CustomTeam . Declaration public bool TryUnregister() Returns Type Description System.Boolean true if the CustomTeam was unregistered; otherwise, false . | Improve this Doc View Source UnregisterTeams() Disables all the custom teams present in the assembly. Declaration public static IEnumerable<CustomTeam> UnregisterTeams() Returns Type Description System.Collections.Generic.IEnumerable < CustomTeam > A System.Collections.Generic.IEnumerable<T> of CustomTeam which contains all the disabled custom teams. Operators | Improve this Doc View Source Equality(CustomTeam, CustomTeam) Compares two operands: CustomTeam and CustomTeam . Declaration public static bool operator ==(CustomTeam left, CustomTeam right) Parameters Type Name Description CustomTeam left The CustomTeam to compare. CustomTeam right The CustomTeam to compare. Returns Type Description System.Boolean true if the values are equal. | Improve this Doc View Source Equality(CustomTeam, Object) Compares two operands: CustomTeam and System.Object . Declaration public static bool operator ==(CustomTeam left, object right) Parameters Type Name Description CustomTeam left The CustomTeam to compare. System.Object right The System.Object to compare. Returns Type Description System.Boolean true if the values are equal. | Improve this Doc View Source Equality(Object, CustomTeam) Compares two operands: System.Object and CustomTeam . Declaration public static bool operator ==(object left, CustomTeam right) Parameters Type Name Description System.Object left The System.Object to compare. CustomTeam right The CustomTeam to compare. Returns Type Description System.Boolean true if the values are equal. | Improve this Doc View Source Inequality(CustomTeam, CustomTeam) Compares two operands: CustomTeam and CustomTeam . Declaration public static bool operator !=(CustomTeam left, CustomTeam right) Parameters Type Name Description CustomTeam left The CustomTeam to compare. CustomTeam right The CustomTeam to compare. Returns Type Description System.Boolean true if the values are not equal. | Improve this Doc View Source Inequality(CustomTeam, Object) Compares two operands: CustomTeam and System.Object . Declaration public static bool operator !=(CustomTeam left, object right) Parameters Type Name Description CustomTeam left The CustomTeam to compare. System.Object right The System.Object to compare. Returns Type Description System.Boolean true if the values are not equal. | Improve this Doc View Source Inequality(Object, CustomTeam) Compares two operands: System.Object and CustomTeam . Declaration public static bool operator !=(object left, CustomTeam right) Parameters Type Name Description System.Object left The System.Object to compare. CustomTeam right The CustomTeam to compare. Returns Type Description System.Boolean true if the values are not equal."
  },
  "api/RolePlus.ExternModule.API.Features.CustomTeams.CustomTeam.RespawnInfo.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomTeams.CustomTeam.RespawnInfo.html",
    "title": "Struct CustomTeam.RespawnInfo | RolePlus Docs",
    "keywords": "Struct CustomTeam.RespawnInfo A tool to easily handle respawn settings. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : RolePlus.ExternModule.API.Features.CustomTeams Assembly : RolePlus.dll Syntax public struct RespawnInfo Properties | Improve this Doc View Source Color Gets or sets the respawn unit color. Declaration public string Color { readonly get; set; } Property Value Type Description System.String | Improve this Doc View Source Name Gets or sets the respawn unit name. Declaration public string Name { readonly get; set; } Property Value Type Description System.String"
  },
  "api/RolePlus.ExternModule.API.Features.CustomTeams.CustomTeamAttribute.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomTeams.CustomTeamAttribute.html",
    "title": "Class CustomTeamAttribute | RolePlus Docs",
    "keywords": "Class CustomTeamAttribute This attribute determines whether the class which is being applied to should be treated as CustomTeam . Inheritance System.Object System.Attribute CustomTeamAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.CustomTeams Assembly : RolePlus.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class CustomTeamAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source CustomTeamAttribute() Initializes a new instance of the CustomTeamAttribute class. Declaration public CustomTeamAttribute() Implements System.Runtime.InteropServices._Attribute"
  },
  "api/RolePlus.ExternModule.API.Features.CustomTeams.html": {
    "href": "api/RolePlus.ExternModule.API.Features.CustomTeams.html",
    "title": "Namespace RolePlus.ExternModule.API.Features.CustomTeams | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Features.CustomTeams Classes CustomTeam A tool to easily manage custom teams. CustomTeamAttribute This attribute determines whether the class which is being applied to should be treated as CustomTeam . Structs CustomTeam.RespawnInfo A tool to easily handle respawn settings."
  },
  "api/RolePlus.ExternModule.API.Features.html": {
    "href": "api/RolePlus.ExternModule.API.Features.html",
    "title": "Namespace RolePlus.ExternModule.API.Features | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Features Classes CustomGamemode A class to easily manage custom gamemodes. CustomGamemode<T> CustomGamemodeAttribute This attribute determines whether the class which is being applied to should be treated as CustomGamemode . InventorySlot A class to easily create inventory presets. TemporaryStats A tool to keep track of temporary 's properties. Structs Badge A tool to easily manage in-game badges."
  },
  "api/RolePlus.ExternModule.API.Features.InventorySlot.html": {
    "href": "api/RolePlus.ExternModule.API.Features.InventorySlot.html",
    "title": "Class InventorySlot | RolePlus Docs",
    "keywords": "Class InventorySlot A class to easily create inventory presets. Inheritance System.Object InventorySlot Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features Assembly : RolePlus.dll Syntax public sealed class InventorySlot Properties | Improve this Doc View Source Ammo Gets or sets a System.Collections.Generic.Dictionary<TKey, TValue> of and System.UInt16 which contains all the ammo types and amounts of this slot. Declaration public Dictionary<AmmoType, ushort> Ammo { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < AmmoType , System.UInt16 > | Improve this Doc View Source Chance Gets or sets the chance of this inventory slot. [Optional] Useful for inventory tweaks which involve one or more probability value. Declaration public float Chance { get; set; } Property Value Type Description System.Single | Improve this Doc View Source CustomItems Gets or sets a System.Collections.Generic.IEnumerable<T> of System.String which contains all the custom items of this slot. Declaration public List<object> CustomItems { get; set; } Property Value Type Description System.Collections.Generic.List < System.Object > | Improve this Doc View Source Items Gets or sets a System.Collections.Generic.IEnumerable<T> of which contains all the items of this slot. Declaration public List<ItemType> Items { get; set; } Property Value Type Description System.Collections.Generic.List < ItemType >"
  },
  "api/RolePlus.ExternModule.API.Features.TemporaryStats.html": {
    "href": "api/RolePlus.ExternModule.API.Features.TemporaryStats.html",
    "title": "Class TemporaryStats | RolePlus Docs",
    "keywords": "Class TemporaryStats A tool to keep track of temporary 's properties. Inheritance System.Object TemporaryStats Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features Assembly : RolePlus.dll Syntax public sealed class TemporaryStats Constructors | Improve this Doc View Source TemporaryStats() Initializes a new instance of the TemporaryStats class. Declaration public TemporaryStats() | Improve this Doc View Source TemporaryStats(Player) Declaration public TemporaryStats(Player player) Parameters Type Name Description Player player | Improve this Doc View Source TemporaryStats(Single, Int32, Single, Single, RoleType, Object, Vector3, Vector2, Vector3, String, String, String, String, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, IEnumerable<ItemType>, IEnumerable<Object>, IEnumerable<EffectType>) Declaration public TemporaryStats(float health = 0F, int maxHealth = 0, float artificialHealth = 0F, float maxArtificialHealth = 0F, RoleType role = null, object customRole = null, Vector3 position = null, Vector2 rotation = null, Vector3 scale = null, string nickname = \"\", string customInfo = \"\", string rankName = \"\", string rankColor = \"\", bool badgeHidden = false, bool isInvisible = true, bool isOverwatchEnabled = false, bool isBypassModeEnabled = false, bool isGodModeEnabled = false, bool isUsingStamina = true, bool isMuted = false, bool isIntercomMuted = false, IEnumerable<ItemType> inventory = null, IEnumerable<object> customItems = null, IEnumerable<EffectType> effects = null) Parameters Type Name Description System.Single health System.Int32 maxHealth System.Single artificialHealth System.Single maxArtificialHealth RoleType role System.Object customRole Vector3 position Vector2 rotation Vector3 scale System.String nickname System.String customInfo System.String rankName System.String rankColor System.Boolean badgeHidden System.Boolean isInvisible System.Boolean isOverwatchEnabled System.Boolean isBypassModeEnabled System.Boolean isGodModeEnabled System.Boolean isUsingStamina System.Boolean isMuted System.Boolean isIntercomMuted System.Collections.Generic.IEnumerable < ItemType > inventory System.Collections.Generic.IEnumerable < System.Object > customItems System.Collections.Generic.IEnumerable < EffectType > effects Properties | Improve this Doc View Source ArtificialHealth Declaration public float ArtificialHealth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source BadgeHidden Declaration public bool BadgeHidden { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Camera Declaration public Exiled.API.Features.Camera Camera { get; set; } Property Value Type Description Exiled.API.Features.Camera | Improve this Doc View Source CurrentItem Declaration public ItemType CurrentItem { get; set; } Property Value Type Description ItemType | Improve this Doc View Source CustomInfo Declaration public string CustomInfo { get; set; } Property Value Type Description System.String | Improve this Doc View Source CustomInventory Gets the player's custom items. Declaration public IEnumerable<object> CustomInventory { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Object > | Improve this Doc View Source CustomRole Declaration public object CustomRole { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Effects Declaration public IEnumerable<EffectType> Effects { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < EffectType > | Improve this Doc View Source Energy Declaration public float Energy { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Experience Declaration public float Experience { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Health Declaration public float Health { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Inventory Declaration public IEnumerable<ItemType> Inventory { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < ItemType > | Improve this Doc View Source IsBypassModeEnabled Declaration public bool IsBypassModeEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGodModeEnabled Declaration public bool IsGodModeEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsIntercomMuted Declaration public bool IsIntercomMuted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInvisible Declaration public bool IsInvisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMuted Declaration public bool IsMuted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOverwatchEnabled Declaration public bool IsOverwatchEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUsingStamina Declaration public bool IsUsingStamina { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Level Declaration public byte Level { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source MaxArtificialHealth Declaration public float MaxArtificialHealth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxEnergy Declaration public float MaxEnergy { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxHealth Declaration public int MaxHealth { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Nickname Declaration public string Nickname { get; set; } Property Value Type Description System.String | Improve this Doc View Source Position Declaration public Vector3 Position { get; set; } Property Value Type Description Vector3 | Improve this Doc View Source RankColor Declaration public string RankColor { get; set; } Property Value Type Description System.String | Improve this Doc View Source RankName Declaration public string RankName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Role Declaration public RoleType Role { get; set; } Property Value Type Description RoleType | Improve this Doc View Source Rotation Declaration public Vector2 Rotation { get; set; } Property Value Type Description Vector2 | Improve this Doc View Source Scale Declaration public Vector3 Scale { get; set; } Property Value Type Description Vector3 Methods | Improve this Doc View Source Apply(Player, Boolean, Boolean) Applies the current TemporaryStats instance to the specified . Declaration public void Apply(Player player, bool newInventory = true, bool lite = true) Parameters Type Name Description Player player The target. System.Boolean newInventory A value indicating whether the inventory should be reset. System.Boolean lite A value indicating whether the player should preserve the same vectors."
  },
  "api/RolePlus.ExternModule.API.Features.VirtualAssemblies.Branch.html": {
    "href": "api/RolePlus.ExternModule.API.Features.VirtualAssemblies.Branch.html",
    "title": "Class Branch | RolePlus Docs",
    "keywords": "Class Branch A tool to manage virtual assemblies. Inheritance System.Object Branch Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.VirtualAssemblies Assembly : RolePlus.dll Syntax public abstract class Branch Properties | Improve this Doc View Source BranchType Gets the BranchType . Declaration public abstract BranchType BranchType { get; } Property Value Type Description BranchType | Improve this Doc View Source Config Gets the IConfig object. Declaration public Config Config { get; set; } Property Value Type Description Config | Improve this Doc View Source IsRunning Gets a value indicating whether the branch is running. Declaration public bool IsRunning { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Master Gets the master branch's name. Declaration public string Master { get; } Property Value Type Description System.String | Improve this Doc View Source Name Gets the branch's name. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Prefix Gets the branch's prefix. Declaration public string Prefix { get; } Property Value Type Description System.String | Improve this Doc View Source Registered Gets a System.Collections.Generic.List<T> which contains all registered Branch 's. Declaration public static List<Branch> Registered { get; } Property Value Type Description System.Collections.Generic.List < Branch > | Improve this Doc View Source Version Gets the branch's System.Version . Declaration public abstract Version Version { get; } Property Value Type Description System.Version Methods | Improve this Doc View Source CreateInstance() Fired before the branch is enabled. Declaration protected virtual void CreateInstance() | Improve this Doc View Source DestroyInstance() Fired before the branch is disabled. Declaration protected virtual void DestroyInstance() | Improve this Doc View Source OnDisabled() Fired after disabling the branch. Declaration protected virtual void OnDisabled() | Improve this Doc View Source OnEnabled() Fired after enabling the branch. Declaration protected virtual void OnEnabled() | Improve this Doc View Source OnReloaded() Fired after reloading the branch. Declaration protected virtual void OnReloaded() | Improve this Doc View Source RegisterBranches() Enables all the branches present in the assembly. Declaration public static IEnumerable<Branch> RegisterBranches() Returns Type Description System.Collections.Generic.IEnumerable < Branch > A System.Collections.Generic.IEnumerable<T> of Branch which contains all the enabled branches. | Improve this Doc View Source ReloadBranches() Reloads all the branches present in the assembly. Declaration public static IEnumerable<Branch> ReloadBranches() Returns Type Description System.Collections.Generic.IEnumerable < Branch > A System.Collections.Generic.IEnumerable<T> of Branch which contains all the reloaded branches. | Improve this Doc View Source SubscribeEvents() Fired after enabling the branch. Declaration protected virtual void SubscribeEvents() | Improve this Doc View Source TryRegister() Tries to register a Branch . Declaration public bool TryRegister() Returns Type Description System.Boolean true if the Branch was registered; otherwise, false . | Improve this Doc View Source TryUnregister() Tries to unregister a Branch . Declaration public bool TryUnregister() Returns Type Description System.Boolean true if the Branch was unregistered; otherwise, false . | Improve this Doc View Source UnregisterBranches() Disables all the branches present in the assembly. Declaration public static IEnumerable<Branch> UnregisterBranches() Returns Type Description System.Collections.Generic.IEnumerable < Branch > A System.Collections.Generic.IEnumerable<T> of Branch which contains all the disabled branches. | Improve this Doc View Source UnsubscribeEvents() Fired after disabling the branch. Declaration protected virtual void UnsubscribeEvents()"
  },
  "api/RolePlus.ExternModule.API.Features.VirtualAssemblies.BranchAttribute.html": {
    "href": "api/RolePlus.ExternModule.API.Features.VirtualAssemblies.BranchAttribute.html",
    "title": "Class BranchAttribute | RolePlus Docs",
    "keywords": "Class BranchAttribute This attribute determines whether the class which is being applied to should be treated as Branch . Inheritance System.Object System.Attribute BranchAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.API.Features.VirtualAssemblies Assembly : RolePlus.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class BranchAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source BranchAttribute(String, String, String) Initializes a new instance of the BranchAttribute class. Declaration public BranchAttribute(string master, string name, string prefix) Parameters Type Name Description System.String master The master project. System.String name The branch name. System.String prefix The branch prefix. Implements System.Runtime.InteropServices._Attribute"
  },
  "api/RolePlus.ExternModule.API.Features.VirtualAssemblies.html": {
    "href": "api/RolePlus.ExternModule.API.Features.VirtualAssemblies.html",
    "title": "Namespace RolePlus.ExternModule.API.Features.VirtualAssemblies | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.API.Features.VirtualAssemblies Classes Branch A tool to manage virtual assemblies. BranchAttribute This attribute determines whether the class which is being applied to should be treated as Branch ."
  },
  "api/RolePlus.ExternModule.Events.EventArgs.html": {
    "href": "api/RolePlus.ExternModule.Events.EventArgs.html",
    "title": "Namespace RolePlus.ExternModule.Events.EventArgs | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.Events.EventArgs Classes InvokingHandlerEventArgs Contains all informations before invoking an event. SendingConsoleCommandEventArgs Contains all informations before sending a console message. SendingRemoteAdminCommandEventArgs Contains all informations before sending a remote admin message."
  },
  "api/RolePlus.ExternModule.Events.EventArgs.InvokingHandlerEventArgs.html": {
    "href": "api/RolePlus.ExternModule.Events.EventArgs.InvokingHandlerEventArgs.html",
    "title": "Class InvokingHandlerEventArgs | RolePlus Docs",
    "keywords": "Class InvokingHandlerEventArgs Contains all informations before invoking an event. Inheritance System.Object System.EventArgs InvokingHandlerEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.Events.EventArgs Assembly : RolePlus.dll Syntax public sealed class InvokingHandlerEventArgs : EventArgs Constructors | Improve this Doc View Source InvokingHandlerEventArgs(Object, Boolean) Initializes a new instance of the InvokingHandlerEventArgs class. Declaration public InvokingHandlerEventArgs(object ev, bool isAllowed = true) Parameters Type Name Description System.Object ev The event being invoked. System.Boolean isAllowed Properties | Improve this Doc View Source GenericHandler Gets the generic handler. Declaration public CustomEventHandler<EventArgs> GenericHandler { get; } Property Value Type Description CustomEventHandler < System.EventArgs > | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the event can be invoked. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets the name of the event. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source TargetHandler Gets the target handler. Declaration public CustomEventHandler TargetHandler { get; } Property Value Type Description CustomEventHandler"
  },
  "api/RolePlus.ExternModule.Events.EventArgs.SendingConsoleCommandEventArgs.html": {
    "href": "api/RolePlus.ExternModule.Events.EventArgs.SendingConsoleCommandEventArgs.html",
    "title": "Class SendingConsoleCommandEventArgs | RolePlus Docs",
    "keywords": "Class SendingConsoleCommandEventArgs Contains all informations before sending a console message. Inheritance System.Object System.EventArgs SendingConsoleCommandEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.Events.EventArgs Assembly : RolePlus.dll Syntax public sealed class SendingConsoleCommandEventArgs : EventArgs Constructors | Improve this Doc View Source SendingConsoleCommandEventArgs(Player, String, List<String>, Boolean) Initializes a new instance of the SendingConsoleCommandEventArgs class. Declaration public SendingConsoleCommandEventArgs(Player player, string name, List<string> arguments, bool isAllowed = true) Parameters Type Name Description Player player System.String name System.Collections.Generic.List < System.String > arguments System.Boolean isAllowed Properties | Improve this Doc View Source Arguments Gets the command arguments. Declaration public List<string> Arguments { get; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source Color Gets or sets the color of the return message. Declaration public string Color { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the console command can be sent. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets the command name. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Player Gets the player who's sending the command. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source ReturnMessage Gets or sets the return message, that will be shown to the user in the console. Declaration public string ReturnMessage { get; set; } Property Value Type Description System.String"
  },
  "api/RolePlus.ExternModule.Events.EventArgs.SendingRemoteAdminCommandEventArgs.html": {
    "href": "api/RolePlus.ExternModule.Events.EventArgs.SendingRemoteAdminCommandEventArgs.html",
    "title": "Class SendingRemoteAdminCommandEventArgs | RolePlus Docs",
    "keywords": "Class SendingRemoteAdminCommandEventArgs Contains all informations before sending a remote admin message. Inheritance System.Object System.EventArgs SendingRemoteAdminCommandEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.Events.EventArgs Assembly : RolePlus.dll Syntax public sealed class SendingRemoteAdminCommandEventArgs : EventArgs Constructors | Improve this Doc View Source SendingRemoteAdminCommandEventArgs(CommandSender, Player, String, List<String>, Boolean) Initializes a new instance of the SendingRemoteAdminCommandEventArgs class. Declaration public SendingRemoteAdminCommandEventArgs(CommandSender commandSender, Player sender, string name, List<string> arguments, bool isAllowed = true) Parameters Type Name Description CommandSender commandSender Player sender System.String name System.Collections.Generic.List < System.String > arguments System.Boolean isAllowed Properties | Improve this Doc View Source Arguments Gets the command arguments. Declaration public List<string> Arguments { get; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source CommandSender Gets the CommandSender sending the command. Declaration public CommandSender CommandSender { get; } Property Value Type Description CommandSender | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the RemoteAdmin command can be sent. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets the command name. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source ReplyMessage Gets or sets the message that will be returned back to the CommandSender . Declaration public string ReplyMessage { get; set; } Property Value Type Description System.String | Improve this Doc View Source Sender Gets the player who's sending the command. Declaration public Player Sender { get; } Property Value Type Description Player | Improve this Doc View Source Success Gets or sets a value indicating whether whether or not the command was a success. Declaration public bool Success { get; set; } Property Value Type Description System.Boolean"
  },
  "api/RolePlus.ExternModule.Events.Handlers.html": {
    "href": "api/RolePlus.ExternModule.Events.Handlers.html",
    "title": "Namespace RolePlus.ExternModule.Events.Handlers | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule.Events.Handlers Classes Server Server related events."
  },
  "api/RolePlus.ExternModule.Events.Handlers.Server.html": {
    "href": "api/RolePlus.ExternModule.Events.Handlers.Server.html",
    "title": "Class Server | RolePlus Docs",
    "keywords": "Class Server Server related events. Inheritance System.Object Server Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule.Events.Handlers Assembly : RolePlus.dll Syntax public static class Server Methods | Improve this Doc View Source OnInvokingHandler(InvokingHandlerEventArgs) Called before invoking an event. Declaration public static void OnInvokingHandler(InvokingHandlerEventArgs ev) Parameters Type Name Description InvokingHandlerEventArgs ev The InvokingHandlerEventArgs instance. | Improve this Doc View Source OnSendingConsoleCommand(SendingConsoleCommandEventArgs) Called before sending a console command. Declaration public static void OnSendingConsoleCommand(SendingConsoleCommandEventArgs ev) Parameters Type Name Description SendingConsoleCommandEventArgs ev The SendingConsoleCommandEventArgs instance. | Improve this Doc View Source OnSendingRemoteAdminCommand(SendingRemoteAdminCommandEventArgs) Called before sending a RA command. Declaration public static void OnSendingRemoteAdminCommand(SendingRemoteAdminCommandEventArgs ev) Parameters Type Name Description SendingRemoteAdminCommandEventArgs ev The SendingRemoteAdminCommandEventArgs instance. Events | Improve this Doc View Source InvokingHandler Invoked before invoking an event. Declaration public static event Delegates.TEventHandler<InvokingHandlerEventArgs> InvokingHandler Event Type Type Description Delegates.TEventHandler < InvokingHandlerEventArgs > | Improve this Doc View Source SendingConsoleCommand Invoked before sending a console command. Declaration public static event Delegates.TEventHandler<SendingConsoleCommandEventArgs> SendingConsoleCommand Event Type Type Description Delegates.TEventHandler < SendingConsoleCommandEventArgs > | Improve this Doc View Source SendingRemoteAdminCommand Invoked before sending a RA command. Declaration public static event Delegates.TEventHandler<SendingRemoteAdminCommandEventArgs> SendingRemoteAdminCommand Event Type Type Description Delegates.TEventHandler < SendingRemoteAdminCommandEventArgs >"
  },
  "api/RolePlus.ExternModule.HLAPI.html": {
    "href": "api/RolePlus.ExternModule.HLAPI.html",
    "title": "Class HLAPI | RolePlus Docs",
    "keywords": "Class HLAPI The fully exposed methods and properties library. Inheritance System.Object HLAPI Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.ExternModule Assembly : RolePlus.dll Syntax public static class HLAPI Properties | Improve this Doc View Source IgnoredNoClipPlayers Gets a System.Collections.Generic.HashSet<T> of containing all the players that are currently ignored by functions which use NoClip event(s) as base-logic. Declaration public static HashSet<Player> IgnoredNoClipPlayers { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source IsRespawnEnabled Gets or sets a value indicating whether or not the RespawnSystem is enabled. Declaration public static bool IsRespawnEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRoundLocked Gets or sets a value indicating whether or not the round is locked. Declaration public static bool IsRoundLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsWaitingForPlayers Gets a value indicating whether or not the RespawnSystem is waiting for players. Declaration public static bool IsWaitingForPlayers { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LastSpawnedPlayers Gets or sets a System.Collections.Generic.HashSet<T> containing all 's from the last respawn wave. Declaration public static HashSet<Player> LastSpawnedPlayers { get; set; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source NextKnownTeam Gets a value containing the NextRespawnTeam info. Declaration public static CustomTeam.RespawnInfo NextKnownTeam { get; } Property Value Type Description CustomTeam.RespawnInfo | Improve this Doc View Source RegisteredBranches Gets a System.Collections.Generic.IReadOnlyList<T> of available Branch es. Declaration public static IEnumerable<Branch> RegisteredBranches { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Branch > | Improve this Doc View Source RegisteredGamemodes Gets a System.Collections.Generic.List<T> of all available CustomGamemode s. Declaration public static IEnumerable<CustomGamemode> RegisteredGamemodes { get; } Property Value Type Description System.Collections.Generic.IEnumerable < CustomGamemode > | Improve this Doc View Source RegisteredRoles Gets a System.Collections.Generic.List<T> of all available CustomRole s. Declaration public static IEnumerable<CustomRole> RegisteredRoles { get; } Property Value Type Description System.Collections.Generic.IEnumerable < CustomRole > | Improve this Doc View Source RegisteredTeams Gets a System.Collections.Generic.List<T> of all available CustomTeam s. Declaration public static IEnumerable<CustomTeam> RegisteredTeams { get; } Property Value Type Description System.Collections.Generic.IEnumerable < CustomTeam > | Improve this Doc View Source RespawnSystem Gets or sets a value indicating whether or not the RespawnSystem is enabled. Declaration public static RespawnSystem RespawnSystem { get; set; } Property Value Type Description RespawnSystem | Improve this Doc View Source RoleManager Gets the Manager . Declaration public static HashSet<Player> RoleManager { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source SchematicObjects Gets a System.Collections.Generic.List<T> containing all the spawned schematics. Declaration public static List<SchematicObject> SchematicObjects { get; } Property Value Type Description System.Collections.Generic.List < SchematicObject > | Improve this Doc View Source TeamManager Gets the Manager . Declaration public static HashSet<Player> TeamManager { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source TimeUntilNextRespawn Gets the RolePlus.CustomTeams.RespawnManager.TimeUntilNextRespawn . Declaration public static int TimeUntilNextRespawn { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source WorldEscape Gets the component. Declaration public static Escape WorldEscape { get; } Property Value Type Description Escape | Improve this Doc View Source WorldEscapePosition Gets the world's escape position. Declaration public static Vector3 WorldEscapePosition { get; } Property Value Type Description Vector3 | Improve this Doc View Source WorldEscapeRadius Gets the world's escape radius. Declaration public static float WorldEscapeRadius { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source _MakeFall(Player, Vector3) Declaration public static IEnumerator<float> _MakeFall(this Player player, Vector3 position = null) Parameters Type Name Description Player player Vector3 position Returns Type Description System.Collections.Generic.IEnumerator < System.Single > | Improve this Doc View Source _PocketDimensionTeleport(Scp106PlayerScript, Vector3) Declaration public static IEnumerator<float> _PocketDimensionTeleport(Scp106PlayerScript scp106PlayerScript, Vector3 position) Parameters Type Name Description Scp106PlayerScript scp106PlayerScript Vector3 position Returns Type Description System.Collections.Generic.IEnumerator < System.Single > | Improve this Doc View Source AddItem(Player, IEnumerable<Object>) Adds a System.Collections.Generic.IEnumerable<T> of System.Object containing all the custom items to the player's inventory. Declaration public static void AddItem(this Player player, IEnumerable<object> customItemTypes) Parameters Type Name Description Player player The specified . System.Collections.Generic.IEnumerable < System.Object > customItemTypes The custom items to be added. | Improve this Doc View Source AddItem(Player, Object) Add a of the specified CustomItemType to the player's inventory. Declaration public static bool AddItem(this Player player, object customItem) Parameters Type Name Description Player player The specified . System.Object customItem The item to be added. Returns Type Description System.Boolean true if the item has been given to the player; otherwise, false . | Improve this Doc View Source CanLookToPlayer(Exiled.API.Features.Camera, Player, Single) Gets a value indicating whether the given can look to the specified . Declaration public static bool CanLookToPlayer(this Exiled.API.Features.Camera camera, Player player, float maxDistance) Parameters Type Name Description Exiled.API.Features.Camera camera The camera watcher. Player player The target. System.Single maxDistance The maximum distance before dropping the check. Returns Type Description System.Boolean true if the camera can look to player ; otherwise, false . | Improve this Doc View Source CanLookToPlayer(Player, Player, Single) Gets a value indicating whether the given can look to the specified . Declaration public static bool CanLookToPlayer(this Player watcher, Player player, float maxDistance) Parameters Type Name Description Player watcher The watcher. Player player The target. System.Single maxDistance The maximum distance before dropping the check. Returns Type Description System.Boolean true if the watcher can look to player ; otherwise, false . | Improve this Doc View Source GetCustomItem(Item) Gets a from the specified instance. Declaration public static CustomItem? GetCustomItem(this Item item) Parameters Type Name Description Item item The to check. Returns Type Description System.Nullable < CustomItem > The corresponding System.Object ; otherwise, null . | Improve this Doc View Source GetCustomItem(Pickup) Gets a from the given instance. Declaration public static CustomItem? GetCustomItem(this Pickup pickup) Parameters Type Name Description Pickup pickup The to check. Returns Type Description System.Nullable < CustomItem > The corresponding or null if not found. | Improve this Doc View Source GetCustomItems(Player) Gets a System.Collections.Generic.IEnumerable<T> of System.Object containing all the custom items in player 's inventory. Declaration public static IEnumerable<CustomItem> GetCustomItems(this Player player) Parameters Type Name Description Player player The player to check. Returns Type Description System.Collections.Generic.IEnumerable < CustomItem > A System.Collections.Generic.IEnumerable<T> of System.Object which contains all the custom items found. | Improve this Doc View Source GetCustomItems(IEnumerable<Item>) Gets a System.Collections.Generic.IEnumerable<T> of System.Object containing all the custom items in items . Declaration public static IEnumerable<CustomItem> GetCustomItems(this IEnumerable<Item> items) Parameters Type Name Description System.Collections.Generic.IEnumerable < Item > items The items to check. Returns Type Description System.Collections.Generic.IEnumerable < CustomItem > A System.Collections.Generic.IEnumerable<T> of System.Object which contains all the custom items found. | Improve this Doc View Source GetCustomRole(Player) Gets the player's CustomRole . Declaration public static CustomRole GetCustomRole(this Player player) Parameters Type Name Description Player player The specified . Returns Type Description CustomRole The found CustomRole , or null if not found. | Improve this Doc View Source GetCustomRoleType(Player) Gets the player's Id . Declaration public static object GetCustomRoleType(this Player player) Parameters Type Name Description Player player The specified . Returns Type Description System.Object The corresponding System.Object . | Improve this Doc View Source GetEffectTypes(Player) Gets a System.Collections.Generic.IEnumerable<T> of from the specified player. Declaration public static IEnumerable<EffectType> GetEffectTypes(this Player player) Parameters Type Name Description Player player The player to check. Returns Type Description System.Collections.Generic.IEnumerable < EffectType > A System.Collections.Generic.IEnumerable<T> of . | Improve this Doc View Source GetNetworkIdentity(String) Gets a Mirror.NetworkIdentity given its name. Declaration public static NetworkIdentity GetNetworkIdentity(string name) Parameters Type Name Description System.String name The name of the Mirror.NetworkIdentity to look for. Returns Type Description Mirror.NetworkIdentity The corresponding Mirror.NetworkIdentity or null if not found. | Improve this Doc View Source HasCustomRole(Player) Gets a value indicating whether or not the has a CustomRole . Declaration public static bool HasCustomRole(this Player player) Parameters Type Name Description Player player The specified . Returns Type Description System.Boolean true if the has a CustomRole ; otherwise, false . | Improve this Doc View Source InvalidateCommandUsage(ICommand, String, out String) Invalidates the usage of a . Declaration public static bool InvalidateCommandUsage(ICommand command, string error, out string response) Parameters Type Name Description ICommand command The command to check. System.String error The error message. System.String response The response. Returns Type Description System.Boolean Always false . | Improve this Doc View Source InvalidateCommandUsage(ParentCommand, out String) Validates the usage of a returning all the available commands if the check fails. Declaration public static bool InvalidateCommandUsage(ParentCommand parentCommand, out string response) Parameters Type Name Description ParentCommand parentCommand The command to check. System.String response The response. Returns Type Description System.Boolean Always false . | Improve this Doc View Source IsCustomScp(Player) Gets a value indicating whether or not the is a Custom SCP. Declaration public static bool IsCustomScp(this Player player) Parameters Type Name Description Player player The specified . Returns Type Description System.Boolean true if the is a custom scp; otherwise, false . | Improve this Doc View Source IsStuck(Vector3) Gets a value indicating whether the given position is stuck. Declaration public static bool IsStuck(this Vector3 position) Parameters Type Name Description Vector3 position The position to check. Returns Type Description System.Boolean true if the positio position is stuck; otherwise, false . | Improve this Doc View Source MakeFall(Player, Vector3) Makes the specified fall to the given position. Declaration public static void MakeFall(this Player player, Vector3 position = null) Parameters Type Name Description Player player The target to make fall. Vector3 position The fall position. | Improve this Doc View Source MoveNetworkIdentityObject(NetworkIdentity, Vector3) Moves a Mirror.NetworkIdentity to a new position. Declaration public static void MoveNetworkIdentityObject(this NetworkIdentity identity, Vector3 pos) Parameters Type Name Description Mirror.NetworkIdentity identity The object to move. Vector3 pos The new position. | Improve this Doc View Source PocketDimensionTeleport(Player, Vector3) Teleports the specified to the given position through SCP-106 mechanics. Declaration public static void PocketDimensionTeleport(this Player player, Vector3 position) Parameters Type Name Description Player player The target to teleport. Vector3 position The position to which teleport the target. | Improve this Doc View Source SafeDropItem(Player, Item) Safely drops an item in order to support custom items. Declaration public static void SafeDropItem(this Player player, Item item) Parameters Type Name Description Player player The target. Item item The item to be dropped. | Improve this Doc View Source SetRole(Player, CustomRole) Sets the player's CustomRole . Declaration public static void SetRole(this Player player, CustomRole customRole) Parameters Type Name Description Player player The specified . CustomRole customRole The role to be set. | Improve this Doc View Source SetRole(Player, Object, Boolean) Sets the player's CustomRole . Declaration public static void SetRole(this Player player, object customRole, bool shouldKeepPosition = false) Parameters Type Name Description Player player The specified . System.Object customRole The role to be set. System.Boolean shouldKeepPosition | Improve this Doc View Source SpawnActiveGrenade(Vector3, Boolean, Single, Player) Spawns an active grenade. Declaration public static void SpawnActiveGrenade(this Vector3 position, bool isFlash = false, float fuseDuration = 0.1F, Player owner = null) Parameters Type Name Description Vector3 position The position on which spawn the grenade. System.Boolean isFlash A value indicating whether the grenade is . System.Single fuseDuration The fuse duration. Player owner The owner of the grenade. | Improve this Doc View Source SpawnActiveGrenade(Vector3, Single, Single, Player) Spawns an active grenade. Declaration public static void SpawnActiveGrenade(this Vector3 position, float magnitude, float fuseDuration = 0.1F, Player owner = null) Parameters Type Name Description Vector3 position The position on which spawn the grenade. System.Single magnitude The explosion radius. System.Single fuseDuration The fuse duration. Player owner The owner of the grenade. | Improve this Doc View Source SpawnTeam(CustomTeamType) Spawns the specified RolePlus.CustomTeams.CustomTeamType . Declaration public static void SpawnTeam(CustomTeamType customTeamType) Parameters Type Name Description RolePlus.CustomTeams.CustomTeamType customTeamType The team to be spawned. | Improve this Doc View Source SpawnTeam(CustomTeam) Spawns the specified CustomTeam . Declaration public static void SpawnTeam(CustomTeam customTeam) Parameters Type Name Description CustomTeam customTeam The team to be spawned. | Improve this Doc View Source TryGetCustomItem(Item, out CustomItem) Tries to get a from the given instance. Declaration public static bool TryGetCustomItem(this Item item, out CustomItem customItem) Parameters Type Name Description Item item The to check. CustomItem customItem The result. Returns Type Description System.Boolean true if the given item is a ; otherwise, false . | Improve this Doc View Source TryGetCustomItem(Pickup, out CustomItem) Tries to get a from the given instance. Declaration public static bool TryGetCustomItem(this Pickup pickup, out CustomItem customItem) Parameters Type Name Description Pickup pickup The to check. CustomItem customItem The result. Returns Type Description System.Boolean true if the given pickup is a ; otherwise, false . | Improve this Doc View Source TryGetCustomRole(Player, out CustomRole) Gets the player's CustomRole . Declaration public static bool TryGetCustomRole(this Player player, out CustomRole customRole) Parameters Type Name Description Player player The specified . CustomRole customRole The CustomRole result. Returns Type Description System.Boolean The found CustomRole , or null if not found. | Improve this Doc View Source ValidateCommandUsage(ICommand, ICommandSender, PlayerPermissions[], out String) Validates the usage of a returning all the available commands if the check fails. Declaration public static bool ValidateCommandUsage(ICommand command, ICommandSender sender, PlayerPermissions[] requiredPermissions, out string response) Parameters Type Name Description ICommand command The command to check. ICommandSender sender The command sender. PlayerPermissions [] requiredPermissions The required permissions. System.String response The response. Returns Type Description System.Boolean true if the command can be validated; otherwise, false . | Improve this Doc View Source ValidateCommandUsage(ICommand, ICommandSender, String, out String) Validates the usage of a returning all the available commands if the check fails. Declaration public static bool ValidateCommandUsage(ICommand command, ICommandSender sender, string requiredPermission, out string response) Parameters Type Name Description ICommand command The command to check. ICommandSender sender The command sender. System.String requiredPermission The required permission. System.String response The response. Returns Type Description System.Boolean true if the command can be validated; otherwise, false . | Improve this Doc View Source ValidateCommandUsage(ICommand, ArraySegment<String>, Int32[], out String) Validates the usage of a . Declaration public static bool ValidateCommandUsage(ICommand command, ArraySegment<string> arguments, int[] requiredArgs, out string response) Parameters Type Name Description ICommand command The command to check. System.ArraySegment < System.String > arguments The command arguments. System.Int32 [] requiredArgs The required arguments . System.String response The response. Returns Type Description System.Boolean true if the command can be validated; otherwise, false ."
  },
  "api/RolePlus.ExternModule.html": {
    "href": "api/RolePlus.ExternModule.html",
    "title": "Namespace RolePlus.ExternModule | RolePlus Docs",
    "keywords": "Namespace RolePlus.ExternModule Classes HLAPI The fully exposed methods and properties library."
  },
  "api/RolePlus.Firewalls.Rules.AntiPreAuth.html": {
    "href": "api/RolePlus.Firewalls.Rules.AntiPreAuth.html",
    "title": "Class AntiPreAuth | RolePlus Docs",
    "keywords": "Class AntiPreAuth A rule to handle preauth attacks. Inheritance System.Object TypeCastObject < TRule < System.Net.IPAddress >> TRule < System.Net.IPAddress > AntiPreAuth Inherited Members TRule<IPAddress>.Allowlist TRule<IPAddress>.Denylist TRule<IPAddress>.NetworkSync() TRule<IPAddress>.Log(String) TRule<IPAddress>.Allow(IPAddress) TRule<IPAddress>.Deny(IPAddress) TRule<IPAddress>.IsAllowed(IPAddress) TRule<IPAddress>.IsDenied(IPAddress) TypeCastObject<TRule<IPAddress>>.Cast<T>() TypeCastObject<TRule<IPAddress>>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.Firewalls.Rules Assembly : RolePlus.dll Syntax [Rule(\"NetworkFirewall\")] public class AntiPreAuth : TRule<IPAddress> Fields | Improve this Doc View Source _count Declaration public static int _count Field Value Type Description System.Int32 Properties | Improve this Doc View Source Name Declaration public override string Name { get; protected set; } Property Value Type Description System.String Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.Name Methods | Improve this Doc View Source Load() Declaration public override void Load() Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.Load() | Improve this Doc View Source TryParse(String, out IPAddress) Declaration public override bool TryParse(string raw, out IPAddress data) Parameters Type Name Description System.String raw System.Net.IPAddress data Returns Type Description System.Boolean Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.TryParse(System.String, System.Net.IPAddress) | Improve this Doc View Source Unload() Declaration public override void Unload() Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.Unload()"
  },
  "api/RolePlus.Firewalls.Rules.AntiRaid.html": {
    "href": "api/RolePlus.Firewalls.Rules.AntiRaid.html",
    "title": "Class AntiRaid | RolePlus Docs",
    "keywords": "Class AntiRaid A rule to handle Steam accounts. Inheritance System.Object TypeCastObject < TRule < UNetEntity >> TRule < UNetEntity > AntiRaid Inherited Members TRule<UNetEntity>.Allowlist TRule<UNetEntity>.Denylist TRule<UNetEntity>.NetworkSync() TRule<UNetEntity>.Log(String) TRule<UNetEntity>.Allow(UNetEntity) TRule<UNetEntity>.Deny(UNetEntity) TRule<UNetEntity>.IsAllowed(UNetEntity) TRule<UNetEntity>.IsDenied(UNetEntity) TypeCastObject<TRule<UNetEntity>>.Cast<T>() TypeCastObject<TRule<UNetEntity>>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.Firewalls.Rules Assembly : RolePlus.dll Syntax [Rule(\"UNetFirewall\")] public class AntiRaid : TRule<UNetEntity> Properties | Improve this Doc View Source APIKey Gets or sets the API key. Declaration public string APIKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source DenyAge Gets or sets a value indicating whether the rule should deny steam not-aged accounts. Declaration public bool DenyAge { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source DenyMessage Gets or sets the message to be displayed when the rule denies the connection. Declaration public string DenyMessage { get; set; } Property Value Type Description System.String | Improve this Doc View Source DenyPrivate Gets or sets a value indicating whether the rule should deny steam private accounts. Declaration public bool DenyPrivate { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MinAge Gets or sets the minimum age of the account to not be denied. Declaration public int MinAge { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Name Declaration public override string Name { get; protected set; } Property Value Type Description System.String Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetEntity>.Name Methods | Improve this Doc View Source Load() Declaration public override void Load() Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetEntity>.Load() | Improve this Doc View Source TryParse(String, out UNetEntity) Declaration public override bool TryParse(string raw, out UNetEntity data) Parameters Type Name Description System.String raw UNetEntity data Returns Type Description System.Boolean Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetEntity>.TryParse(System.String, RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetEntity) | Improve this Doc View Source Unload() Declaration public override void Unload() Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetEntity>.Unload()"
  },
  "api/RolePlus.Firewalls.Rules.FailoverNetwork.html": {
    "href": "api/RolePlus.Firewalls.Rules.FailoverNetwork.html",
    "title": "Class FailoverNetwork | RolePlus Docs",
    "keywords": "Class FailoverNetwork A rule to handle DDoS attacks. Inheritance System.Object TypeCastObject < TRule < System.Net.IPAddress >> TRule < System.Net.IPAddress > FailoverNetwork Inherited Members TRule<IPAddress>.Allowlist TRule<IPAddress>.Denylist TRule<IPAddress>.Log(String) TRule<IPAddress>.Allow(IPAddress) TRule<IPAddress>.Deny(IPAddress) TRule<IPAddress>.IsAllowed(IPAddress) TRule<IPAddress>.IsDenied(IPAddress) TypeCastObject<TRule<IPAddress>>.Cast<T>() TypeCastObject<TRule<IPAddress>>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.Firewalls.Rules Assembly : RolePlus.dll Syntax [Rule(\"NetworkFirewall\")] public class FailoverNetwork : TRule<IPAddress> Properties | Improve this Doc View Source FailoverPort Gets the port to which redirect the connection. Declaration public ushort FailoverPort { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source IsServerUnderAttack Gets or sets a value indicating whether the server is under attack. Declaration public bool IsServerUnderAttack { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxLatency Gets the maximum latency allowed. Declaration public int MaxLatency { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Name Declaration public override string Name { get; protected set; } Property Value Type Description System.String Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.Name Methods | Improve this Doc View Source Load() Declaration public override void Load() Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.Load() | Improve this Doc View Source NetworkSync() Declaration protected override void NetworkSync() Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.NetworkSync() | Improve this Doc View Source TryParse(String, out IPAddress) Declaration public override bool TryParse(string raw, out IPAddress data) Parameters Type Name Description System.String raw System.Net.IPAddress data Returns Type Description System.Boolean Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.TryParse(System.String, System.Net.IPAddress) | Improve this Doc View Source Unload() Declaration public override void Unload() Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.Unload()"
  },
  "api/RolePlus.Firewalls.Rules.html": {
    "href": "api/RolePlus.Firewalls.Rules.html",
    "title": "Namespace RolePlus.Firewalls.Rules | RolePlus Docs",
    "keywords": "Namespace RolePlus.Firewalls.Rules Classes AntiPreAuth A rule to handle preauth attacks. AntiRaid A rule to handle Steam accounts. FailoverNetwork A rule to handle DDoS attacks. ProxyRedirect A rule to handle connections on multiple ports. SteamSanitizer A rule to handle Steam accounts. VPNShield A rule to handle VPNs."
  },
  "api/RolePlus.Firewalls.Rules.ProxyRedirect.html": {
    "href": "api/RolePlus.Firewalls.Rules.ProxyRedirect.html",
    "title": "Class ProxyRedirect | RolePlus Docs",
    "keywords": "Class ProxyRedirect A rule to handle connections on multiple ports. Inheritance System.Object TypeCastObject < TRule < System.Net.IPAddress >> TRule < System.Net.IPAddress > ProxyRedirect Inherited Members TRule<IPAddress>.Allowlist TRule<IPAddress>.Denylist TRule<IPAddress>.NetworkSync() TRule<IPAddress>.Log(String) TRule<IPAddress>.Allow(IPAddress) TRule<IPAddress>.Deny(IPAddress) TRule<IPAddress>.IsAllowed(IPAddress) TRule<IPAddress>.IsDenied(IPAddress) TypeCastObject<TRule<IPAddress>>.Cast<T>() TypeCastObject<TRule<IPAddress>>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.Firewalls.Rules Assembly : RolePlus.dll Syntax [Rule(\"NetworkFirewall\")] public class ProxyRedirect : TRule<IPAddress> Properties | Improve this Doc View Source Name Declaration public override string Name { get; protected set; } Property Value Type Description System.String Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.Name | Improve this Doc View Source RedirectPort Gets the port to which redirect the connection. Declaration public ushort RedirectPort { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source ShouldRedirect Gets a value indicating whether the proxy should be redirect the connection. Declaration public bool ShouldRedirect { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Load() Declaration public override void Load() Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.Load() | Improve this Doc View Source TryParse(String, out IPAddress) Declaration public override bool TryParse(string raw, out IPAddress data) Parameters Type Name Description System.String raw System.Net.IPAddress data Returns Type Description System.Boolean Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.TryParse(System.String, System.Net.IPAddress) | Improve this Doc View Source Unload() Declaration public override void Unload() Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.Unload()"
  },
  "api/RolePlus.Firewalls.Rules.SteamSanitizer.html": {
    "href": "api/RolePlus.Firewalls.Rules.SteamSanitizer.html",
    "title": "Class SteamSanitizer | RolePlus Docs",
    "keywords": "Class SteamSanitizer A rule to handle Steam accounts. Inheritance System.Object TypeCastObject < TRule < UNetEntity >> TRule < UNetEntity > SteamSanitizer Inherited Members TRule<UNetEntity>.Allowlist TRule<UNetEntity>.Denylist TRule<UNetEntity>.NetworkSync() TRule<UNetEntity>.Log(String) TRule<UNetEntity>.Allow(UNetEntity) TRule<UNetEntity>.Deny(UNetEntity) TRule<UNetEntity>.IsAllowed(UNetEntity) TRule<UNetEntity>.IsDenied(UNetEntity) TypeCastObject<TRule<UNetEntity>>.Cast<T>() TypeCastObject<TRule<UNetEntity>>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.Firewalls.Rules Assembly : RolePlus.dll Syntax [Rule(\"UNetFirewall\")] public class SteamSanitizer : TRule<UNetEntity> Properties | Improve this Doc View Source DenyLimited Gets or sets a value indicating whether the rule should deny steam limited accounts. Declaration public bool DenyLimited { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source DenyMessage Gets or sets the message to be displayed when the rule denies the connection. Declaration public string DenyMessage { get; set; } Property Value Type Description System.String | Improve this Doc View Source DenyVACBanned Gets or sets a value indicating whether the rule should deny steam VAC banned accounts. Declaration public bool DenyVACBanned { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public override string Name { get; protected set; } Property Value Type Description System.String Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetEntity>.Name Methods | Improve this Doc View Source Load() Declaration public override void Load() Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetEntity>.Load() | Improve this Doc View Source TryParse(String, out UNetEntity) Declaration public override bool TryParse(string raw, out UNetEntity data) Parameters Type Name Description System.String raw UNetEntity data Returns Type Description System.Boolean Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetEntity>.TryParse(System.String, RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetEntity) | Improve this Doc View Source Unload() Declaration public override void Unload() Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<RolePlus.ExternModule.API.Engine.Framework.Network.Models.UNetEntity>.Unload()"
  },
  "api/RolePlus.Firewalls.Rules.VPNShield.html": {
    "href": "api/RolePlus.Firewalls.Rules.VPNShield.html",
    "title": "Class VPNShield | RolePlus Docs",
    "keywords": "Class VPNShield A rule to handle VPNs. Inheritance System.Object TypeCastObject < TRule < System.Net.IPAddress >> TRule < System.Net.IPAddress > VPNShield Inherited Members TRule<IPAddress>.Allowlist TRule<IPAddress>.Denylist TRule<IPAddress>.NetworkSync() TRule<IPAddress>.Log(String) TRule<IPAddress>.Allow(IPAddress) TRule<IPAddress>.Deny(IPAddress) TRule<IPAddress>.IsAllowed(IPAddress) TRule<IPAddress>.IsDenied(IPAddress) TypeCastObject<TRule<IPAddress>>.Cast<T>() TypeCastObject<TRule<IPAddress>>.Cast<T>(T) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : RolePlus.Firewalls.Rules Assembly : RolePlus.dll Syntax [Rule(\"UNetFirewall\")] public class VPNShield : TRule<IPAddress> Properties | Improve this Doc View Source APIKey Gets or sets the API key. Declaration public string APIKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source DenyMessage Gets or sets the message to be displayed when the rule denies the connection. Declaration public string DenyMessage { get; set; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public override string Name { get; protected set; } Property Value Type Description System.String Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.Name Methods | Improve this Doc View Source Load() Declaration public override void Load() Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.Load() | Improve this Doc View Source TryParse(String, out IPAddress) Declaration public override bool TryParse(string raw, out IPAddress data) Parameters Type Name Description System.String raw System.Net.IPAddress data Returns Type Description System.Boolean Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.TryParse(System.String, System.Net.IPAddress) | Improve this Doc View Source Unload() Declaration public override void Unload() Overrides RolePlus.ExternModule.API.Engine.Framework.Network.TRule<System.Net.IPAddress>.Unload()"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | RolePlus Docs",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | RolePlus Docs",
    "keywords": "This is the HOMEPAGE . Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}